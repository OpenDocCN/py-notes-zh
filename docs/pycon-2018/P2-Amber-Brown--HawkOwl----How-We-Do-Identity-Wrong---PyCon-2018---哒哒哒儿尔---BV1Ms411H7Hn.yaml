- en: P2：Amber Brown (HawkOwl) - How We Do Identity Wrong - PyCon 2018 - 哒哒哒儿尔 - BV1Ms411H7Hn
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P2：Amber Brown (HawkOwl) - 我们如何错误地定义身份 - PyCon 2018 - 哒哒哒儿尔 - BV1Ms411H7Hn
- en: \>\> Hey folks。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: \>\> 大家好。
- en: '![](img/d45b30615b68404326f0ac6141e80b26_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d45b30615b68404326f0ac6141e80b26_1.png)'
- en: \>\> Hello。 \>\> Hey everyone。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: \>\> 你好。 \>\> 嘿，大家好。
- en: '![](img/d45b30615b68404326f0ac6141e80b26_3.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d45b30615b68404326f0ac6141e80b26_3.png)'
- en: So one request， if we could try and sit in the center of the row so people who
    arrive。 late can fit in the edges。 Also， let's all welcome Amber Brown who's talking
    about how we do identity wrong。 \>\> Hello。 Can you hear me okay？ All good？ Great。
    So I am Amber Brown， computer al team lover。 On the angry bird website you can
    find me at at hokey al。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 所以有一个请求，如果我们能尽量坐在排的中间，这样迟到的人可以坐在边缘。另外，让我们一起欢迎Amber Brown，她将谈论我们如何错误地定义身份。 \>\>
    你好，你能听到我吗？都好吗？太好了。我是Amber Brown，计算机AI团队的爱好者。在愤怒的小鸟网站上，你可以在at hokey al找到我。
- en: I live in -- I help from Melbourne Australia and my website is links for now。net
    if you want。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我住在——我来自澳大利亚墨尔本，如果你需要的话，我的网站是linksfornow.net。
- en: '![](img/d45b30615b68404326f0ac6141e80b26_5.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d45b30615b68404326f0ac6141e80b26_5.png)'
- en: to find me。 So what is identity？ Who even knows？
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 那么身份是什么呢？谁知道呢？
- en: '![](img/d45b30615b68404326f0ac6141e80b26_7.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d45b30615b68404326f0ac6141e80b26_7.png)'
- en: \>\> The identity of a person is the characteristics they have that distinguish
    them from others。 This is composed of internal and external attributes。 Generally
    your internal attributes are relatively unchangeable。 They are things like your
    personality， your gender and your life experience。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: \>\> 一个个体的身份是将他们与他人区分开来的特征。这由内部和外部属性组成。通常，你的内部属性相对不变。它们包括你的个性、性别和生活经历。
- en: But external attributes tend to change more。 Things like your address。 especially
    if you are a millennial and you move every year like， me。 Your birth date。 Now
    sometimes there are some wacky things that happen with that。 Especially if you
    are old and were born before computerized birth certificates。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 外部属性往往变化较大。比如你的地址，尤其是如果你像我一样是千禧一代，每年都会搬家。你的出生日期。有时候这方面会发生一些奇怪的事情，特别是如果你年纪大并且在电子化出生证明出现之前出生。
- en: Some people don't know their birth dates。 Your nationality might change。 You
    might move to a different country。 You might become a citizen of somewhere else。
    The country of your birth might cease to exist and form into another。 Your name
    can also change throughout your life。 As well as some things that people think
    that stay relatively static like your social security。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人不知道他们的出生日期。你的国籍可能会改变。你可能会搬到另一个国家，或成为其他地方的公民。你出生的国家可能会消失并形成另一个。你的名字也可能会在你的一生中改变。以及一些人认为相对静态的事物，比如你的社会安全。
- en: number and your Medicare number。 But we as developers we need to sometimes know
    information about users。 So what do we generally store？ Name and address is pretty
    common if you are sending people anything。 Data birth， it is important to know
    that maybe your users are old enough to see such content。 or sign contracts or
    do other sorts of things that your website might want to do。 The nationality。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 但是作为开发人员，我们有时需要了解用户的信息。那么我们通常存储什么呢？姓名和地址是很常见的，尤其是当你要给人寄东西时。出生日期也很重要，因为你需要知道用户是否足够年龄看到这样的内容，或签署合同或进行你的网站可能需要的其他操作。国籍。
- en: sometimes you need to record that in case like for example you are the， United
    States Esther。 You need to know what country someone is passport is from。 Their
    gender。 possibly we store that a lot。 Their social security number or Medicare
    number for looking up in government systems and other。 sorts of small attributes
    like that。 Now which of these is immutable？
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你需要记录这些信息，以防例如你是美国的埃斯瑟。你需要知道某人的护照来自哪个国家。他们的性别。我们可能会存储这些信息。他们的社会安全号码或医疗保险号码，以便在政府系统中查找，以及其他小属性。现在这些中哪一项是不可变的？
- en: None of them really unfortunately。 Reality doesn't really fit in well-defined
    boxes。 And we as software developers love finally defined boxes。 It's great if
    most things can fit in a single role in a database and never change and not。 have
    issues that wake you up at 3am where suddenly it's someone with a Unicode name
    types。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，实际上没有。现实并不适合明确定义的框架。作为软件开发人员，我们喜欢明确定义的框架。如果大多数事物可以在数据库中放入一个角色并且永不改变，而不会出现半夜3点让你醒来的问题，那真是太好了。
- en: in their name in Unicode and then suddenly your website falls over。 Let's tackle
    the problem of names。 We screw these up a lot。 Now most Anglo countries such as
    England and Australia and the United States will generally。 format a name like
    this。 You will have a title or an orific such as Dr。 Professor。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在他们的名字中使用Unicode，然后突然你的网站就崩溃了。让我们解决名字的问题。我们经常搞错这一点。现在大多数英语国家，如英国、澳大利亚和美国，通常会将名字格式化为这样。你会有一个头衔或职位，比如Dr.或Professor。
- en: a given name like for example my name is， Amber。 My middle name which is Hawkey。
    my family name which is Brown and post normal titles for example。 PhD or MD or
    something like that which I don't have because I'm uneducated。 Here is someone
    that a lot of us should know that very well fits these boxes。 Lady， Augusta， Ada。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 比如我名字是，Amber。我的中间名是Hawkey。我的姓是Brown，还有一些正常的头衔，比如PhD或MD之类的，但我没有，因为我没有受过教育。这里有一个我们很多人应该非常了解的人，完美符合这些条件。Lady
    Augusta Ada。
- en: Kingdoll， Countess of Lovelace。 But sometimes we miss portions of this like
    Sir John Mayer who was Prime Minister of the United Kingdom。 He does not have
    a middle name。 President Harry S。 Truman of the United States。 some people might
    know this but his middle， name is actually S。 That's it。 So you know you obviously
    can't rely on a middle name that exists being longer than one character。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Kingdoll，Lovelace的女伯爵。但有时我们会漏掉这些部分，比如曾任英国首相的Sir John Mayer。他没有中间名。美国总统Harry
    S. Truman，可能有人知道，但他的中间名实际上是S。就这样。所以你显然不能依赖于中间名的存在，而且它的长度不超过一个字符。
- en: Now there's the Germans。 This is a real person and they have no less than seven
    middle names as well as four words in their family name。 Now a lot of things kind
    of trip up on that。 They don't expect you to have spaces in your last name and
    a lot of things don't even handle hyphens which is funny。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是德国人。这是一个真实的人，他们有不少于七个中间名，以及四个字的姓氏。很多事情在这一点上会遇到困难。他们并不期待你的姓氏中有空格，许多东西甚至不处理连字符，这很有趣。
- en: considering that a lot of people have hyphens in their last names。 You think
    we'd be okay at that。 And then someone like sure。 Sure's legal name is just sure。
    A single given name。 Can sure use your website？ I'm guessing no。 And this is just
    the Anglo way of sending things。 In other places it works completely different。
    In Chinese and quite commonly Japanese the family name comes first and the given
    name comes after。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到很多人的姓中有连字符。你会认为我们对此应该没问题。而像Sure这样的人，Sure的法定名字就只有Sure。一个单一的名字。Sure能使用你的网站吗？我猜不能。这只是英语国家的一种方式。在其他地方，它的运作完全不同。在中文和相当普遍的日语中，姓在前，名在后。
- en: So you can't automatically assume that whatever the first part is is someone's
    given name and whatever the last part is is their family name。 So if you're given
    just a string of words that is someone's name you can't automatically split it
    up into the different sections。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你不能自动假设第一部分是某人的名字，最后一部分是他们的姓氏。因此，如果你得到的是一串单词，那就是某人的名字，你不能自动将其拆分为不同的部分。
- en: without them explicitly doing it themselves。 Now there's a lot of common naming
    assumptions that we have and it's covered elsewhere but people's names having
    multiple components。 and not having spaces or hyphens。 People assuming that the
    name that is on your driver's license or your passport is the name that you actually
    use in day-to-day life。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有他们明确这样做的情况下。现在我们有很多常见的命名假设，这在其他地方也有涉及，但人们的名字有多个组成部分，并且没有空格或连字符。人们假设你在驾驶执照或护照上的名字就是你在日常生活中实际使用的名字。
- en: That people having one and only one middle name。 That people prefer that their
    given name is the name that you call them。 People assuming that names don't change
    or that people have a single name that they go by。 Some people who are married
    may go by their maiden name in some professional context while using their new
    married name in other contexts。 You can't assume that they might not want to use
    both。 Now names are mutable。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 人们认为只有一个中间名。人们更喜欢用他们的名字来称呼他们。人们假设名字不会改变，或者人们只有一个名字。某些已婚人士在某些专业环境中可能会用自己的婚前姓，而在其他情况下使用新的婚后姓。你不能假设他们不想使用两个名字。现在名字是可变的。
- en: Marriage is one of the most common reasons changing your last name。 Sometimes
    taking one of the other partners family name or both partners changing their family
    name to a conjoined family name。 Gender transition is also a common reason as
    well as witness protection and some people just don't like the name that they
    were given a birth。 And how do we store them？ Now we need to think of the application
    and the reasons why we're storing them。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 结婚是更改姓氏最常见的原因之一。有时是采用另一方的姓氏，或双方将姓氏更改为合并姓氏。性别转换也是一个常见原因，还有证人保护，一些人只是对出生时获得的名字不满意。那么我们该如何存储这些信息呢？现在我们需要考虑应用程序及存储这些信息的原因。
- en: Usually it's because we're either referencing some sort of government system。
    For example if you are a medical institution you quite often need to use a name
    that is on someone's Medicare documentation。 Or you're like a social service and
    you have a more casual use of someone's name。 It doesn't necessarily have to match
    up exactly to what the government says。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 通常是因为我们引用某种政府系统。例如，如果你是一家医疗机构，通常需要使用在某人的医疗保险文件上的名字。或者你是一个社会服务机构，需要更随意地使用某人的名字。它不一定要完全与政府的说法匹配。
- en: Or some services it's important to have both because you might want to have
    a user have a more preferred name。 while also having in the background their name
    verified by some sort of government institution。 Now if you are dealing with government
    departments it is simply just best to use the schema that the government uses。
    Even if this schema is wrong it is unfortunately one that will match up consistently
    with their systems。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 对于某些服务，拥有两个名字很重要，因为你可能希望用户有一个更喜欢的名字，同时在后台用某种政府机构验证他们的名字。现在，如果你在处理政府部门，最好使用政府所采用的模式。即使这个模式是错误的，它仍然是与他们的系统一致的。
- en: and it's likely that the person if their name doesn't fit with their regular
    government systems will know how to get around it。 But it is also good to use
    a single field for casual uses such as the person that you're sending a letter
    to。 You don't need to break that up into first name and last name and all of that
    sort of stuff it just gets printed right on the label。 If you do need to ask for
    multiple names it's best to minimize confusion and make it clear what is used
    where。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个人的名字与他们常规的政府系统不符，他们很可能知道如何绕过这个问题。但在一些日常使用中，比如你要寄信给某人，使用一个字段就很好。你不需要将其分为名字和姓氏，所有内容就直接打印在标签上。如果需要询问多个名字，最好减少混淆，明确各自的用途。
- en: Making it clear that this section is what is for your government ID and this
    section is what we will call you when you're going around the website。 And often
    if you want to ask for both you could always just ask for the government ID first
    and then have an option is your name different。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 明确这一部分是用于你的政府身份证，而这一部分是我们在你浏览网站时称呼你的方式。如果你想询问两者，你可以先询问政府身份证，然后选择“你的名字是否不同”。
- en: then what is on your ID click here and then it shows the rest of the options
    to enter their preferred details。 And don't assume that given a name that you
    can extract out portions of it。 You must ask for this if you need it。 For example
    my boarding pass was for someone called Amber Hawkey。 One word。 Doesn't quite
    match what's on my passport to be honest。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后点击“你的身份证上的名字”，接着显示其他选项来输入他们的首选详细信息。不要假设通过给出的名字可以提取出其中的部分。如果需要，必须询问这一点。例如，我的登机牌上是一个叫安伯·霍基的人。一个词。说实话，这与我的护照上不太匹配。
- en: There is this classic article which goes into a bit more detail about the falsehoods
    that programmers believe about names。 It's a very worthwhile read。 You can just
    Google falsehood programmers believe about names and you'll find it。 There will
    also be slides posted up afterwards for a nice clickable link。 Let's tackle gender。
    Now this is an interesting one。 The first question to ask is what are you going
    to use the information for？
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 有一篇经典文章详细讨论了程序员对名字的误解。这是非常值得一读的。你可以在谷歌上搜索“程序员对名字的误解”，你会找到它。之后还会发布幻灯片，提供一个便捷的可点击链接。让我们来探讨性别。这是一个有趣的问题。首先要问的是，你打算用这些信息做什么？
- en: Why are you asking？ Do you actually want to ask for pronouns to refer to someone
    throughout your website？
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你为什么要询问？你是否真的想询问代词，以便在你的网站上提到某人？
- en: Or do you want to know if they're interested in gendered products such as tampons
    or pregnancy tests or that sort of thing？
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 还是你想知道他们是否对性别化的产品感兴趣，比如卫生棉条或怀孕测试等？
- en: Usually you only really care about pronouns。 So you want to offer common pronouns。
    You want to allow custom ones as well。 You don't want to show this information
    publicly by default。 You should leave it up to the user to decide whether they
    want to let that be known to just any random passerby。 And do you actually need
    to use pronouns in your website after all？ Usually you can avoid it。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 通常你只关心代词。因此，你希望提供常见的代词。你还希望允许自定义的代词。默认情况下，你不想公开显示这些信息。你应该让用户决定是否愿意让任何路过的人知道这些信息。毕竟，你的网站上真的需要使用代词吗？通常可以避免使用。
- en: But if you're asking about gender， there's sometimes legitimate reasons where
    you would want to ask。 For example， verifying things against Medicare and my passport
    is a legitimate use。 Sometimes collecting information for programs focused on
    gender minorities is important to know that they qualify。 And statistical information，
    for example， a lot of conferences will ask your gender for working out demographics。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 但是如果你在问性别，有时会有合理的理由需要询问。例如，验证医疗保险和我的护照是一个合理的用途。有时，为了收集针对性别少数群体的项目的信息，了解他们是否符合资格也是很重要的。而统计信息，比如很多会议会询问你的性别，以便计算人口统计数据。
- en: to working out how well certain outreach efforts are going。 And if you must
    do this。 it's best to use a free-form text box or a drop-down box that allows
    you to then type in another option。 Fits everyone， doesn't have much more work，
    and keeps everyone happy。 Now， addresses。 Now the non-Americans in here are probably
    being nodding quite a bit。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 以了解某些宣传活动的效果。如果你必须这样做，最好使用一个自由格式的文本框或一个下拉框，允许你输入其他选项。这样适合每个人，工作量不大，也让每个人都满意。现在，地址。这里的非美国人可能会点头表示赞同。
- en: Now things that don't exist outside of America， zip codes are a big thing。 Counties，
    and Arizona。 If I select Australia， please do not let me select Arizona as the
    state。 This has happened。 Thankfully， the Australian Post Office is kind of pretty
    good with working that out。 But things that do exist outside of the United States。
    PO Boxes in Australia， for example。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，美国以外不存在的事物，比如邮政编码是个大问题。县和亚利桑那州。如果我选择澳大利亚，请不要让我选择亚利桑那州作为州。这种情况曾经发生过。值得庆幸的是，澳大利亚邮政办公室在处理这方面还是相当不错的。但有些东西在美国以外是存在的，比如澳大利亚的邮政信箱。
- en: commonly accept packages。 And in a lot of cases， this is the only way you can
    get a package delivered if you're in a rural place。 So simply going， if it's got
    PO Box in it， can't deliver packages。 isn't quite accurate if you're working in
    places other than where you know。 Postcodes can sometimes have letters in them。
    For example， the UK。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 通常会接受包裹。在许多情况下，如果你身处偏远地区，这也是唯一可以接收包裹的方式。因此，简单地说，如果里面有邮政信箱，就无法投递包裹，这种说法在你不知道的地方并不准确。邮政编码有时可能包含字母。例如，英国的邮政编码就是这样。
- en: The bridge in the front row is nodding。 Also extremely long town or city names。
    especially ones with spaces like you'll get in Germany。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 前排的桥正在点头。还有非常长的城镇或城市名称，尤其是像德国那样有空格的名称。
- en: '![](img/d45b30615b68404326f0ac6141e80b26_9.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d45b30615b68404326f0ac6141e80b26_9.png)'
- en: Sometimes an address isn't a thing that exists at all in some places。 This is
    a letter that was successfully delivered。 Recently there was a story where someone
    sent a letter labeled simply "England"。 And it made its way to its destination。
    Foreign Post services sometimes know how to get a letter of places better than
    you do。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 有时在某些地方，地址根本不存在。这是一封成功投递的信件。最近有一个故事，有人仅用“英格兰”标记的信件寄出，结果成功送达了。外国邮政服务有时比你更知道如何将信件送达某些地方。
- en: '![](img/d45b30615b68404326f0ac6141e80b26_11.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d45b30615b68404326f0ac6141e80b26_11.png)'
- en: Now this is commonly what happens in the US。 You have a dress line one， a dress
    line two。 a city postcode or a zip code， and the country。 Now this fits for a
    lot of places， but for example。 doesn't fit some places like the UK。 Or sometimes
    doesn't match where you're trying to interpret things about the address。 It's
    best to research into the country that you're planning to deliver services to
    and match the address lines correctly there。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这在美国通常是发生的情况。你有地址行一、地址行二、城市邮政编码或邮政编码，以及国家。虽然这适用于许多地方，但例如，对于一些地方如英国并不适用。有时也不符合你对地址的理解。最好研究你计划提供服务的国家，并正确匹配地址行。
- en: And even then sometimes you might just have to have a big text box where they
    can just write things in。 Generally the Post service will get things to where
    they are needed。 There's also a false word programmers believe about addresses
    which is very UK focused and has a lot of interesting facts。 Some of which I didn't
    know and it turns out that the UK I'm a surprise male gets anywhere at all。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 即便如此，有时你可能只需一个大文本框，让他们写东西。通常邮政服务会将物品送到需要的地方。程序员对地址有一个错误的认识，这种认识非常以英国为中心，包含了许多有趣的事实。其中一些我并不知道，结果表明在英国，邮件几乎无处不在。
- en: I suppose male gets anywhere in Australia that the trucks don't just disappear
    in the nullable。 But anyway。 Now whenever you're storing personal information
    or asking for it。 there are dangers and extreme pitfalls。 Great doctor once said
    we should treat personal electronic data with the same care and respect as weapons
    grade plutonium。 It is dangerous long lasting and once it is leaked， there is
    no way of getting it back。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我想，在澳大利亚，邮件也是能送到的，不会在可空区域消失。但无论如何，现在每当你存储个人信息或请求时，都存在危险和极大的陷阱。一位伟大的医生曾说过，我们应该像对待武器级钚一样对待个人电子数据，因其危险、持久且一旦泄露，就无法收回。
- en: And this is a generally correct assumption。 Those that have lived through the
    Equifax leak of 2015 or 2016 whenever it was will know that once that information
    is in the public domain。 there's no way of getting it back。 And for a lot of people
    that's information that they can't easily change。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这通常是一个正确的假设。经历过2015或2016年Equifax泄露事件的人会知道，一旦信息进入公共领域，就无法收回。而且对于很多人来说，这些信息是他们无法轻易更改的。
- en: They can't easily change their social security number even if they might be
    able to。 Getting every single person in America to change this information to
    prevent themselves being defrauded is an unaskable task。 Now if you screw up and
    data does get linked especially personal data under the new general data protection
    regulations。 there are sanctions over finding up to 20 million euros。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 即使他们可能能够更改社保号码，也并不容易。让美国每一个人都去更改这些信息以防止被欺诈是一个不可完成的任务。如果你犯错，尤其是在新的通用数据保护法规下，个人数据被链接，就会面临高达2000万欧元的罚款。
- en: up to 4% of the annual World Wide turnover of the preceding financial year of
    case of an enterprise。 whichever is greater， if there has been an infringement。
    So that makes leaks of personal data not only something that is bad for your PR
    but also bad for your wallet。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生违规，罚款可能高达企业前一个财年年全球营业额的4%或更高。因此，个人数据泄露不仅对你的公关有害，也对你的钱包有害。
- en: '![](img/d45b30615b68404326f0ac6141e80b26_13.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d45b30615b68404326f0ac6141e80b26_13.png)'
- en: And ultimately at the end of the day it's going to be very hard to protect some
    sensitive information。 Have I been pulled is a website that allows you to check
    just your email address。 not other information but your email address。 Among 283
    websites that have had information leaked。 That ends up being over 5 billion accounts
    and probably hundreds of millions of people。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，保护某些敏感信息将非常困难。“我是否被盗”的网站允许你检查自己的电子邮件地址，而不是其他信息。在283个泄露信息的网站中，这导致超过50亿个账户，可能有数以亿计的人受到影响。
- en: Some of these websites that have been hacked leak more than just names and email
    addresses and hash passwords。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一些被黑的网站泄露的不仅仅是姓名和电子邮件地址及哈希密码。
- en: '![](img/d45b30615b68404326f0ac6141e80b26_15.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d45b30615b68404326f0ac6141e80b26_15.png)'
- en: One of these people that got hacked was a Qatar National Bank。 And that includes
    all the information their bank needs to verify that you are a real person。 And
    when they have that much information， a hacker who has this information can then
    has enough to verify that you are genuine to basically anywhere else in the world。
    When you have information such as this that is incorrectly handled。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 被黑客攻击的人之一是卡塔尔国家银行。这包括银行需要验证你是一个真实的人的所有信息。当他们拥有如此多的信息时，黑客就足够验证你在世界任何地方的真实性。当信息处理不当时，
- en: it can cause the financial burdens of hundreds of thousands of people at a grand
    scale。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 它可能会对数十万人造成巨大的经济负担。
- en: '![](img/d45b30615b68404326f0ac6141e80b26_17.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d45b30615b68404326f0ac6141e80b26_17.png)'
- en: So if you don't need the information， don't store it。 Don't keep it。 It also
    means that if the worst were to come to happen and some fascist party came to
    power in some country and they started wanting information that could be tracked。
    could be used to track down every one of a particular nationality or ethnicity
    or opinion。 If you don't keep extremely information that has that， it means that
    you are doing a good thing。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 所以如果你不需要这些信息，就不要存储它。不要保留它。这也意味着如果最坏的情况发生，某个法西斯政党在某个国家掌权，并开始想要可以追踪的信息，以便追踪到特定国籍、族裔或观点的每一个人。如果你不保留这些极其敏感的信息，这意味着你在做一件好事。
- en: And especially in the state of the days of this current climate。 collecting
    mass amounts of user data can be a bad thing。 So think of what could happen if
    the data is not hacked but simply subpoenaed by some government。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 尤其是在当前气候下，收集大量用户数据可能是件坏事。所以想想，如果数据不是被黑客攻击而是被某个政府传票获取，会发生什么。
- en: '![](img/d45b30615b68404326f0ac6141e80b26_19.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d45b30615b68404326f0ac6141e80b26_19.png)'
- en: Now， we have consequences of our actions of the collective of individual people。
    We are simply not living in a vacuum where we have a website and data happens
    on it。 And sometimes we might get fined if data gets leaked and all of that。 But
    this does have effects on individual people。 Because at the end of the day you
    are dealing with individual people。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们必须承担个体人们的集体行动后果。我们并不是生活在一个真空中，网站和数据在其中运作。有时，如果数据泄露，我们可能会被罚款，但这对个体人有影响。因为归根结底，你是在与个体人打交道。
- en: They have feelings， they have aspirations， they have daily struggles。 And your
    software should be made to help them。 Maybe it might not help all of these。 But
    at the end of the day software does not have a point if it does not help people。
    Or at least simplify some other task that in the end helps people。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 他们有感情，他们有抱负，他们有日常的挣扎。你的软件应该帮助他们。也许它无法帮助所有人，但归根结底，如果软件不能帮助人们，它就没有意义。或者至少要简化某些其他任务，最终能帮助到人。
- en: Even if doing your taxes online doesn't really help you， it helps society as
    a whole。 Now in a lot of places now software is non-optional。 You cannot opt out
    of using some software。 For example banks nowadays when you want to do simple
    tasks will say log onto our website。 Use that instead。 Services such as myGov
    in Australia have a lot of information and allow you to do a lot of things to
    the federal government。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在线报税对你没有实际帮助，它对整个社会是有益的。现在在很多地方，软件已经成为非可选项。你不能选择不使用某些软件。例如，现在的银行在你想要进行简单操作时会说“登录我们的官网，使用这个”。例如澳大利亚的myGov提供了大量信息，并允许你进行许多与联邦政府相关的操作。
- en: And a lot of them now basically must be done online。 Even if you go into their
    offices they will show you to an iPad where you can then log in。 You simply cannot
    say that no。 I can't worry， I won't worry about this because people are choosing
    to use my software。 There's not the case even with for example Facebook。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 而且现在很多事情基本上都必须在线完成。即使你走进他们的办公室，他们也会把你带到一个iPad上，你可以在上面登录。你不能简单地说“我不需要，我不想担心这个”，因为人们选择使用我的软件。比如说Facebook，这并不是事实。
- en: For a lot of people it's not socially possible to opt out of some social networks。
    Especially in rural towns where it might be the only way of communicating with
    some people。 Now when you're in a situation especially a situation where everything
    is very social。 and not just interacting with the government。 Nying a person their
    identity is denying them their humanity。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 对很多人来说，从某些社交网络中选择退出在社会上并不可行，尤其是在偏远城镇，那可能是与某些人沟通的唯一方式。现在，当你处于一个特别社交的环境中，而不仅仅是与政府互动时，剥夺一个人的身份就是剥夺他们的人性。
- en: By making it so that someone cannot be their authentic self in your software
    or on your platform。 you are making them lesser of a user than everyone else。
    And this can lead to people being excluded。 lead them to feeling marginalised
    and having them be upset。 And ultimately your software should not do that。 The
    golden rules are to not make assumptions。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你让某人在你的软件或平台上无法表现出真实的自我，你就是在让他们成为比其他用户更低级的用户。这可能导致人们被排斥，感到边缘化并感到不满。最终，你的软件不应该这样做。黄金法则是不要做出假设。
- en: If you're going into a new market then you need to ask questions about it。 You
    need to do a lot more research， you need to figure out how names are common in
    that jurisdiction。 You need to figure out how addresses work。 You need to make
    sure that when someone goes to use your service or use your website。 that they
    are actually able to do it in at least in the least frustrating way as possible。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你进入一个新市场，就需要询问相关问题。你需要做更多研究，弄清楚在该司法管辖区名字的常见形式。你需要弄明白地址的使用方式。你必须确保，当有人使用你的服务或网站时，他们能够以尽可能不令人沮丧的方式做到这一点。
- en: Because ultimately you want users to use your website don't you。 Don't think
    that people are like you。 Even though I personally have a name that works on many
    sites。 And I have a binary gender so I can simply select female。 Not everyone
    is fortunate enough to be able to have that privilege。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 因为**最终**你希望用户能使用你的网站，不是吗？不要认为人们和你一样。尽管我个人的名字在许多网站上都能使用，并且我有二元性别，可以简单选择女性，但并不是每个人都有这种特权。
- en: So don't think you'll get it right the first time。 Talk to people。 Do your research。
    Make sure that you can change things later on if someone comes to you with a problem。
    Don't be the company that says no our services can't support a single name。 It's
    simply not possible you just have to put a in the last name box。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 所以不要以为第一次就能做到完美。与人交谈。进行研究。确保如果有人找你提出问题，你可以在以后更改东西。不要成为那个说“我们的服务不能支持单个名字”的公司。这根本不可能，你只需在姓氏框中填入一个值。
- en: And the best way to do that is by thinking ahead。 When you are designing a system
    you can come in a commonly it goes where you have to have some sort of identity
    in your system。 For Django you simply just use the user model。 Now the Django
    user model is broken because it asked for first and last name。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 最好的方法是提前思考。当你设计一个系统时，通常会遇到需要在系统中有某种身份的问题。对于Django，你只需使用用户模型。现在，Django用户模型有缺陷，因为它要求填写名字和姓氏。
- en: And this does not work in a lot of international communities。 So you have to
    come up with your own schema。 And you have to come up with a schema that is as
    flexible as possible to allow future changes。 To allow you to move into other
    markets or other jurisdictions。 And to do it without potentially breaking all
    of your software。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 而且这在许多国际社区中并不适用。所以你必须制定自己的方案，并制定尽可能灵活的方案，以便允许未来的更改，让你能进入其他市场或司法管辖区，并做到这一点而不会潜在地破坏你所有的软件。
- en: A good idea to think about is making all of your systems Unicode aware。 Even
    if you don't think that it will be a problem making sure that every part of your
    system from the login form to every entry on your website to the email so that
    it sends out。 Make sure that it formats names correctly。 Make sure that it doesn't
    mangle them。 Because it's very very very bad when you get an email with Moji Bake
    instead of a name。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一个值得考虑的好主意是让你的所有系统都支持Unicode。即使你认为这不会成为问题，也要确保你系统中的每一个部分，从登录表单到你网站上的每一条记录，再到发送的电子邮件，都正确格式化名字。确保它们不会被破坏。因为当你收到一封显示乱码而不是名字的电子邮件时，实在是非常糟糕。
- en: Not only does it make the person roll their eyes。 It also reduces their confidence
    in you as a website。 as a service， as a company。 Because you can't even get their
    name right。 This is basically it。 We started it early which is good。 I was going
    to have questions in the whole but we've got five minutes。 Eight minutes。 Eight
    whole minutes。 Which is good。 So I might do some Q&A。
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅让人感到无奈，还会降低他们对你作为一个网站、服务和公司的信任，因为你甚至无法正确获取他们的名字。这基本上就是这个问题。我们提前开始讨论，这很好。我本来打算提出很多问题，但我们还有五分钟，八分钟。整整八分钟，这很好。所以我可能会进行一些问答。
- en: Now for Q&A I'd like to keep it to questions。 To questions。 So yes。 Thank you。
    I'll do it。 I have a quick question。 I'm working with the database I didn't design
    that uses foreign keys。 One of the things is it links people records via a foreign
    key to the district they represent。 The issue is for whatever reason there are
    floating people records in the people table。 What people？
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在关于问答，我希望将其保持在问题上。是的，谢谢。我会的。我有个快速问题。我正在处理一个使用外键的数据库，我并没有设计这个数据库。其一是通过外键将人员记录链接到他们所代表的区域。问题是，不知为何，在人员表中有一些漂浮的人员记录。什么人？
- en: There are floating person records。 In other words they're not linked with a
    foreign key。 I'm wondering if there are database structures or strategies that
    you could -- or have you ever run into this --。 that you could recommend to avoid
    what I'm calling floating people records。 Right？
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 有浮动的人记录。换句话说，它们没有与外键关联。我想知道是否有数据库结构或策略可以推荐，以避免我所说的浮动人记录。对吧？
- en: So database integrity especially when it comes to handling with people。 Basically
    yes it's just a lot of verifying things at several stages。 Yeah。 So when you've
    got users that have incomplete information and they're just floating。 It's a good
    idea to figure out how that happened obviously。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 所以数据库完整性尤其在处理人员时。基本上是的，只是在几个阶段验证很多事情。是的。因此，当你有用户信息不完整且他们只是漂浮时，显然找出这是如何发生的一个好主意。
- en: And to strengthen your database constraints so it can't happen again。 Now there's
    not really a database structure or so that can stop this。 It's kind of just incorrect
    database integrity。 But there's also the case where for example you might have
    people who represent a jurisdiction。 So you can have that as a separate table
    that links it there。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 还有，为了加强你的数据库约束，以免再次发生。现在没有真正的数据库结构可以阻止这种情况。这种情况有点像数据库完整性不正确。但是也有一种情况，比如你可能会有代表某个管辖区的人。因此，你可以把它作为一个单独的表来连接。
- en: So then you move the relation over which allows for people to represent multiple
    districts but that's probably not a realistic case。 But essentially making sure
    that your database will not allow that to happen comes a long way because then
    when these sort of problems come up they sort of hard fail instead of suddenly
    oh no。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你移动关系，这样就允许人们代表多个地区，但这可能不是一个现实的案例。但确保你的数据库不会让这种情况发生是非常重要的，因为当这些问题出现时，它们会直接失败，而不是突然之间出错。
- en: A bunch of people don't have things through the gaps。 So sorry I can't be more
    helpful。 Andrew。 So one of the things you had in your earlier slides with the
    list of parts of DENTI was age and date of birth in particular。 I have had problems
    in the past。 Do you have a suggested way of storing age especially in the fuzzy
    sense in databases？
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一些人没有通过漏洞处理事情。很抱歉我不能提供更多帮助。安德鲁。你早期幻灯片中提到的DENTI的组成部分之一是年龄和出生日期。我以前遇到过问题。你有什么建议的方式来存储年龄，尤其是在数据库中模糊意义上的？
- en: So there's actually something that's happened in Australia that does this。 Now
    the。 I forget exactly what it's called but there is something in the Australian
    archives where they have multiple hundred years of information。 And they have
    come up with a schema that is sort of very fuzzy for dates of birth。 So it can
    say for example it can say that this person was born on say for example my one
    is December 7th 1993 sorry what。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上在澳大利亚发生了一些这样的事情。现在，我不记得它确切叫什么，但在澳大利亚档案馆有多年的信息。他们想出了一个相当模糊的出生日期模式。例如，可以说这个人出生在我的例子中是1993年12月7日，抱歉，什么？
- en: '[inaudible]， Yep。 Yep。 So and we''ll post the link on Twitter to the talk。
    But basically it can do like a day say a month。 You can say we know they was born
    in between these dates。 He was born this year。 He was born maybe this year or
    this range of years。 So there are solutions to this to sort of a standard schema
    of encoding very fuzzy dates of birth。'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[听不清]，是的。是的。所以我们将在Twitter上发布讲座链接。但基本上可以做，比如说某一天，某个月。你可以说我们知道他们在这些日期之间出生。他们出生在这一年。他们可能出生在这一年或这一系列年份。因此，有一些解决方案来标准化模糊的出生日期编码。'
- en: And I mean also there have been cases where clerical errors have meant that
    it also changes in the future so not having a read only is good。 But yes the SAM
    will be able to hook you up with the talk on that but there are archivists have
    had to come up with ways of representing incomplete dates of birth。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我还意味着在某些情况下，文书错误意味着它将来会发生变化，所以没有只读状态是好的。但是是的，SAM可以帮你联系到有关此事的讲座，但档案管理员不得不想出表示不完整出生日期的方法。
- en: Especially when you've got a strain in history where people were born out in
    the country and they don't know how old they are no one knows how old they are
    but they remember that they were born in the spring。 Great thank you。 Hi do you
    know a good like third party solution that will basically give me an iframe with
    a bunch of like address inputs and name inputs and to give me a like user token
    that I can just pull data from whenever I need it。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是当你遇到历史上人们出生在乡村而不知道自己多大时，没有人知道他们多大，但他们记得他们是在春天出生的。太好了，谢谢你。嗨，你知道有没有好的第三方解决方案，可以给我一个包含多个地址输入和姓名输入的
    iframe，并给我一个用户令牌，我可以在需要时随时提取数据？
- en: Not particularly unfortunately a lot of these things you've kind of got to bake
    yourself。 And it kind of can wrap into other identity systems especially ones
    like authentication systems like generally people like bundling their authentication
    identity with their user identity and so there。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，很多这些东西你得自己去做。而且它往往会与其他身份系统相结合，尤其是像身份验证系统这样的系统，通常人们喜欢将他们的身份验证身份与用户身份捆绑在一起。
- en: But unfortunately I don't think there's many off the shelf options I mean the
    closest you guys like Django but unfortunately Django is wrong。 So it's basically
    just coming up with a set of things and just having to deal with it yourself which
    is unfortunate but as time goes on a lot more like web frameworks and things will
    come with more correct things as default so then it's not you reimplementing everything。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 但不幸的是，我认为没有很多现成的选择，最接近的可能是你们的 Django，但不幸的是 Django 也不完全正确。所以基本上只是得想出一套东西，然后自己处理，这虽然不太幸运，但随着时间的推移，更多的网络框架和东西会默认带来更正确的内容，这样你就不需要重新实现所有的东西。
- en: And as of right now there is no nice。 Here's a service that will take care of
    how complicated humans are and let me let me ask nice questions of it。 It's maybe
    a good startup idea if you are in Europe because that's the thing that comes up
    plenty。 Hi， short question have you seen this executed well do you have any examples
    that you think did a good job with this。 So I've seen where some things execute
    some things well and then and then they also screw up the rest of it。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 目前为止，并没有一个好的服务能够处理人类的复杂性，让我能够提出简单的问题。这也许是一个很好的创业点，如果你在欧洲，因为这是一个常见的问题。嗨，简短的问题，你见过哪些成功的案例，能给我一些你认为做得好的例子吗？我看到有些地方做得很好，但其他方面又搞砸了。
- en: So Facebook for example does gender pretty well it allows you to enter common
    ones as well as custom ones but then they have their real name policy where they
    say that people's names in the community for example are not valid because they
    do not match their government ID。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 所以 Facebook 例如在性别方面做得很好，它允许你输入常见的性别以及自定义的性别，但他们有真实姓名政策，他们会说社区中的人名是无效的，因为它们与政府
    ID 不匹配。
- en: And this is commonly commonly comes into play when you have people that are
    acting under pseudonym or go by another name that they prefer and Facebook goes
    all know that's not right。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这通常在有些人使用化名或更喜欢其他名字时会出现，Facebook 就会说这不对。
- en: '![](img/d45b30615b68404326f0ac6141e80b26_21.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d45b30615b68404326f0ac6141e80b26_21.png)'
- en: So Facebook is an example of doing one thing correct and then doing the other
    thing horribly wrong。 Unfortunately I haven't seen anything that universally does
    everything right but I have seen a lot of services that do it right in that they
    don't ask for more information than they need to do the exact job that they need
    to do。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 所以 Facebook 是一个做对一件事但做错另一件事的例子。不幸的是，我没有看到任何一个普遍做对所有事情的服务，但我看到很多服务做得很好，因为他们不会要求超过完成所需工作所需的信息。
- en: Now when you have things that ask for a load of information they're of course
    going to probably get something wrong unless they have a very diverse team that
    can think of all these things but generally they can't。 But the team that decides
    we don't need this information it's completely superfluous we can just get rid
    of it is less likely to make those mistakes。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你有一些需要大量信息的项目时，它们当然很可能会出错，除非有一个非常多样化的团队能够考虑到所有这些因素，但一般来说，他们做不到。然而，那个决定我们不需要这些信息的团队，它完全是多余的，我们可以直接去掉它，出错的可能性就会小得多。
- en: So I'd say it's been done done well where people have just not asked and that's
    probably the best way for a lot of things。 The ruba for dogs doesn't need my gender。
    Thank you。 Yes I think we've still got one minute so you have one minute。 You
    talked about using addresses for sending mail。 Yes。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这已经很好地做到，人们并没有询问，这可能是许多事情的最佳方式。狗用的ruba不需要我的性别。谢谢你。是的，我想我们还有一分钟，所以你有一分钟。你提到使用地址发送邮件。是的。
- en: And I'm wondering about suggestions for other uses of addresses like finding
    people near you physically。 In particular the balance of asking people versus
    using automated methods。 So using automated methods is almost universally unethical
    unless they've opted into it。 In which case you can get away with things such
    as fuzzy GPS coordinates。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我在想有关地址其他用途的建议，比如在你身边找人。尤其是在询问人们与使用自动化方法之间的平衡。因此，使用自动化方法几乎普遍不道德，除非他们选择参与。这样你就可以使用模糊的GPS坐标。
- en: You can fuzz that and if you use to find the one then it's like the house but
    you can go within a city block。 So generally it's better for that sort of near
    me thing to use those sorts of coordinates versus an address because for example
    in Australia you have some cases where an address will be 100 acre plot of land。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以模糊化处理，如果你用它来找到一个位置，就像找房子，但可以在城市的一个街区内。因此，通常对于“离我近”的事情，使用这些坐标比地址更好，因为例如在澳大利亚，某些情况下一个地址可能会指向一个100英亩的土地。
- en: And it's like oh again this is just an extra and it's like great but it's 20
    k's down the road。 So yeah it's better to use GPS addresses for the near me sort
    of things but also keeping it constrained enough that it's not within 20 or 30
    meters just by cutting things off。
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 而且这只是一个额外的功能，很好，但距离是20公里。所以，使用GPS地址更适合“离我近”的事情，但也要限制在20或30米以内，以便裁剪掉。
- en: And that's generally more anonymous but less exactly identifying than addresses
    anyway。 Which also things like Uber can't even do right。 They sometimes like it's
    very exact but sometimes it's very un-exact。 So while the GPS address has a known
    level of exactness。 Thank you very much for those people that came out the trek
    out here and I'll see you at sprints。
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 总体来说，这种方式更匿名，但比地址更不具体。像Uber这样的服务有时定位很精确，但有时又不准确。因此，GPS地址的精确度是已知的。非常感谢那些来到这里的人，我们在短跑活动上见。
- en: (applause)。
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: （掌声）。
- en: '![](img/d45b30615b68404326f0ac6141e80b26_23.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d45b30615b68404326f0ac6141e80b26_23.png)'
- en: (applause)。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: （掌声）。
