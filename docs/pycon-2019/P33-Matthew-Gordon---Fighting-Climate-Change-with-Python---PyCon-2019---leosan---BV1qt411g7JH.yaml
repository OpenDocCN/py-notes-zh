- en: P33：Matthew Gordon - Fighting Climate Change with Python - PyCon 2019 - leosan
    - BV1qt411g7JH
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P33：马修·戈登 - 用Python应对气候变化 - PyCon 2019 - leosan - BV1qt411g7JH
- en: Hello everybody， welcome back to the sessions。 Next up is Matthew Gordon。 who's
    going to be talking about fighting climate change with。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 大家好，欢迎回到会议。接下来是马修·戈登，他将谈论如何应对气候变化。
- en: '![](img/20d91c795ad2920af997c03ad1fe7d9a_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20d91c795ad2920af997c03ad1fe7d9a_1.png)'
- en: Python。 [Applause]， All right。 Hi， my name is Matt Gordon。 I'm a software engineer
    at Kairos Aerospace。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Python。[掌声]，好的。嗨，我的名字是马特·戈登，我是凯罗斯航空公司的软件工程师。
- en: '![](img/20d91c795ad2920af997c03ad1fe7d9a_3.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20d91c795ad2920af997c03ad1fe7d9a_3.png)'
- en: We're an 18-person shop in Mountain View， California， and we detect methane
    emissions。 About three years ago， I had founded and then founded a startup， and
    I was taking some time。 off and I was building weird Burning Man art and I was
    trying to figure out what I wanted。 to do with my life。 And a friend of mine connected
    me with some physicists who were here at the University。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们是一家位于加利福尼亚州山景城的18人团队，专注于探测甲烷排放。大约三年前，我创办了一家初创公司，随后我休息了一段时间，制作一些奇怪的“燃烧人”艺术，并试图弄清楚我想做什么。一个朋友把我介绍给了在密歇根大学的一些物理学家。
- en: of Michigan， and a friend of mine connected me with some physicists who were
    looking for。 somebody to write physics code that didn't look like it was written
    by a physicist。 So I got involved with Kairos because I was thinking to myself，
    well， I want to do something。 that's physical， that affects the real world， that
    involves hardware。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我一个朋友把我介绍给了一些物理学家，他们在寻找一个能够写出不看起来像物理学家写的物理代码的人。因此，我参与了凯罗斯，因为我想着，我想做一些物理相关的、能影响现实世界的事情，涉及硬件。
- en: And I was thinking that the thing that was really most important for me right
    now is。 climate change。 I'm going to make some jokey jokes。 We're going to have
    some fun up here。 Before I do that， I do want to impress upon everybody here that
    this is deadly serious。 On our current trajectory by 2050， we're going to see
    two to two and a half degrees of global。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我在想，对我来说，现在最重要的事情是气候变化。我会开一些玩笑，我们在这里会有一些乐趣。在此之前，我想强调，这个问题非常严重。按照我们当前的轨迹，到2050年，我们将看到全球气温上升两到两点五度。
- en: temperature change， and we're going to witness under that scenario， mass displacement
    of。 100 million people worldwide。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 温度变化，我们将在这种情况下目睹全球一亿人的大规模迁移。
- en: '![](img/20d91c795ad2920af997c03ad1fe7d9a_5.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20d91c795ad2920af997c03ad1fe7d9a_5.png)'
- en: We have a pretty good idea why that's happening。 About 57% of that is due to
    carbon dioxide CO2 being released into the atmosphere from fossil。 fuel use。 But
    about 14， 15% of that is from methane， CH4， which is the primary component of
    natural。 gas。 And even though we emit a lot less of it， it is 60 times more powerful
    a climate change agent。 per pound than CO2。 It is a cheap， clean， burning fuel。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对这种情况发生的原因有一个相当清晰的认识。大约57%的原因是由于化石燃料使用释放到大气中的二氧化碳（CO2）。但大约14%到15%是来自甲烷（CH4），它是天然气的主要成分。尽管我们的排放量要少得多，但它的气候变化效应是二氧化碳的60倍。它是一种便宜、清洁的燃料。
- en: And it is so cheap and plentiful that when fracking， people tend to lose a lot
    of it。 And whether or not it's a net benefit for climate change because it's clean
    burning depends on。 how much of it we leak。 And it's very difficult for people
    to know how much of it we leak because it has been very。 difficult to do surveys
    over very large areas until now。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 由于水力压裂技术，这种资源便宜且丰富，以至于人们往往会浪费很多。它是否对气候变化有净收益，因为它是清洁燃烧的，取决于我们泄漏了多少。而且，由于之前在非常大范围内进行调查非常困难，人们很难知道我们泄漏了多少。
- en: Natural gas and methane are odorless and invisible in their natural form。 The
    rotten egg smell is actually put in there as a safety measure。 So you occasionally
    see things like on the right here， that's a Liso Canyon in 2015。 That's a natural
    gas storage unit that's being imaged with an OGI and optical gas。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 天然气和甲烷在其自然形态下是无色无味的。腐臭味其实是作为安全措施添加的。因此，你偶尔会看到一些情况，比如右侧的利索峡谷（Liso Canyon）在2015年的情况。那是一个天然气储存单元，通过光学气体成像（OGI）进行成像。
- en: imager and it's just gushing gas into the atmosphere。 On the right you see Colorado。
    That's what happens when an uncapped pipe on a gas well leaks natural gas into
    the ground。 which seeps into somebody's basement over a period of several weeks
    or months and their house explodes。 So finding gas leaks is pretty important。
    This is a really big problem in physical scale。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 成像仪正在向大气中喷出大量气体。右侧是科罗拉多州。这就是未封闭的气井管道泄漏天然气进入地下的情况，几周或几个月后，天然气渗入某人的地下室，导致他们的房子爆炸。因此，寻找气体泄漏是非常重要的。这在物理规模上是一个非常大的问题。
- en: It's typical for a company to manage maybe 10，000， thousands of wells。 And it's
    typical to be able to send guys with a pickup truck out with that optical gas。
    imager to maybe one or two of these a day。 And so they do not get inspected very
    often and those inspections tend to happen randomly。 because they don't know where
    to send the guys。 So we invented the leak surveyor。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一家公司通常会管理大约10,000口井，成千上万的井。通常情况下，工作人员会驾驶一辆皮卡车，带着光学气体成像仪，每天可能检查一到两个井。因此，这些井并不会经常接受检查，而这些检查往往是随机进行的，因为他们不知道该派哪位工作人员去。所以我们发明了泄漏调查仪。
- en: This is a picon so I'm going to gloss over the hardware a little bit but basically
    what you need to know。 is we throw a bunch of optics and electronics into a fiberglass
    pod and we strap it to the bottom of the cessna。 and we fly it over oil producing
    areas like the Permian Basin。 The optical component is an optical spectrometer
    which basically looks at for absorption wavelengths of methane。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个picon，所以我将略过硬件的细节，但基本上你需要知道的是，我们把一堆光学元件和电子设备放进一个玻璃纤维舱，然后把它绑在塞斯纳飞机的底部，我们飞过像二叠纪盆地这样的石油生产区域。光学组件是光谱仪，基本上可以检测甲烷的吸收波长。
- en: There's a 6-axis GPS which tells us where we are and there is an optical camera
    which tells us what we're looking at。 And we combine all that data using a metric
    that we develop to turn that into information that shows us where on the ground。
    the concentration of methane is。 Which is what you're seeing right here is multiple
    passes of us over the same facility seeing a leak。 But the hardware is really
    only the beginning。 You need to take that data and in order to do something within
    the real world you need to get it off of an airplane into the cloud。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个6轴GPS，告诉我们我们在哪里，还有一个光学相机，告诉我们我们在看什么。我们将所有这些数据结合起来，使用我们开发的一个指标，将其转化为信息，显示出地面上甲烷的浓度。这就是你现在看到的，我们多次经过同一个设施，观察到泄漏。但硬件只是开始。你需要将数据从飞机转移到云端，才能在现实世界中进行操作。
- en: You need to do a ton of crunching on it。 You need to turn it into a GIS product
    so people know what they're looking at and where。 And you need to deliver that
    to people who can actually fix the leaks。 So I want to talk about that entire
    arc how we get from sensor data to actually leak fixing。 The first thing I want
    to talk about is what I call scalable bursty scientific computing。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要对这些数据进行大量的处理。你需要将其转化为GIS产品，以便人们知道他们在看什么以及在哪里。你还需要将这些信息传递给能够实际修复泄漏的人。因此，我想谈谈整个过程，如何从传感器数据转变为实际的泄漏修复。我想讨论的第一件事是我所称之为可扩展的突发科学计算。
- en: So how does it work？ We start， we land a plane in Midland Texas。 First thing
    you have to do is figure out how to upload 100 gigabytes of data from Midland
    Texas。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 那么这怎么运作呢？我们开始，飞机在德克萨斯州米德兰降落。首先要做的就是弄清楚如何从德克萨斯州米德兰上传100GB的数据。
- en: '![](img/20d91c795ad2920af997c03ad1fe7d9a_7.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20d91c795ad2920af997c03ad1fe7d9a_7.png)'
- en: Once that hits S3 it sends off an SQS message which gets picked up by our cloud
    orchestration。 It spins up a bunch of really big iron and it outputs that data
    to S3 where we pick it up in some apps that we developed for our analysts。 Some
    of them build on QGIS which is a really great open source GIS toolkit。 Some of
    them build on web apps and a lot of that stuff gets pushed into PostGIS。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据传送到S3，就会发送一个SQS消息，被我们的云编排系统接收。它启动一大堆强大的服务器，并将数据输出到S3，我们在为分析师开发的一些应用程序中接收这些数据。其中一些应用程序基于QGIS，这是一个非常好的开源GIS工具包。有些则是基于网页应用程序，很多数据会推送到PostGIS中。
- en: So one of the things that makes us different from a typical consumer facing
    application is that we do really big bursty computing。 and then we get rid of
    all the servers。 So we treat our servers like cattle rather than pets when you're
    done with them just get rid of them。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们与典型消费者应用程序的不同之处在于，我们进行非常大规模的突发计算，然后就把所有服务器都清除掉。因此，我们将服务器视为牛群，而不是宠物，完成后就把它们处理掉。
- en: So we built an MVP because we figured the absolute critical thing that we needed
    to do was be able to run this end to end without any human intervention if we
    wanted to be able to scale up this process。 So we built a job runner based on
    Ansible and I called it Ansible and then I thought pants were funnier so I called
    it pants about。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们构建了一个 MVP，因为我们认为我们绝对需要做的事情是能够在没有任何人工干预的情况下端到端地运行这个过程，如果我们希望能够扩展这个过程。因此，我们基于
    Ansible 构建了一个作业运行器，我叫它 Ansible，然后我觉得 pants 更好玩，所以我叫它 pants about。
- en: So what does it do well？ Pants about was our first attempt at building a job
    orchestrator and it did a bunch of things really well。 It had a REST API really
    simple front end that you could use so that human beings could run jobs。 It accepted
    SQS incoming to start jobs。 Two of the things that it did that were really super
    critical to allow me to sleep at night。 One of them was it had a really nice integrated
    end-to-end test suite。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 那它做得很好的是？Pants about 是我们第一次尝试构建作业调度器，它在很多方面做得很好。它有一个非常简单的 REST API 前端，供人类使用以运行作业。它接受
    SQS 来启动作业。它做的两件非常关键的事情让我晚上能安然入睡。其中一件是它有一个很不错的集成端到端测试套件。
- en: So Pants about could spin up a copy of itself and then run a branch of the pipeline
    including all the playbooks that specify the orchestration and all the software
    in a branch。 Push that data to a scratch data store and then shut itself down
    and check that everything was sane and that nothing crashed。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 所以 Pants about 可以启动自己的一个副本，然后运行包括所有指定调度和分支中软件的剧本的管道分支。将数据推送到临时数据存储，然后关闭自己，检查一切是否正常，确保没有崩溃。
- en: And that just helped make sure that everybody's gots fit into everybody's gazins
    after every code change。 The other thing that it did was it had EDE testing。 Sorry
    it was that it tracked when jobs failed and if the job failed abnormally it would
    wait 20 minutes and then it would kill the server which means that you are not
    just flushing AWS money down the drain。 So it spits out all of its outputs to
    Slack。 I mean both this little bot called S3BO that translates your S3 URLs into
    actual web URLs which is super handy。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这有助于确保每次代码更改后，每个人的适应都能融入到大家的视野中。它的另一个功能是进行 EDE 测试。抱歉，它会追踪作业失败的情况，如果作业异常失败，它会等待
    20 分钟，然后终止服务器，这意味着你不会白白浪费 AWS 的钱。所以它将所有输出发送到 Slack。我是说，还有一个小机器人叫 S3BO，它可以将你的 S3
    URL 转换为实际的网页 URL，这非常方便。
- en: What did it do badly？ There's a couple things。 Ansible is really good for infrastructure
    management。 It is not fantastic for control flow。 And we were really abusing it
    basically。 The other problem with it is that it had this top level view of the
    orchestration was really difficult to see all the jobs that were linked together
    in Pansabot。 So I want to stop and talk for a little bit about what I call the
    software Jank life cycle。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 它做得很差的是什么？有几件事。Ansible 在基础设施管理方面非常出色，但在控制流方面并不是特别好。我们基本上在滥用它。另一个问题是它的顶层视图使得在
    Pansabot 中很难看到所有链接在一起的作业。所以我想停下来谈谈我称之为软件 Jank 生命周期的内容。
- en: So what happens is you build something and you send it out to your users and
    you're like this is great and they're like this sucks and they start filing bugs
    on you。 And that's when you approach that first peak there which is what we call
    max Jank。 In aerospace they call max Q the point where the rocket is most likely
    to explode。 Max Jank is the point where you and your software are most likely
    to implode because people are throwing bugs at you and you're trying to fix the
    engine while it's driving down the highway and you're getting really frustrated。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 所以发生的事情是，你构建了一些东西并将其发送给用户，你觉得这很好，但他们却觉得这糟糕，然后他们开始向你报告错误。这时你接近了我们所称的最大 Jank 峰值。在航空航天领域，他们称最大
    Q 为火箭最有可能爆炸的点。最大 Jank 是你和你的软件最有可能崩溃的时刻，因为人们向你报告错误，而你试图在高速公路上修复引擎，这让你感到非常沮丧。
- en: Eventually hopefully you get past max Jank。 Everything calms down and everybody
    thinks everything is hunky dory so they start asking for feature requests。 And
    as they start asking for feature requests and you start hacking them in you start
    realizing that you have built the entirely wrong thing。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，希望你能超过最大 Jank。所有事情都平静下来，大家都觉得一切都很好，因此他们开始请求新功能。随着他们开始请求新功能，而你开始将其加入时，你开始意识到自己构建了完全错误的东西。
- en: You didn't understand the problem you built a good first attempt and at some
    point what I call the the Jank Legrange point L Jank you reach a point where the
    amount of mental and emotional effort to roll back all the technical debt that
    you have just written yourself into is equal to the effort of building a new thing
    from the ground up。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你没有理解问题，构建了一个不错的初步尝试，在某个时刻，我称之为 Jank Legrange 点 L Jank，你达到了一个点，回滚你自己编写的所有技术债务所需的心理和情感努力与从头构建新事物的努力相等。
- en: Usually you wait a couple months after that happens you ignore the feature requests
    for a while and then you build something new。 So after we reach Max Jank and thereafter
    we built something called Rube。 We called it Rube because all data pipelines are
    Rube Goldberg machines ours included。 Rube fixes a lot of a lot of problems with
    pants about it does use Ansible at the very base level but basically it's using
    air flow and the operators are written in Python。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通常在发生这种情况后你会等几个月，暂时忽略功能请求，然后构建一些新东西。因此在我们达到最大 Jank 之后，我们构建了一个叫 Rube 的东西。我们之所以叫它
    Rube，是因为所有数据管道都是 Rube Goldberg 机器，包括我们的。Rube 修复了与裤子相关的很多问题，它在基础层面使用 Ansible，但基本上使用的是
    airflow，操作符是用 Python 编写的。
- en: So the operators are unit testable we retain all the end-to-end testing we get
    all the benefits of air flow which are this really nice job orchestration top
    view rerunning jobs becomes really easily rerunning parts of jobs becomes really
    easy。 We also have a cli for searching through the data。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这些操作符是可以进行单元测试的，我们保留了所有端到端的测试，享受 airflow 带来的好处，这是一种非常不错的作业调度，重新运行作业变得非常容易，重新运行作业的部分也变得很简单。我们还有一个
    CLI 来搜索数据。
- en: One of the problems with pants about was just the log data was spread all over
    the place with Rube you can just basically pull up a webpage that has links to
    all of the logs all of the EC2 instances。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 关于裤子的一个问题是日志数据散落 everywhere，而使用 Rube，你基本上可以调出一个包含所有日志和 EC2 实例链接的网页。
- en: '![](img/20d91c795ad2920af997c03ad1fe7d9a_9.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20d91c795ad2920af997c03ad1fe7d9a_9.png)'
- en: What's really great about this is it reduces the burden on the pipeline support
    engineer which means that if you wrote the pipeline it is now possible to give
    somebody else the pager。 And you don't have to spend your entire life building
    it and maintaining it。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这点真的很棒，因为它减轻了管道支持工程师的负担，这意味着如果你写了管道，现在可以把值班工作交给其他人。而你不必花费一生的时间来构建和维护它。
- en: So that's really really nice is making it easy for other people to fix your
    mistakes。 So the second set of problems that we have to do is figure out where
    are we going to figure out what's on the ground where we were on the ground and
    how we're going to create GIS product out of that。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这真的很不错，让其他人更容易修复你的错误。所以我们必须解决的第二组问题是确定我们将在哪里、在地面上有些什么，以及我们将如何从中创建 GIS 产品。
- en: So I told you we have a six axis GPS。 Those six axes are the three rotational
    axes the roll pitch and yaw of the airplane。 And combined with those we know the
    latitude， longitude and altitude of the airplane and we can figure out where the
    sensor was pointing。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我告诉过你我们有一个六轴 GPS。这六个轴是飞机的三个旋转轴：滚转、俯仰和偏航。结合这些，我们可以知道飞机的纬度、经度和高度，从而确定传感器指向的位置。
- en: So the sensor itself is a line sensor so if you see the plane doing what we
    call the lawn mower here it goes back and forth and back and forth and back and
    forth。 And it sweeps out a polygon each time it goes one direction and then it
    sweeps out another polygon when it goes back the other way。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 所以传感器本身是一个线性传感器，如果你看到飞机像我们所称的“割草机”一样来回移动。每次它向一个方向移动时都会扫描出一个多边形，回程时则扫描出另一个多边形。
- en: So what we want to be able to do is we want to be able to separate out those
    polygons into individual pieces that we're going to crunch data over。 We want
    to make sure that if we're covering the same point twice that we're not averaging
    together that we're creating separate pieces of data so that we can view that
    place a couple times to verify our observations。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们想要做的是将那些多边形分离成单独的部分，我们将对其进行数据处理。我们想确保如果我们重复覆盖同一个点，不要将其平均，而是创建独立的数据部分，以便我们可以多次查看该位置以验证我们的观察。
- en: And also the turns produce really bad data because the airplane is banking and
    the sensor is basically pointing off towards the horizon。 You don't want to use
    any of that data。 So this is a classic classification problem。 So we threw it
    into Scikit Learn and we chose the K-means clustering algorithm。 Basically put
    a bunch of variables in there and we figure out can we cluster these into different
    groups that represent passes and turns。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 而且转弯时产生的数据非常糟糕，因为飞机在倾斜，传感器基本上是指向地平线的。你不想使用这些数据。因此，这就是一个经典的分类问题。我们将其放入Scikit
    Learn，选择了K均值聚类算法。基本上将一堆变量放进去，然后我们要弄清楚能否将这些聚类成代表通过和转弯的不同组。
- en: Different sets of variable groupings。 One of the really things I love about
    Scikit Learn especially if you're a casual ML user like me is you just tattoo
    and samples kind of end features on your arm and then you just like iterate through
    algorithms until you find something that works。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的变量组合。关于Scikit Learn，我特别喜欢的一点是，如果你像我一样是个偶尔使用机器学习的用户，你只需在自己的手臂上标记样本和特征，然后不断迭代算法，直到找到有效的解决方案。
- en: But it turns out if you're going to be doing simple ML with simple ML algorithms
    it pays to put a lot of thought into what your input variables are。 And at this
    point it actually was really valuable that I had some experience hang lighting
    oddly enough and I had a pretty good gut instinct about what a banking turn looks
    like。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 但事实证明，如果你要使用简单的机器学习和简单的机器学习算法，仔细考虑你的输入变量是非常重要的。此时，我之前的经验非常有价值，奇怪的是，我对银行转弯的样子有很好的直觉。
- en: So the variables I chose included like time derivative of the yaw， the time
    derivative of the speed。 the role of the airplane and the pitch of the airplane。
    And we threw those in there and we mixed it up I did a little bit of tweaking
    and it bizarrely came out with like a really good result the first time we started
    running it in production。 About 90% of the time you get really good separation
    of that pass into polygons。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择的变量包括偏航的时间导数、速度的时间导数、飞机的滚转和俯仰。我们将这些变量放进去，并进行了些许调整，奇迹般地第一次运行时就得到了非常好的结果。大约90%的时间，你能很好地将通过数据分离成多边形。
- en: You can see at the bottom there some of these are split up。 We do that to make
    the numerical averaging and the downstream processes easier。 But basically 90%
    of the time it works great。 We dump all the results into a single page leaflet
    app that gets stored on S3。 So the pipeline support engineer can pull it down
    and just do a visual check that make sure that the data processed correctly or
    in some cases didn't。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到底部有一些被拆分开。我们这样做是为了使数值平均和后续处理更容易。但基本上90%的时间它运作良好。我们将所有结果导入一个存储在S3上的单页小程序。这样，管道支持工程师就可以将其下载，并进行视觉检查，以确保数据处理正确，或者在某些情况下没有处理正确。
- en: We occasionally see catastrophic failure with this algorithm。 The reason you
    see catastrophic failure is that occasionally due to outlier data the passes and
    the turns get mixed up。 And I said the sensor is pointed off towards the horizon
    on those turns。 That's why you're getting this big blown out thing。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们偶尔会看到这个算法的灾难性失败。你之所以看到灾难性失败，是因为偶尔由于异常数据，通过和转弯的标记会混淆。我说过传感器在那些转弯时是指向地平线的。这就是为什么你会看到这个大范围的错误。
- en: But you pull it up you open it in Jupyter Notebook you trim out the little pieces
    of data that are making the algorithm go crazy and you rerun it and it comes out
    well。 And at the end of about a year of doing this you have a really nicely curated
    data set that you can use for training a supervised algorithm。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 但你将其拉起来，在Jupyter Notebook中打开，修剪掉那些让算法疯狂的小数据块，然后重新运行，结果很好。在大约一年之后，你就会得到一个非常精心策划的数据集，可以用来训练监督算法。
- en: So at this point neural networks all the way down we just picked up the scikit
    multi layer perceptron model。 You put every single variable you have in it。 The
    main trick is to make sure that you normalize and whiten your variables correctly。
    But after you've done that neural nets are great。 They will choose whatever algorithm
    they can simulate in order to make your data look like the training set。 And it
    worked really well。 This is now set it and forget it。 We never have to touch this
    thing。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 到这时，神经网络无处不在，我们选择了 scikit 的多层感知器模型。你把所有的变量都放进去。主要的诀窍是确保你正确地归一化和白化你的变量。但是在你做到这一点之后，神经网络非常出色。它们会选择任何可以模拟的算法，以使你的数据看起来像训练集。而且它工作得很好。这现在是设置后就忘。我们再也不需要碰这个东西。
- en: It's really good。 It is a really nice model for people who do casual machine
    learning like I do。 You can start with really sloppy data。 You do about a 90%
    cut on it in order to get good labeling。 You put about 10% human effort into it
    either your own or somebody on mechanical Turk or whatever。 And then you push
    it into your supervised algorithm and you get really nice results out of the end。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这真的很好。对于像我一样进行随意机器学习的人来说，这是一个非常不错的模型。你可以从非常粗糙的数据开始。你需要进行大约 90% 的筛选以获得良好的标签。你投入大约
    10% 的人工努力，无论是你自己还是 Mechanical Turk 上的人。然后你把它推入监督算法中，最终会得到非常不错的结果。
- en: So that was the second challenge。 One of the second challenges that we had to
    deal with was ground placement of the sensor data and how we separate that out。
    At this point the data actually has to make it into somebody's hands。 So we have
    to return to the slightly less sexy topic of report generation。 So when I started
    doing this I wanted to build a whiz bang data portal and people are going to be
    a log in and they're going to see their data and they're going to zoom around
    and climb on the ceiling。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这是第二个挑战。我们必须处理的第二个挑战是传感器数据的地面位置以及如何将其分离开来。在这一点上，数据实际上必须交到某个人的手中。因此，我们不得不回到稍微不那么吸引人的报告生成主题。当我开始做这个时，我想要建立一个炫酷的数据门户，人们将登录，查看他们的数据，四处浏览，甚至在天花板上爬。
- en: And then I remembered that people in pickup trucks have to drive out and actually
    figure out where the leaks are and fix them。 And these are those guys。 So they
    do not want a data portal。 They want a PDF with a list of lats and longs and pictures
    of the leaks and where to go to fix them。 So naturally since this was absolutely
    mission critical for our company to get right。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我想到了驾驶皮卡车的人，他们必须出去实际找出泄漏在哪里并修复它们。这就是那些人。因此，他们不需要一个数据门户。他们需要的是一个包含经纬度和泄漏照片的
    PDF，以及去修复它们的地点。所以显然，这对于我们的公司来说是至关重要的。
- en: I spent about three weeks hacking together something jank-tastic before our
    first report was due。 I wrote some SQL queries against our PostGIS database。 One
    of the main problems is that nothing available in open source commercially on
    the market is GIS centric。 And all of our data is GIS centric。 So we rolled something
    by hand。 It runs a bunch of queries。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我花了大约三周的时间拼凑出一些很糟糕的东西，直到我们的第一次报告到期。我对我们的 PostGIS 数据库写了一些 SQL 查询。主要的问题是市场上没有任何商业开源的
    GIS 相关产品。而我们的所有数据都是以 GIS 为中心的。因此，我们手动构建了一些东西。它运行了一些查询。
- en: It has a map generator。 It dumps a bunch of stuff into an Excel spreadsheet。
    Our project manager had his own mail merge thing that he was going to use to get
    those into Google Docs。 And immediately after the first report goes out， we say，
    "Okay， we want to change this。 We want to change that。 We want to change that。"
    And it just becomes a recursive dumpster fire。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 它有一个地图生成器。它会将一堆东西导出到 Excel 电子表格中。我们的项目经理有他自己的邮件合并工具，用于将这些内容导入 Google Docs。就在第一次报告发出后，我们说：“好的，我们想要更改这个。我们想要更改那个。我们想要更改那个。”这就变成了一个递归的垃圾火灾。
- en: Like the thing was a total mess。 And every Tuesday it was an epic battle of
    passive aggressiveness between me and the project manager about what we're going
    to put in features。 This is the data's wrong。 I don't know what's going on。 We
    got to get it out the door。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这个东西真是一团糟。每周二，我和项目经理之间都进行一场史诗般的被动攻击战，讨论我们要放入哪些功能。这些数据是错的。我不知道发生了什么。我们必须把它推出去。
- en: So the first thing that we had to do was actually settle what our business logic
    was。 Now that all the dust had settled。 Very quick moment。 I'm going to take a
    detour to tell you briefly about a -- I got sick of writing flowchart。 So I wrote
    a Python module for making flowcharts in Jupyter。 It's called "Flegisten。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们首先要做的就是明确我们的业务逻辑。现在一切尘埃落定。非常短暂的时刻。我将稍作偏离，给你们简单介绍一下——我厌倦了画流程图。因此我为在 Jupyter
    中制作流程图写了一个 Python 模块。它叫做“Flegisten”。
- en: '" It''s a really nice wraparound graph。 It''s available where you buy fine
    Python modules everywhere。 And we decided to go back to the beginning。 And I started
    with a very simple concept for our report generator that was going to be robust
    and scalable and reusable。'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: “这是一个非常不错的封装图。可以在任何地方购买到优质的 Python 模块。然后我们决定回到起点。我为我们的报告生成器设计了一个非常简单的概念，旨在实现健壮性、可扩展性和可重用性。
- en: It was called the abstract data provider。 And the abstract data provider used
    a SQL alchemy。 And it does two things。 Query and munch。 Query basically， when
    you override this。 you give it a query method。 And that query method gets run
    and gets passed into the munch。 And the munch munch is that data into whatever
    form you want for the output for your report。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 它被称为抽象数据提供者。抽象数据提供者使用 SQLAlchemy。它做两件事：查询和 munch。查询基本上是，当你覆盖这个方法时，你需要提供一个查询方法。这个查询方法会被执行，并传递给
    munch。munch 将数据转换为你希望在报告输出中呈现的任何格式。
- en: The default munch here is it basically just turns it into a dict of lists of
    tuples where each tuple is a row。 And you can just push those into your template。
    So the overall flow looks like this。 Post just flows into SQL alchemy。 SQL alchemy
    creates a dict。 Some of that gets stuffed back into Postgres so that we know what
    we reported to people。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的默认 munch 基本上只是将其转换为一个字典，其中每个元组是一行。你可以将这些内容推送到你的模板中。因此，整体流程看起来是这样的。Post 直接流入
    SQLAlchemy。SQLAlchemy 创建一个字典。一部分数据被填回 Postgres，以便我们知道向人们报告了什么。
- en: So we don't re-report the same things。 You'll find the shocking。 but sometimes
    people don't fix things right after we tell them about them。 That gets pushed
    into JINJA。 JINJA is a really nice templating library。 It consumes HTML。 It pushes
    the HTML template， templated with the data out to docraptor。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 因此我们不会重复报告相同的事情。你会觉得很震惊，但有时人们在我们告诉他们之后并没有及时修复问题。这些内容被推送到 JINJA。JINJA 是一个非常不错的模板库。它消费
    HTML。它将与数据模板化的 HTML 输出到 docraptor。
- en: And docraptor produces a PDF for us。 Importantly， docraptor supports pagination
    in HTML documents。 which a lot of PDF converters don't。 The very simplest version
    of this is called the default data provider。 And in it， you just stuff a SQL query
    into the metadata。 which is a comment in the beginning of the HTML file。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Docraptor 为我们生成 PDF。重要的是，docraptor 支持 HTML 文档的分页，而许多 PDF 转换器并不支持。这种最简单的版本被称为默认数据提供者。在其中，你只需将
    SQL 查询填入元数据中，这是一条在 HTML 文件开头的注释。
- en: along with the input parameters and some defaults。 And then you get magically
    through the magic of machines， you get templated stuff out。 But the nice thing
    that we have done is instead we build something that consumes SQL alchemy query
    objects that we build with the ORM。 And these act like database views， except
    they are much less difficult to maintain than database views。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 以及输入参数和一些默认值。然后通过机器的魔力，你就能得到模板化的内容。但是我们所做的很不错的是，我们构建了一个消费 SQLAlchemy 查询对象的系统，这些对象是我们使用
    ORM 构建的。这些对象像数据库视图一样工作，但维护起来要简单得多。
- en: And they are composable， which means that if I have a query that tells me， say。
    where all the leaks are， is unit tested， I know it produces correct data。 And
    I can use it both to create a list of leaks and a map of leaks。 by passing it
    into different data providers。 And this one in particular， the munch step。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 而且它们是可组合的，这意味着如果我有一个查询，告诉我所有漏水的地方，并且经过单元测试，我知道它产生正确的数据。我可以使用它来生成漏水清单和漏水地图，只需将其传递给不同的数据提供者。这个特别的步骤是
    munch。
- en: what it does， is it creates an image of a map and then stuffs that into the
    HTML as a base64 encoded data URL。 It's just an embedded image of a map。 So you
    take the same data and you just push into different data providers to get different
    outputs。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 它的作用是创建地图的图像，然后将其嵌入到 HTML 中，作为 base64 编码的数据 URL。这只是一个嵌入的地图图像。因此，你只需将相同的数据推送到不同的数据提供者，以获得不同的输出。
- en: '![](img/20d91c795ad2920af997c03ad1fe7d9a_11.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20d91c795ad2920af997c03ad1fe7d9a_11.png)'
- en: It means that things always self-consistent。 So where does that leave us up
    until now？
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着事物总是自我一致的。那么到目前为止，这给我们留下了什么呢？
- en: '![](img/20d91c795ad2920af997c03ad1fe7d9a_13.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20d91c795ad2920af997c03ad1fe7d9a_13.png)'
- en: Our first major survey took three months。 And we， if you think about the amount
    of C02 that a single person is responsible for over the course of a year。 we mitigated
    about 2，000 person years of CO2 equivalents in methane。 And we are now doing a
    survey ten times that size over the New Mexico-Permian basin。 So we're hoping
    to do a lot more of that。 That's it。 And I can take questions。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们第一次大规模调查用了三个月。如果你考虑到一个人一年内负责的二氧化碳量，我们大约减轻了2,000个人人年所排放的甲烷当量二氧化碳。而我们现在在新墨西哥-佩米安盆地进行的调查规模是这个的十倍。所以我们希望能做更多的调查。这就是全部。我可以回答问题。
- en: '![](img/20d91c795ad2920af997c03ad1fe7d9a_15.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20d91c795ad2920af997c03ad1fe7d9a_15.png)'
- en: '[applause]， [inaudible]， If there are any questions， you can come to this mic。
    If you have secret questions， I''ll be available afterwards as well。 [silence]，
    Thank you。 I''m curious when you know where the leaks are。 Are they easy to fix？'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[掌声]，[听不清]，如果有任何问题，你可以到这个麦克风前提问。如果你有秘密问题，我会在之后也很乐意回答。[沉默]，谢谢。我想知道你们何时知道泄漏在哪里。它们容易修复吗？'
- en: It depends on the reason for them。 Some of them are what they call fugitive
    emissions。 which are actual leaks where somebody， for instance， left a hatch open
    or there was a seal broken。 Some of them are， they tell us， "Yeah， we know about
    that。" Those are due to capacity issues。 It gets complicated real fast。 [silence]，
    Hi， I'm curious。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这取决于它们的原因。有些被称为逸散排放，实际上是泄漏，例如，有人忘记关舱口或密封圈破损。有些则是，他们告诉我们，“是的，我们知道。”那些是由于容量问题。这很快就会变得复杂。[沉默]，嗨，我很好奇。
- en: Have you ever flown over any massive cattle farms and detected a bunch of methane？
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你有没有飞过一些大型养牛场并检测到大量甲烷？
- en: You may be aware that in California， the largest source of methane emissions
    is agricultural。 People think it's cowfarts。 It is actually cow burps。 [laughter]，
    We have seen agricultural methane。 but it's not really a focus for us right now。
    My understanding is that there's a substantial amount of methane within ice and
    as that melts。 that's releasing it as well。 I'm curious if you have any plans
    to survey in arctic areas。 So。
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能知道，在加利福尼亚，最大的甲烷排放源是农业。人们认为是牛放屁。实际上是牛打嗝。[笑声]，我们见过农业甲烷，但现在并不是我们的重点。我理解冰层中存在大量甲烷，随着冰层融化，也释放出来。我很好奇你们是否有计划在北极地区进行调查。因此。
- en: the issue of methane release from the permafrost is incredibly frightening。
    and I would encourage you to look at it。 If you don't know about it。 it's going
    to create a positive feedback loop that will kill us all。 Sorry。 I can't make
    jokes about everything， seriously。 No， we tend to be looking for。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 从永久冻土释放甲烷的问题令人感到极其恐惧。我建议你关注一下。如果你对此不知情，这将形成一个正反馈循环，最终会导致我们的灭亡。抱歉，我无法对所有事情开玩笑，认真地说。我们倾向于寻找。
- en: there is methane existing in the atmosphere at a low concentration。 so we're
    looking at elevated concentrations of methane， so we have to subtract off the
    background。 So， for things where basically an entire continent is being covered
    in excess levels of methane。 you need to do that from a satellite， which eventually
    someday we will launch。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 大气中存在低浓度的甲烷。因此，我们要关注的是升高的甲烷浓度，因此必须从背景中扣除。因此，对于一个大陆被过量甲烷覆盖的情况，你需要通过卫星来进行监测，最终我们会发射卫星。
- en: but right now we are doing ground-based surveys。 Is any of the state of being
    fed back into the regulatory environment？
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 但现在我们正在进行基于地面的调查。有任何数据被反馈到监管环境中吗？
- en: We don't really work directly with a lot of regulators。 We have in non-oil producing
    states for people who are looking at different kinds of industries。 There's a
    lot of tension in our work between being able to provide services to oil industries
    and being able to provide security for their data。 and we find that the most benefit
    that we can provide is by telling people where to go fix their leaks。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们并不直接与许多监管机构合作。我们在非石油生产州与不同类型的行业的人合作。我们的工作中存在着在为石油行业提供服务和确保他们的数据安全之间的紧张关系。我们发现，能够提供的最大益处就是告诉人们去哪里修复泄漏。
- en: Have you just considered using drones instead of planes of collecting the data？
    Classic question。 This is 2019。 Everybody wants to put it on his drone。 We can
    cover 50 square miles a day with a Cessna。 Civilian drones are limited to line
    of sight and don't go up to 3。000 feet AGL someday they will， and maybe we'll
    put them on drones。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你有没有考虑过用无人机代替飞机来收集数据？经典问题。这是2019年。每个人都想把它放在无人机上。我们可以用塞斯纳飞机覆盖每天50平方英里。民用无人机受到视距的限制，不能升高到3000英尺的地面以上，但总有一天它们会，或许我们会把它们放在无人机上。
- en: What information do you give to people who don't quite believe in global warming？
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你会给那些不太相信全球变暖的人提供什么信息？
- en: To unanchor that bad information。 I don't talk to those people， honestly。 I
    don't have people coming up to me being like， "I want to argue with you about
    global warming。 and I wouldn't talk to them if they did。 It's not my job。"， First，
    thank you for your work。 My question is related to the drones。 Have you considered
    crowdsourcing， maybe to private pilots？
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 为了消除那些错误的信息。我坦诚地说，我不和那些人交谈。我没有人来找我说：“我想和你争论全球变暖。”如果有人这样做，我也不会和他们交谈。这不是我的工作。首先，感谢你的努力。我的问题与无人机有关。你有没有考虑过众包，或许是向私人飞行员？
- en: They could receive one of these sensor units and whenever they're all flying
    can set it to record？
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 他们可以接收其中一个传感器单元，每当他们都在飞行时就可以设置记录？
- en: It's an interesting idea。 We actually don't own our own airplanes。 We work with
    a company that flies for us， although we're tightly integrated with them， obviously。
    We have a relatively small number of sensors and we don't sell the sensors。 We
    are a data sales company， which is a very different model。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个有趣的想法。我们实际上并不拥有自己的飞机。我们与一家为我们飞行的公司合作，虽然我们显然与他们紧密整合。我们拥有相对较少的传感器，并且不出售这些传感器。我们是一家数据销售公司，这是一种截然不同的模式。
- en: There are companies that have not the same but similar types of services and
    they sell hardware to people。 Operating this kind of hardware on your own， it's
    just not something you want to do。 You really want to have professionals doing
    it。 We don't have flight engineers in in Midland anymore。 We have basically locals
    there who just run the thing， point and click off a laptop。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 有些公司提供的服务类型不完全相同，但类似，并且他们向人们出售硬件。自己操作这种硬件，真不是你想做的事情。你真的希望有专业人士来做。我们在米德兰已经没有飞行工程师了。基本上是当地人在那儿运行这个，指点并用笔记本电脑点击。
- en: but you can't really do it while you're flying a plane。 Hey， how's it going？
    Thanks for the talk。 I'm curious to hear if you have any ideas for how we can
    help you or how I。 as an individual contributor on a Saturday， can help with this？
    I have not thought about that。 I will say this。 One of the things， I used to be
    a real language bigot and I grew up in。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 但是在你飞行时真的无法做到这一点。嘿，最近怎么样？谢谢你的发言。我很好奇你是否有什么想法，关于我们如何帮助你，或者我作为个人贡献者在周六能如何帮助这一点？我还没有考虑过这个。我会说，曾几何时，我真的是个语言偏见者，我是在。
- en: as an engineer， writing Java and my Python is super oopy and I type annotate
    everything。 The thing that I have come to love about Python is not the mechanics
    of the language itself。 but the people who work on it。 SQL alchemy is like my
    six team member。 If anybody knows if Michael Barrie is here， please come find
    me and introduce me so I can buy him like six drinks。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名工程师，我编写Java代码，而我的Python代码超级面向对象，我为每个内容都加上类型注释。我对Python的热爱并不在于语言本身的机制，而是参与其中的人。SQLAlchemy就像我的第六个团队成员。如果有人知道迈克尔·巴里在这里，请来找我并介绍他，这样我就可以请他喝六杯酒。
- en: Building software that makes my life easier makes this possible。 So thank you
    to all of you for doing that。 Honest to God。 Being that it's your job to know
    about emissions and what lessening them will do for us in a positive way。 but
    also knowing how bad it's gotten。 How do you maintain the positivity to continue
    this work？
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 构建能够让我的生活更轻松的软件使这一切成为可能。所以感谢大家的努力。老实说，作为你们的工作，了解排放及减少排放对我们的积极影响，但也意识到情况有多糟糕。你是如何保持积极的态度继续这项工作的？
- en: How do you take care of your mental health as a person who has to deal with
    greenhouse gas on a daily basis thinking about it？
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个每天都要处理温室气体的人，你是如何照顾自己的心理健康的？
- en: That is a really good question。 It does keep me up at night sometimes。 I would
    say there's a couple answers that first is I make a lot of jokes。 Second is we
    have not crossed the Rubicon yet。 It is still possible to turn things back。 Second
    thing that you can do on your Saturdays is if you don't live in California or
    if you live in the less liberal parts of California。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这是个非常好的问题。有时这让我夜不能寐。我会说有几个答案，首先是我开了很多玩笑。其次是我们还没有越过鲁宾逊河。现在仍然有可能扭转局面。你在周六可以做的第二件事是，如果你不住在加州，或者住在加州不太自由的地方。
- en: call your senator， call your congressman， tell them that you want to see some
    sort。 I'm not going to advocate specifically for the Green New Deal because I
    haven't read enough of it。 but you want to see climate change action taken。 You
    want to see it now and you want to see it done with our tax dollars because it's
    important。 So we haven't really crossed the Rubicon。 Unfortunately。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 给你的参议员打电话，给你的国会议员打电话，告诉他们你想看到某种行动。我不会特别倡导绿色新政，因为我还没有读够。但你想看到气候变化的行动。你希望现在就看到，并且希望用我们的税款来完成，因为这很重要。所以我们还没有真正越过鲁宾逊河。不幸的是。
- en: the third thing is that we post a lot of stuff on our Slack at work。 I don't
    read all of it。 It's difficult。 I got a hard enough time。 I got two twin toddlers
    and I got to make this stuff work。 I can't just bring myself down with that all
    the time。 I know the outline is the problem and I'm probably not the best person
    to tell you what the latest and greatest is for that reason。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 第三件事是我们在工作中在 Slack 上发布了很多信息。我并不全部阅读。这很困难。我已经很难应付了。我有两个双胞胎幼儿，我必须让这些事情运作。我不能总是让自己被这些困扰。我知道大纲是问题所在，可能我并不是最适合告诉你最新和最棒的人。
- en: Is that like a line that you have to draw for yourself outside of work that
    you don't read about climate change？
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这就像是你在工作之外为自己划定的界限，不阅读关于气候变化的内容吗？
- en: No， I do read about climate change outside of work。 I just， I don't immerse
    myself in it。 I make art， I raise my kids， I do my job nine to five。 I'm hoping
    next year to come here and talk about my art a bit more because there's Python
    and art too。 Thank you。 So my question is about the effort you went through to
    clean up the data to adjust for like the pitch and the role of the airplane。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 不，我确实在工作之外阅读气候变化的内容。我只是，不会完全沉浸在其中。我创作艺术，养育孩子，做九到五的工作。我希望明年能来这里多谈谈我的艺术，因为 Python
    和艺术也有关。谢谢。所以我的问题是关于你为了调整飞机的俯仰和滚转而进行数据清理的努力。
- en: Did you consider handling that through hardware by having something to keep
    all the instruments level and flat when the airplane is turning？
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你考虑过通过硬件处理这个问题吗，让某些东西在飞机转弯时保持所有仪器水平和平坦？
- en: No， the thing is clamped onto the airplane and the mechanism by which it is
    clamped onto the airplane is regulated in most ways by the FAA。 And sort of hardware
    feedback， I spent a long time as a physicist actually doing position driven。 position
    control， feedback driven position control。 That's something we want to do on an
    airplane in real time。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 不，那个东西是夹在飞机上的，而夹在飞机上的机制在很多方面是由 FAA 监管的。而且某种硬件反馈，我作为物理学家花了很长时间进行位置驱动的控制，反馈驱动的位置控制。这是我们想在飞机上实时做到的事情。
- en: It's much better to post process it out if you can。 Thanks。 Somewhat obnoxious
    version of the same question。 Did you consider asking the pilot to tell you when
    they were turning？
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果可以的话，后处理会好得多。谢谢。有点令人厌烦的同样问题。你考虑过让飞行员在他们转弯时告诉你吗？
- en: Yeah， but then you have to have a human being that are pushing a button every
    time as they're turning the aircraft。 I mean， we would have to record that with
    the data and then use it in the processing step。 It is just like every input has
    to be recorded and filtered through the pipeline。 And if the pilot does it wrong，
    then you get screwed up and I trust the pilot a lot less than I trust Suck it
    learned。
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，但你必须有一个人每次转动飞机时按按钮。我是说，我们必须将这些记录下来，然后在处理步骤中使用。就像每个输入都必须被记录并过滤通过管道。如果飞行员做错了，那么你就会出问题，我对飞行员的信任远不及对
    Suck it learned 的信任。
- en: You're working with oil and gas companies。 What's their attitude towards climate
    change？
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你在与石油和天然气公司合作。他们对气候变化的态度是什么？
- en: It varies greatly。 There is something right now， as of about a year ago called
    the OGCI。 the Oil and Glass Climate Initiative， believe it or not， all the oil
    majors are in it right now。 And one of the reasons that they are looking at methane
    is because methane is a win-win-win。 It is a product for them。 It is really bad
    for global warming。 It is bad for safety。
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这差别很大。大约一年前，现在有一个叫OGCI的组织，石油和天然气气候倡议，信不信由你，所有主要石油公司目前都参与其中。它们关注甲烷的原因之一是因为甲烷是双赢的产品。它对全球变暖非常糟糕，对安全也有害。
- en: It is bad for just about everything。 And they can work on methane without having
    to make any compromises on CO2。 And the question about how we regulate CO2 emissions
    is again one that I encourage you to call your Senator and your Congressman。 But
    in terms of methane， there's a lot of interest in movement。 Since I have just
    a minute left。 there was regulation under the Obama administration to regulate
    methane emissions。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这对几乎所有事情都不好。而且他们可以在不妥协于二氧化碳的情况下处理甲烷。关于我们如何监管二氧化碳排放的问题，我再次鼓励你联系你的参议员和国会议员。但就甲烷而言，当前有很多动向值得关注。因为我只剩下一分钟了，奥巴马政府曾对甲烷排放进行过监管。
- en: The Trump administration rolled that back。 But everybody sees the writing on
    the wall and no methane regulation is coming。 So we are working to make sure that
    this technology is going to be palatable to regulators by creating equivalency
    standards that let people understand mathematically why this is a good thing to
    do。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 特朗普政府取消了这些规定。但每个人都能看到未来的迹象，甲烷的监管将不会到来。因此，我们正在努力确保这项技术能被监管者接受，通过创建等效标准，使人们能够数学上理解这样做的好处。
- en: So obviously the company's business depends a lot on the cost of the natural
    gas。 And I'm curious outside the US to work with other oil producers in the outside
    of the US who where the natural gas price might be higher and make more incentive
    for your company to provide your service。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 很显然，这家公司的业务在很大程度上依赖于天然气的成本。我很好奇在美国以外的地方与其他石油生产商合作，那里的天然气价格可能更高，这将为贵公司提供服务提供更多激励。
- en: I don't know that much about natural gas economics。 Oil is one of the most fungible
    things there is out there。 Natural gas is pretty plentiful because of fracking。
    We've worked in Canada。 There is a lot of weird economics of natural gas like
    how much equipment you have to have on the well pad in order to ship it off in
    order to make it profitable。
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我对天然气经济了解不多。石油是世上最具流动性的东西之一。由于水力压裂，天然气相当丰富。我们曾在加拿大工作过。天然气的经济存在很多奇怪之处，比如为了使其有利可图，你在井场上必须有多少设备才能运送出去。
- en: In some cases it gets cheap enough like in North Dakota where people just flare
    it off。 It's better to flare it off than it is to let it escape into the atmosphere。
    That video you saw was guys relighting flare stack that went out。 And that shouldn't
    happen but it does and we detect those。
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，价格降得足够低，比如在北达科他州，人们干脆直接燃烧掉。燃烧掉比让其逃逸到大气中要好。你看到的视频是有人重新点燃熄灭的燃烧器。这不应该发生，但确实发生了，我们会检测到这些情况。
- en: So the answer is I don't really know how the economics of natural gas in other
    countries work but we have certainly been invited to fly in other countries but
    there is a ton of work to do in the New Mexico and Texas-Permian basin right now。
    Hi， no we're running out of time so I'm going to try sorry for the hard question
    but as I'm sure you know the UN climate report said that we have something like
    less than 12 years now before climate change becomes irreversible。
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 所以答案是我并不真正了解其他国家的天然气经济运作，但我们当然受邀前往其他国家，不过在新墨西哥州和德克萨斯州的佩米安盆地目前还有很多工作要做。嗨，不，我们时间不够了，我会尽量简洁，抱歉提了这个难题，但正如你所知道的，联合国气候报告指出我们现在的时间少于12年，否则气候变化将变得不可逆转。
- en: So we're in basically the 12th hour for Earth as we know it。 So just wondering
    what advice would you give us as programmers and data scientists and computer
    scientists。 What types of things do you think we should be working on？
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们基本上处于地球的最后时刻。我想知道你会给我们这些程序员、数据科学家和计算机科学家什么建议。你认为我们应该关注哪些方面？
- en: I really wish I had a good answer for you。 It is a difficult problem and like
    I live and work in San Francisco and the Silicon Valley and you people who are
    from there and people who have watched the TV show probably are aware that everybody
    thinks that their work is changing the world。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我真的希望我能给你一个好的答案。这是一个困难的问题，因为我生活和工作在旧金山和硅谷，而你们这些来自那里的人员以及观看过电视节目的观众可能都知道，每个人都认为他们的工作正在改变世界。
- en: and that software has actually fairly limited capabilities of making an impact
    on fundamental physics。 I wish there was code we could write to fix this。 We need
    to do with what we can。 You need to call your senator and your congressperson。
    Thank you very much for attending the next speaker starts in this room in 10 minutes。
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，软件在对基础物理产生影响方面的能力实际上相当有限。我希望我们能写出代码来解决这个问题。我们需要利用我们能做到的事情。你需要打电话给你的参议员和国会议员。非常感谢你们的参加，下一位演讲者将在这个房间里在10分钟后开始。
- en: '![](img/20d91c795ad2920af997c03ad1fe7d9a_17.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20d91c795ad2920af997c03ad1fe7d9a_17.png)'
- en: (applause)。
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: （掌声）。
- en: '![](img/20d91c795ad2920af997c03ad1fe7d9a_19.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20d91c795ad2920af997c03ad1fe7d9a_19.png)'
- en: (applause)。
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: （掌声）。
