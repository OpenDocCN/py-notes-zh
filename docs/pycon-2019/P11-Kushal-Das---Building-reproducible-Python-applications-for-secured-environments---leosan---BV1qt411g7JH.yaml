- en: P11：Kushal Das - Building reproducible Python applications for secured environments
    - leosan - BV1qt411g7JH
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P11：Kushal Das - 为安全环境构建可重现的Python应用程序 - leosan - BV1qt411g7JH
- en: Hello， Pythonistas。 This is the welcome to the last session of the day。 Here
    is， Kushal Das。 He's going to talk today about building reproducible Python application
    for。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你好，Python爱好者们。欢迎来到今天的最后一个环节。这里是Kushal Das。他今天将谈论为安全环境构建可重现的Python应用程序。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_1.png)'
- en: secure environments。 So it's the stages you ask Kushal。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 安全环境。因此，这是你问Kushal的阶段。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_3.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_3.png)'
- en: Thank you。 Hello。 Can you hear me？ Well， okay。 Before I start talking， I want
    to give a shout out。 to my friends at Chicago， Python user group。 Hi， all my friends
    there。 And let's start。 Before anything else， a little bit about myself。 I'm a
    public interest technologist with a。 small nonprofit called Freedom of the Press
    Foundation， where we try to protect， defend。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 谢谢。你好。你能听到我吗？好的。在我开始讲之前，我想向芝加哥的Python用户组的朋友们致意。大家好。让我们开始。在开始之前，先简单介绍一下自己。我是一个公共利益技术人员，属于一个叫“新闻自由基金会”的小型非营利组织，我们努力保护和捍卫。
- en: and empower public interest journalism。 So we mostly work with different kind
    of media， orgs。 We do digital security training。 We write software。 We help them
    to make their， security better。 I'm also heavily involved with various other nonprofits
    and opens/free， software projects。 One of them is something we all know here，
    Python Software Foundation。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 并赋能公共利益新闻。因此，我们主要与不同类型的媒体组织合作。我们进行数字安全培训。我们编写软件。我们帮助他们提高安全性。我还参与了其他各种非营利和开源/免费软件项目。其中一个就是我们都熟悉的Python软件基金会。
- en: I'm a director at Python Software Foundation， also a core developer of the C
    Python， the。 programming language itself。 And I'm also a core member of another
    nonprofit/project known， as Tor。 where we try to make sure that our human rights
    can get defended and we can maintain， our privacy。 So I'm going to start the actual
    materials of the talk now。 So I'm going to。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我是Python软件基金会的董事，同时也是C Python编程语言的核心开发者。我还是另一个非营利项目Tor的核心成员，我们努力确保人权能够得到捍卫，并维护我们的隐私。所以我现在要开始实际的演讲材料。我将要。
- en: guess that many of us are here Python developers。 But you're going to learn
    about one thing。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我猜我们许多人都是Python开发者。但你将学习到一件事。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_5.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_5.png)'
- en: that this whole talk， we're not going to talk about anything new tools or new
    systems。 We're。 going to make sure that we're going to reuse whatever is already
    available to us from the。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在整个演讲中，我们不会讨论任何新的工具或新系统。我们将确保重用我们已有的所有资源。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_7.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_7.png)'
- en: community。 So a very simple Python application。 I'm going to just use it as
    an example。 And。 as developers， we always think it works on my laptop and job
    done。 But as we know that。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 社区。因此，一个非常简单的Python应用程序。我将用它作为一个例子。作为开发者，我们总是认为它在我的笔记本电脑上运行正常，工作完成了。但我们知道。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_9.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_9.png)'
- en: '![](img/069980deb734f12f9f2c07f687ad295d_10.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_10.png)'
- en: organizations and companies do not work in the same way。 So for the same Python
    application。 we may run it on one server。 We may execute/run it on different servers
    or this magical thing。 also known as cloud。 There are different ways this applications
    get into this server/computers/cloud。 One of the easiest step is to use the source
    code management system itself。 I'm going to。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 组织和公司并不是以相同的方式运作。因此，对于同一个Python应用程序，我们可能会在一台服务器上运行它。我们可能在不同的服务器上执行它，或者在这个神奇的东西上，也就是云。有不同的方法将这些应用程序传输到服务器/计算机/云上。最简单的一步是使用源代码管理系统本身。我将要。
- en: mention Git because that's one of the most highest used in these days， commonly。
    Then。 if you're on a Debian/wontoworld， you may want to use 。dev， Debian packages。
    If you're。 coming from a Fedora/centoise/redhead world， you may want to use rpm
    to deploy your final。 application。 At this moment， many of you must be thinking
    that there is another way of deploying。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 提到Git，因为这是如今使用最广泛的工具之一。如果你在Debian/wontoworld中，可能想要使用.dev，Debian包。如果你来自Fedora/centoise/redhead世界，可能想用rpm来部署最终应用程序。在这个时候，许多人可能在想还有其他部署方式。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_12.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_12.png)'
- en: in the modern world。 Sadly， this is not the right talk for the -- I'm going
    to talk mostly。 related to things on the Python world。 A little bit about the
    actual project。 So I'm a maintainer。 for a project known as secure drop， which
    is an open source whistle-blower platform。 It。 means anyone can securely and privately
    leak information to different media orgs so that。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在现代世界中。可惜，这不是一个合适的谈话——我将主要谈论与Python世界相关的内容。稍微谈谈实际项目。所以我是一个名为secure drop的项目的维护者，这是一个开源的举报者平台。这意味着任何人都可以安全且私密地向不同的媒体组织泄露信息，以便。
- en: they don't get caught by， let's say， their respective governments or any three
    or four。 letter government agencies。 Secure drop is deployed over 75 media orgs，
    including New， York Times。 Washington Post， Guardian， Intercept， and various other
    orgs。 So this is what the。 sources see when they go and try to leak information
    over to our browser。 The journalists in those。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 不会被他们各自的政府或任何三四个字母的政府机构抓住。Secure drop已在超过75个媒体组织中部署，包括《纽约时报》、《华盛顿邮报》、《卫报》、《拦截》和其他各种组织。因此，当资源在尝试将信息泄露到我们的浏览器时，他们会看到这些内容。那些记者。
- en: organizations， they have to get into a locked room inside their org and boot
    a tail's operating。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 组织，他们必须进入自己组织内一个锁着的房间并启动尾部的操作系统。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_14.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_14.png)'
- en: system based laptop where they will see something like this。 You can think like
    this as an inbox。 correct， where you can see different random names， where you
    can click and download any。 of the material or messages。 But the part of the story
    is these all documents are encrypted。 with a key which is not available on the
    same laptop， which is there in a second computer。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 基于系统的笔记本电脑，他们将看到类似这样的界面。你可以把它想象成一个收件箱，对吧，可以看到不同的随机名称，可以点击并下载任何材料或消息。但故事的关键是，这些文件都是加密的，钥匙并不在同一台笔记本电脑上，而是在第二台计算机中。
- en: which is air gapped。 Means now the journalist has to somehow take those documents
    using。 either a USB key or write once， CD-ROM/DBDRIVE and then bring it to the
    next computer and。 like decrypt those files and then view the documents。 And this
    whole process is kind。 of taking time。 It takes almost like 40 to 45 minutes for
    every journalist to go through。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个隔离的环境。这意味着现在记者必须以某种方式使用USB钥匙或一次性CD-ROM/DBDRIVE来获取这些文件，然后将其带到下一台计算机上，解密这些文件，然后查看文档。整个过程有点耗时。每位记者大约需要40到45分钟来完成这个过程。
- en: the documents they want to view。 So it brings up a question between security
    and usability。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 获取他们想查看的文件。因此，这引发了安全性和可用性之间的问题。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_16.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_16.png)'
- en: because in like our case， the nature of the kind of post or project secure drop
    works。 nation state actors are always a pretty good as a advisory for this project。
    So we have。 to choose between two and in this particular case we should always
    try to get some help。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 因为在我们的案例中，secure drop所处理的项目类型，国家行为者始终是这个项目的良好顾问。所以我们必须在两个之间做出选择，在这种特定情况下，我们应该始终尝试寻求帮助。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_18.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_18.png)'
- en: from professionals。 Luckily for secure drop project we got someone named Nina
    who really。 helped us to build the next steps and we have something like this
    which is in the alpha level。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 来自专业人士。幸运的是，在secure drop项目中，我们有一个名叫Nina的人，她真的帮助我们构建了下一步，我们有这样的东西，现在处于Alpha阶段。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_20.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_20.png)'
- en: which is a desktop application for the journalist and from the look and view
    you can understand。 it's just another normal application but that's get deployed
    on a special operating system。 known as cubes。 Cubes-OS。org is the website。 Cubes
    is a reasonably secure operating system。 which uses federal slash zen to build
    up a such a system where each and every application。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个为记者设计的桌面应用程序，从外观上你可以理解，它只是另一个普通应用程序，但它部署在一个名为Cubes的特殊操作系统上。Cubes-OS.org是网站。Cubes是一个相对安全的操作系统，使用联邦/Zen构建这样一个系统，其中每个应用程序。
- en: may run in different VMs and within the same laptop or desktop you can actually
    have air。 gap VMs where you can store your private keys and details。 So this really
    brings in。 the both worlds little bit nearby the security and usability and that's
    the future we are。 looking at and we particularly deploy this application in using
    Debian packages。 So for。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 可能在不同的虚拟机中运行，而在同一台笔记本或台式机上，实际上可以有空气隔离的虚拟机，你可以在其中存储你的私钥和细节。因此，这确实将安全性和可用性这两个世界拉得更近，而这正是我们所展望的未来，我们特别使用Debian包来部署这个应用程序。因此。
- en: the rest of the talk when I will say Debian packages or Debian that means a
    Debian VM。 inside of cubes-OS in a computer。 Now the question is what all things
    can go wrong security。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在我说到Debian包或Debian时，意味着计算机中一个Debian VM内的cube-OS。现在问题是，所有的安全问题可能出现在哪里。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_22.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_22.png)'
- en: wise。 I'm sure all of you have different ideas and different stories。 I'm going
    to take a。 few of those which recently came in my mind to share with all of you。
    A few months ago。 Asus figured out that their signing keys were taken over by
    some attackers and they managed。 to sign some malware and post across to multiple
    millions of people's computer I guess。 There。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 明智地说，我相信大家都有不同的想法和故事。我将分享一些最近浮现在我脑海中的内容。几个月前，华硕发现他们的签名密钥被一些攻击者接管，他们成功地签署了一些恶意软件，并传播到数百万人的计算机上，我想就是那里。
- en: is another example in another programming language world where is a really important
    used library。 got malware and in our Python world if we see in last year in 2018
    there are some tries to put。 in malware using some type of squating where people
    wrote a project which is almost similar。 name of a known project and they tried
    to put in some malware which in turn tried to steal。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个编程语言世界中的例子，那里有一个非常重要的使用库感染了恶意软件。在我们的Python世界中，如果我们回顾去年2018年，有一些尝试通过某种类型的挤压方式放入恶意软件，人们写了一个项目，名称几乎与一个已知项目相似，他们试图放入一些恶意软件，进而试图窃取。
- en: Bitcoin wallet addresses and details。 Those are the few like three examples
    I put in here。 but this is not the end of our attack sites。 A few years ago this
    particular gentleman。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 比特币钱包地址和细节。这是我在这里列出的几个例子，但这并不是我们攻击网站的终点。几年前，这位绅士。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_24.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_24.png)'
- en: Mr。 Edwards Snowden also talked about a document IHUNC that means that particular
    document is。 about few let's say three later government agency folks who loves
    to visit different。 conferences and at the same time try to find C-sad means to
    various infrastructure and get。 their credentials so that in turn they can own
    those infrastructure and figure out and。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 爱德华·斯诺登先生还谈到了一个文件IHUNC，意味着该文件是关于几个，假设说三个，政府机构人员，他们喜欢参加不同的会议，同时尝试找到各种基础设施的C-sad方式，并获取他们的凭证，以便他们能够拥有这些基础设施并进行了解。
- en: decide whom to kill next part of the mission。 I don't know to make you paranoid
    but it might。 also happen that some people such people may be sitting just beside
    you or behind you。 The threads so all the points I mentioned one after we can
    summarize them into four simple， points。 The source can contain malware let's
    say that someone got access to the developer's laptop。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 决定下一个任务的目标。我并不是想让你们感到偏执，但也可能会发生一些人就坐在你旁边或你身后。所有我提到的点，我们可以将它们总结为四个简单的点。源代码可能包含恶意软件，假设有人访问了开发者的笔记本电脑。
- en: and change some code which developer never noticed of our dependencies or the
    source is totally。 changed。 Bineries can be replaced with malware if the adversary
    is powerful they can do man。 in the middle attacks while you are downloading the
    source of binary。 The storage of the web。 server or in case let's say the whole
    infrastructure can be compromised correct and we all know。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 并更改了一些代码，而开发者从未注意到我们的依赖项或源代码完全被更改。如果对手强大，二进制文件可以被恶意软件替换，他们可以在你下载二进制源时进行中间人攻击。网络存储或整个平台的基础设施可能会被攻击，我们都知道。
- en: some stories about these things so we're going to see how we can mitigate these
    issues。 The。 simplest relation to that starts with one point review your dependencies
    it's important。 and I'm going to go into that more。 So as I said we are a Python
    project we use PPNB a。 lot so PPNB can help us or PPNB whichever way you want
    to pronounce PPNB helps us to create。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这些事情的一些故事，我们将看看如何缓解这些问题。最简单的方法是从一个点开始，检查你的依赖项，这很重要。我会进一步讲解这一点。正如我所说，我们是一个
    Python 项目，使用 PPNB 很多，因此 PPNB 可以帮助我们，或者你可以选择其他发音方式，PPNB 帮助我们创建。
- en: a requirements。txt which will look something like this where we mentioned the
    project or。 slash dependency name and the version but we do not want to use this
    instead we want to。 use something like this sorry for the size thing because you
    know not fit in one line。 So it's basically the project name the version number
    and a SAR 256 sum of a binary wheel。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 `requirements.txt`，它的内容大致如下，其中提到项目或依赖名称和版本，但我们不想使用这个，而是希望使用类似于这个的格式，抱歉因为大小问题不能放在一行中。所以它基本上是项目名称、版本号和一个二进制
    wheel 的 `SAR 256 sum`。
- en: wheels are the binary package built from the source star balls in our case we
    want to make。 sure that we can use only the wheels which are built by us that's
    the end goal part of， it。 Now to do so as I mentioned in the beginning we never
    created a new tool instead we have。 a make file you can understand long time Linux
    users and also a few best slash Python scripts。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: wheels 是从源 `star balls` 构建的二进制包。在我们的案例中，我们想确保只使用我们自己构建的 wheels，这就是最终目标。为了做到这一点，正如我在开头提到的，我们从未创建新工具，而是使用一个
    `make file`，你可以理解为长时间使用 Linux 的用户，以及一些最好的 Python 脚本。
- en: which help us to create all of these one of the step there is called build-wheels
    this。 is the step you can see that it has four different commands different scripts
    it's actually。 running the last script just creates a URL of all the tar balls
    and the source sorry binary。 wheels we created the first script verify hyphen
    SAR 256 sum hyphen signature that verifies。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令帮助我们创建所有这些，其中一个步骤称为 `build-wheels`。这是一个你可以看到的步骤，它有四个不同的命令和不同的脚本。实际上，最后的脚本只是创建了所有
    tar balls 的 URL 和源，抱歉，二进制 wheels，我们创建的第一个脚本是 `verify -SAR 256 sum -signature`，这会进行验证。
- en: that the it exactly matches with our signatures or not。 And the build and sync
    wheels now we。 are going to go in depth to see what we do there。 So we also have
    a separate file known。 as p file dot lock it has the source has says and all recursive
    dependencies so what we。 do is that we create a temporary requirements dot txt
    with only source file source star ball。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 确保它与我们的签名完全匹配。现在我们将深入了解构建和同步的过程。我们还有一个单独的文件，称为 `p file dot lock`，它包含源和所有递归依赖项。我们的操作是创建一个临时的
    `requirements dot txt`，只包含源文件 `source star ball`。
- en: has says and then in our script we execute this p 3 command which only downloads
    the source。 star balls you can see that we are telling it do not download any
    binary wheels get me。 all the source star balls and then we re verify that and
    because we are passing hyphen。 require hyphen has says it re verifies that all
    the has is match then another p 3 command。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在我们的脚本中执行这个 `p 3` 命令，它只下载源 `star balls`。你可以看到，我们告诉它不要下载任何二进制 wheels，只获取所有的源
    `star balls`，然后我们重新验证，因为我们传递了 `-require -has says`，它会重新验证所有的 `has` 是否匹配，然后是另一个
    `p 3` 命令。
- en: helps us to build this into wheels this is a standard commands from people and
    we rebuild。 all of those star balls into wheels now at this moment because we
    have freshly built wheels。 on the system we can now create this requirements dot
    txt file which has the start of 56 sums。 of the wheels which we build and the
    maintainer of the python project that is us we can create。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这帮助我们将其构建为 wheels，这是来自人们的标准命令，我们将所有的 `star balls` 重建为 wheels。此时，由于我们在系统上新构建了
    wheels，我们现在可以创建这个 `requirements dot txt` 文件，其中包含我们构建的 wheels 的 `start of 56 sums`，而作为
    Python 项目的维护者，我们可以创建。
- en: a source star ball of our own set up dot pie as this this will have a requirements
    dot。 txt with our own will signature at this moment many of you may have the question
    we never。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们自己的 `set up dot pie` 的源 `star ball`，它将包含我们的要求 `dot txt` 和我们自己的签名。此时，许多人可能会问，我们从未。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_26.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_26.png)'
- en: check the dependency source code correct we just happily assumed whatever came
    from pip。 is valid so to actually rectify this step we have a rule and to follow
    on the rule we。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 检查依赖源代码是否正确，我们只是理所当然地认为从 pip 得到的所有内容都是有效的。为了纠正这一步，我们有一个规则，并遵循这个规则。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_28.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_28.png)'
- en: use a tool called defo scope which helps us to create a diff between two different
    are。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 使用一个名为 defo scope 的工具，可以帮助我们在两个不同文件之间创建差异。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_30.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_30.png)'
- en: balls and then at least two human beings two developers manually go through
    the diff of。 the whole change to verify that this this particular source code
    turbo doesn't have any。 malware or any code which is connecting to random sockets
    on internet or tries to download。 code or let's say doesn't have base 64 encoded
    lot of data which is not supposed to have so。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 两个开发者手动查看整个变更的差异，以验证这个特定的源代码 turbo 是否没有任何恶意软件或任何与互联网随机套接字连接的代码，或者试图下载代码，或者说不包含不应有的
    base 64 编码的数据。
- en: we verify all these steps and then only allow any changes in the updates or
    the dependencies。 for each and every dependency and we actually store those dependencies
    in a file called。 satup 56 sums dot txt you can imagine from the name or that
    it's just names of all tarpals。 and wheels at the same time the satup 56 sums
    and then we sign it with our keys which are。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们验证所有这些步骤，然后只允许在更新或依赖项中进行任何更改。对于每一个依赖项，我们实际上将这些依赖项存储在一个名为 satup 56 sums.txt
    的文件中，你可以想象它的名称，里面只包含所有 tarpal 和 wheel 的名称，同时 satup 56 sums 也会被我们的密钥签名。
- en: not on the system all are always either on air gap computers or on hardware
    tokens and。 we keep the same file sign file there so that anyone can verify and
    our tools verify the。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 系统上并不总是有空气间隙计算机或硬件令牌，我们保持相同的签名文件，以便任何人都可以验证，而我们的工具也会进行验证。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_32.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_32.png)'
- en: same couple of times in at this moment we have our source star balls we have
    the wheels。 now we have to make sure that we can consume those wheels they are
    different amazing technologies。 but luckily for us in python world we can just
    use a simple old technology also known。 as html files we can create some index
    dot html files which can enable us to create。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个时刻，我们有我们的源 star balls 和 wheels，现在我们必须确保能够使用这些 wheels。它们是不同的惊人技术，但幸运的是在 Python
    世界中，我们可以使用简单的旧技术，也就是 HTML 文件，我们可以创建一些 index.html 文件，以使我们能够创建。
- en: a private repository or says our own repository which will provide p files sorry
    the tarp。 source star balls and binary wheels and people work if you want to know
    more later at home。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 一个私人仓库，或者说我们自己的仓库，将提供 p 文件，抱歉，tar 资源 star balls 和二进制 wheels，如果你想在家了解更多。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_34.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_34.png)'
- en: you can search about this pep pep 503 this has all things in details here are
    two examples。 this is the index top index page you can see it has just links to
    different projects and。 if you go to into any of the projects it will have URLs
    to the each tarpal and the wheel。 file static files which we can verify commit
    to github and deploy anywhere we want static。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以搜索这个 PEP PEP 503，里面有所有的详细信息，这里有两个示例。这是索引主页，你可以看到它只是链接到不同项目。如果你进入任何项目，它将有每个
    tarpal 和 wheel 文件的 URL 静态文件，我们可以验证、提交到 GitHub，并在我们想要的地方部署静态文件。
- en: files correct up to this we managed to get source code we managed to build them
    into。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，我们成功获取了源代码，并将其构建成。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_36.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_36.png)'
- en: wheels now let's talk about deploying the actual application how do you want
    to do this you。 can raise your hand about like you know how many of us already
    saw this before in life。 or did this and we can always say that this is dangerous
    because a python dependency will。 change things into your system python libraries
    and this may go very bad or sad at the same。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们谈谈如何部署实际应用，你想如何进行？你可以举手，看看我们中有多少人之前见过这个或做过这件事。我们总是可以说这很危险，因为 Python 依赖项会更改你的系统
    Python 库，这可能会变得非常糟糕或令人悲伤。
- en: time so for a remedy we know about virtual environment correct we use it to
    develop our。 applications what about just packaging the whole virtual environment
    instead and then。 we figured out in the last picon that we are not the only people
    who are thinking about。 this and don't stop actually pointed us to a project named
    dh-virtual n which is coming。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决问题，我们知道虚拟环境，对吧？我们用它来开发我们的应用程序，包装整个虚拟环境怎么样？我们发现，在上一个 Picon 中，我们并不是唯一在考虑这个问题的人，实际上有人指出一个名为
    dh-virtual n 的项目正在进行。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_38.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_38.png)'
- en: from spotify an open source project which modifies and adds some extra layers
    on top。 of debut and packaging so that you can install build and package a whole
    virtual n for your。 python application in that way you can actually now control
    all the python dependencies of。 your application and you can install it easily
    in a virtual n and you can still package it。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Spotify 的一个开源项目，它修改并添加了一些额外的层，以便于初始和打包，这样你就可以为你的 Python 应用程序安装、构建和打包整个虚拟环境。通过这种方式，你实际上可以控制应用程序的所有
    Python 依赖项，并且可以轻松地在虚拟环境中安装它，同时你仍然可以对其进行打包。
- en: automatically here is an example of the rules files there is too much of text
    but if I just。 try to click this line you can see that we are saying we are using
    python 3。5 setup。tools。 and the index this is the index we use at secure drop
    so you can actually open it up in your。 computer later on and find it out and
    you will also find that this particular make file。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个自动化的示例规则文件，文本有点多，但如果我尝试点击这一行，你可以看到我们说我们正在使用 Python 3.5 的 setup.tools，以及我们在
    Secure Drop 使用的索引。因此你可以在你的计算机上打开它并了解更多信息，你还会发现这个特定的 Makefile。
- en: has four separate commands at the end a couple of fine lines so using those
    things we try。 to achieve the next level that is reproducible builds this is actually
    enabled from Debian。 stretch onwards or Debian versions where it will help us
    or anyone else to be able to produce。 the exact same artifact from the exact same
    source code so it doesn't matter if I am building。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后有四个单独的命令和一些细微的调整，因此使用这些工具我们尝试实现下一个层次：可重现的构建。这实际上是从 Debian Stretch 版本开始启用的，或者说是
    Debian 的版本，它将帮助我们或其他人能够从完全相同的源代码生成完全相同的工件，所以无论我在构建什么都没有关系。
- en: the Debian package today in my laptop or in our production system or if tomorrow
    you want。 to try to build the same package again we will get the exact same final
    output all of。 these things together help us to create a secure usable reproducible
    builds the things it has。 are authenticity you can actually check who made those
    builds there is a sign with our。
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 今天在我的笔记本电脑或我们的生产系统上的 Debian 包，或者如果明天你想尝试再次构建相同的包，我们将获得完全相同的最终输出。所有这些因素共同帮助我们创建安全、可用、可重现的构建，所包含的内容有真实性，你实际上可以检查是谁制作了这些构建，并且有我们的签名。
- en: keys you can have auditability correct you can have reproducibility to have
    exact same。 build and outcome that whatever software you are installing for your
    secured environment。 are exactly what it's supposed to be not anything fancy now
    these steps together can help us。 to mitigate those threats we started from the
    first threat source contains malware so for。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以拥有审计能力，确保可重现性，以获得完全相同的构建和结果，无论你在安全环境中安装什么软件，都是它应有的样子，而不是其他花哨的东西。这些步骤共同帮助我们减轻那些威胁，我们从第一个威胁开始，它的源头包含恶意软件。
- en: this is the step where we do the human review to make sure that the source star
    ball is。 what it should be and then we sign store and sign the G。 Sartu 56 sums
    with GPG keys now that also helps us because we also store the Sartu 56。 sums
    of the binary wheels that means binary cannot be replaced and throughout our build。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们进行人工审核的步骤，以确保源代码包是应该的样子，然后我们使用 GPG 密钥对 G. Sartu 56 校验和进行存储和签名。这也帮助我们，因为我们还存储了二进制轮的
    Sartu 56 校验和，这意味着二进制文件无法被替换，并且在我们的构建过程中。
- en: process there are many places where we double check or triple check or the same
    keys and。 the values of the Sartu 56 sums man in the middle attack it's get taken
    care by two different。 things again HTTPS which is the standard thing everyone
    should now use plus the Sartu。 56 sums so that the final thing which comes down
    to a computer and Debian packages also。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中，我们有很多地方会对同一密钥和 Sartu 56 校验和的值进行二次或三次检查，针对中间人攻击，我们通过两个不同的方式来解决这一问题：再次是
    HTTPS，这是一种每个人现在都应该使用的标准，以及 Sartu 56 校验和，因此最终到达计算机的 Debian 包也是如此。
- en: they make sure that is the exact same thing because none of the signing keys
    are there。 on a network connected box anywhere so we also make sure that just
    in case our infrastructure。 slash web applications slash web server gets compromised
    that no one will get access to。 those keys that they can replace the actual any
    of those sign files like this is a way。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 他们确保这是完全相同的东西，因为没有任何签名密钥在任何连接到网络的机器上。因此，我们也确保万一我们的基础设施、网络应用程序或网络服务器被入侵，没人能够获取那些密钥，以替换任何这些签名文件，这是一种保障方式。
- en: correct one can try to push a new malware or new source into our system and
    on top of。 it using the reproducible builds guidelines we managed to create the
    reproducible builds。 which at the end give us certain amount of secured idea where
    we can really say that these。 reproducible builds helps us to verify what we are
    finally running and I can tell you。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你在托管自己的pipi服务器，所以你在构建自己的虚拟环境。没错，确实有人可能试图将新恶意软件或新源推送到我们的系统中。基于可重复构建的指导方针，我们设法创建了可重复构建，这最终给我们带来了相当安全的理念，让我们真的能说这些可重复构建帮助我们验证我们最终运行的内容。
- en: one thing honestly that it sounds a lot of steps but even before this talk today
    at PyCon。 for the last few days I was showing the slides and the ideas to various
    other people in this。 conference who actually are much more better experts than
    me on this and all of us actually。 agreed that this table looks much more center
    to make sure that we can reduce those threats。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，这听起来步骤很多，但在今天的PyCon会议之前的几天里，我向会议上其他更专业的人展示了幻灯片和想法，我们一致认为这个表格看起来更能确保我们能够减少这些威胁。
- en: Here are few links freedom dot press is the website of our organization secure
    dot org。 is the primary website for secure drop project those URLs where you can
    find those scripts。 and all the other scripts slash make file and it also contains
    the update policy on us and。 because this is available only for Debian I wrote
    a similar thing for rpm packages just。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几个链接，freedom.press是我们组织的网站，secure.org是secure drop项目的主要网站，这些网址可以找到相关脚本和其他脚本/Makefile，它还包含我们的更新政策。因为这仅适用于Debian，我为rpm包写了类似的东西。
- en: in case anyone of you want to deploy the similar thing for rpm based operating
    system say fedora。 sento as rel you can use the same thing。 Thank you I'll be
    open up for questions now。 Any questions anyone？ Yep， here I'll repeat。 I can
    repeat you tell me。 Yes we know about nix but the idea is that because we are
    so much depend already into。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你们中的任何人想为基于rpm的操作系统（比如Fedora、CentOS或RHEL）部署类似的东西，可以使用相同的方法。谢谢，我现在可以接受提问。有什么问题吗？好的，我可以重复一遍。你告诉我。是的，我们知道Nix，但因为我们已经依赖太多了。
- en: the whole idea of using Debian slash Ubuntu based systems and the kind of small
    team we。 have we cannot make a lot of changes at the same time。 So the idea was
    like let's try to do what we can do or achieve within staying the same。 like operating
    system level where we are and something which just works out of the box。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Debian/Ubuntu系统的整个想法和我们的小团队意味着我们不能同时做很多更改。所以我们的想法是，尽量在我们所在的操作系统层面上做我们能做的事情，找到那些开箱即用的解决方案。
- en: That's why we chose to add all of these inside the Debian package we install。
    Any other questions anything？ Yes。 Hi， so first to drop I'm curious as to what
    went into the decision to set it up the way。 that you did as opposed to considering
    things like blockchain or trust execution environments。 Okay。 number one point
    I'm not a blockchain expert at all。 Number one。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么我们选择将所有这些内容添加到我们安装的Debian包中。还有其他问题吗？是的。嗨，首先我想知道为什么你们选择了这样的设置，而不是考虑区块链或可信执行环境。好的，第一点，我根本不是区块链专家。
- en: Number two our idea was like again as I said like we want to use the tools and
    technologies。 already available to us which is being consumed all across the python
    environments and we。 as I said like we found this is the most common thing which
    we can use and there are few。 times where people came and told like I know me
    personally that oh you can use blockchain。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 第二点，我们的想法是，正如我所说，我们希望使用现有的工具和技术，这些工具在所有Python环境中都被广泛使用。正如我所说，我们发现这是最常见的解决方案，有几次有人告诉我，我知道我个人认为你可以使用区块链。
- en: to solve all your security problems and my general answer to them is why don't
    you come。 back with a PR。 So I don't know anything about blockchain other than
    it's a database some sort of like。 yeah sorry that's my answer。 Yep next question
    please。 You have you're hosting your own pipi server for that so you're building
    your virtual environment。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 解决你所有安全问题的办法是为什么你们不回来提个PR。关于区块链我了解不多，只知道它是一种数据库，类似于……对不起，这就是我的回答。好的，下一个问题请。
- en: and you're packaging that up so the end user is receiving a Debian package but
    they're。 not actually from installing that interacting direct with that pipi server
    is that correct。 So the virtual and already has all things installed。 Your pipi
    server is just internal at this point right or are you exposing that as well。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你在打包时，最终用户接收的是Debian包，但他们实际上并不是直接与那个pipi服务器交互，没错吧？所以虚拟环境已经安装了所有东西。你的pipi服务器现在只是内部使用，对吧？还是你也在公开这个？
- en: such that people can for transparency purposes。 Yes so this is the URL of the
    server which we are using now Dave hyphen bean dot ops dot。 secure drop dot org
    and any one of you can actually open that URL slash simple I mean。 that URL so
    it's public but it's only used while building the Debian package instead of。 end
    users so end users just use the Debian package which is already ready for consumption。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这样人们可以出于透明性目的。是的，这是我们现在使用的服务器的URL：**dave-bean.ops.securedrop.org**，你们中的任何人实际上都可以打开这个URL，简单来说。这个URL是公开的，但它只在构建Debian包时使用，而最终用户只需使用已经准备好的Debian包即可。
- en: but everything is public because the idea is you should not have to trust us
    or what you。 get from internet you are supposed to be able to verify and audit
    what you are using。 Yeah yep。 And then just one more quick question it was you're
    doing PGP encryption on the text file。 containing all of your checksums was there
    kind of a process where you experimented with。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 但一切都是公开的，因为这个想法是你不应该信任我们或你从互联网得到的东西，你应该能够验证和审计你所使用的东西。是的，没错。然后还有一个快速的问题，你在包含所有校验和的文本文件上进行PGP加密，是否有一个过程让你进行实验？
- en: like signing the like tar balls or signing different portions of it such that
    the putting。 all the checksums into a text file and signing that was the most
    efficient or simple。 Yes because it stores I mean we store that file inside our
    git repository and like we。 trust the standard HTTPS like thing we are doing and
    instead of trying to reintroduce。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 就像对tar包进行签名，或签署其中不同部分，使得将所有校验和放入一个文本文件并对其签名是最有效或简单的。是的，因为我们把那个文件存储在我们的git仓库中，并且我们信任我们正在做的标准HTTPS，而不是试图重新引入。
- en: or redevelop anything new and because we trust also our GPG as a tool for the
    whole project。 we just go with GPG。 Awesome。 Thank you。 Thank you。 Hey。 Next。
    Hey。 So great talk thank you。 So I just want to give a suggestion that there's
    a tool called FPM that you can use to specify。 the type of package that you want
    and when you run it in any folder it packages up the。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 或重新开发任何新东西，因为我们也信任我们的GPG作为整个项目的工具。我们只是使用GPG。太棒了。谢谢。谢谢。嘿。下一个。嘿。很好的演讲，谢谢。我只是想给一个建议，有一个叫做FPM的工具，你可以用来指定。你想要的包类型，当你在任何文件夹中运行它时，它会打包。
- en: whole thing into an RPM or a DAB or whatever you want。 So we at work we basically
    do the same thing that you do but instead of using different。 tools for different
    types we just use FPM that you sell。 Thanks for the suggestion。 Thanks for the
    ability。 That's open source tool so you can check it out。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 整个过程转换成一个RPM或DAB或你想要的任何东西。所以我们在工作中基本上做和你一样的事情，但我们不使用不同的工具来处理不同类型的包，而是使用你提到的FPM。谢谢你的建议。谢谢你的能力。那是一个开源工具，所以你可以去看看。
- en: Yeah I mean I am coming from a federal packaging background like I spend my
    life with the federal。 project so and I also package things for DAB and N12 in
    a different capacity。 My personal finding as a packager I found like having separate
    package builds for the。 every system is works pretty well。 Next question this
    side。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我的背景来自联邦打包，我把一生都投入到联邦项目中，我也以不同的身份为DAB和N12打包。作为打包者，我个人发现为每个系统单独构建包效果很好。下一个问题在这一边。
- en: So when you're making your builds for Debian do you have a separate process
    to make the。 builds for Ubuntu because I use a DH virtual and to create builds
    for Ubuntu and they never。 work on Debian or I can create them on Debian and then
    they don't work on Ubuntu。 Have you run into that or is that you know are you
    trying to support both？
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 那么当你为Debian制作构建时，是否有一个单独的过程来为Ubuntu制作构建？因为我使用DH虚拟来创建Ubuntu的构建，它们在Debian上从来都不工作，或者我可以在Debian上创建它们，但在Ubuntu上又不工作。你遇到过这种情况吗，或者你是在尝试同时支持两者？
- en: So the idea is that you make sure that your build environment matches with what
    you are。 running and so if you are running say building for Debian 9 stretch and
    latest Ubuntu。 Whatever version number you have to build two separate packages
    because they will not。 be compatible with each other and if they contain ASO files
    that is like binaries it。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这个想法是确保你的构建环境与正在运行的环境匹配，如果你在为 Debian 9 stretch 和最新的 Ubuntu 构建，那么无论你的版本号是什么，你都必须构建两个单独的包，因为它们不兼容，如果它们包含
    ASO 文件，那就是像二进制文件一样。
- en: will not work basically so that's the way to work。 Thanks。 Hi thank you for
    the talk。 I'm noticed that you consume from PIPI on the source packages intentionally
    which means。 that in your Debian build depends who will be required to provide
    all of the build dependencies。 of all the PIP packages that you have all of the
    C extension packages that you have。
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上这将无法工作，所以这是解决方法。谢谢。嗨，感谢您的发言。我注意到您故意从 PIPI 消耗源包，这意味着在您的 Debian 构建中，必须提供您所有
    PIP 包的构建依赖项，以及您所有 C 扩展包的依赖项。
- en: Was that has it been a problem in any way was it a concern？
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这在任何方面都是问题吗？这是一个担忧吗？
- en: Did you have to have a build depends of the C extension packages that you consume
    from。 PIPI to be in your build depends。 So the question is like did you get into
    any kind of trouble while building any kind of。 C extensions till now no because
    the biggest C based thing like I had we have two one is。 cryptography and I think
    PIML also has now C extension and like no so I think we required。
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 您是否需要将从 PIPI 消耗的 C 扩展包列为构建依赖项？问题是，您在构建任何 C 扩展时是否遇到过任何麻烦？到目前为止没有，因为最大的 C 基础库是我们有的两个，一个是
    cryptography，另一个是 PIML 现在也有 C 扩展，所以我认为我们需要。
- en: only one of the dependencies which we added as a build requires for the package
    and make。 sure that it exists。 Thank you。 For DFSCOAP have you found anything
    interesting while reviewing all those changes and a second。 question in reviewing
    all those changes in your dependencies you run into review fatigue。 and how do
    you deal with that？ Correct。 That is about DFSCOAP have you noticed anything special？
    No。
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们为包添加的唯一一个构建依赖项，并确保它存在。谢谢。对于 DFSCOAP，在审核所有这些更改时，您发现了什么有趣的事情吗？第二个问题是在审核所有这些依赖项的更改时，您是否感到审核疲劳？您是如何应对的？正确。关于
    DFSCOAP，您注意到什么特别之处吗？没有。
- en: it's just that long set of text one has to go through which creates the problem
    and。 we're talking to more and more projects less people we found that many other
    companies。 also do the same internally。 So one of the things I'm planning to work
    on maybe just after sprints or during sprint。 is we'll try to create a way where
    different projects slash people whom we can trust can。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于需要浏览一长串文本，这造成了困扰。我们与越来越多的项目沟通时发现，参与的人越来越少，许多其他公司在内部也有类似的做法。所以我计划在冲刺后或冲刺期间工作，尝试创建一种方式，让不同的项目或我们可以信任的人可以进行合作。
- en: publish this information。 Right now at Secure Drop we are publishing it in our
    GitHub。 So github。com/freedomofthepress in the Debian packaging the actual repo。
    I am signing the whole change with my GPG keys and putting it up in the wiki which
    is not。 working right now here network but yeah it's going to create a lot of
    pressure but the more。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 发布这些信息。目前在 Secure Drop，我们将其发布在我们的 GitHub 上。所以 github.com/freedomofthepress 在
    Debian 打包的实际仓库中。我正在用我的 GPG 密钥签署整个更改，并将其放在维基上，但现在在这里的网络上无法工作。不过，这将带来很大的压力，但越多。
- en: people I talk to everyone says manually reviewing the source code is the only
    way to make sure。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我与人交谈时，每个人都说手动审核源代码是确保安全的唯一方法。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_40.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_40.png)'
- en: that the source is clean。 So we have to find out a way as a community so that
    we can actually start trusting it more。 Thank you。 Thank you。 Okay， I guess no
    more questions。
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 确保源代码是干净的。所以我们必须作为一个社区找到一种方式，使我们能够更信任它。谢谢。谢谢。好的，我想没有更多的问题了。
- en: '![](img/069980deb734f12f9f2c07f687ad295d_42.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/069980deb734f12f9f2c07f687ad295d_42.png)'
- en: Thank you。 [Applause]， (applause)， (applause)。
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 谢谢。[掌声]，（掌声），（掌声）。
