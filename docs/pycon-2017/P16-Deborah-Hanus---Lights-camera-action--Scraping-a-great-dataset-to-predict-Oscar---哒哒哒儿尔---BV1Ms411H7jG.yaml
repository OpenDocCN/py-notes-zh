- en: P16：Deborah Hanus   Lights camera action! Scraping a great dataset to predict
    Oscar - 哒哒哒儿尔 - BV1Ms411H7jG
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P16：黛博拉·哈努斯   摄影机准备！抓取优秀数据集以预测奥斯卡 - 哒哒哒儿尔 - BV1Ms411H7jG
- en: 2017。 Please， before we start， if you do have a device that makes a noise， please
    convince。 it not to make a noise or else I'm going to come over and stare at you
    personally。 Our。 next speaker is Deborah Harnas and she's going to be teaching
    us about predicting Oscar， winners。 Please make a feel when welcome。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 2017年。请在我们开始之前，如果你有会发出声音的设备，请让它保持安静，否则我会亲自过来盯着你看。我们的下一位演讲者是黛博拉·哈纳斯，她将教我们如何预测奥斯卡获奖者。请热烈欢迎她。
- en: '![](img/65d674d59499334b89518a4a5965f4e3_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65d674d59499334b89518a4a5965f4e3_1.png)'
- en: Hello everyone。 Today I'm going to talk to you about how to predict box offices
    and。 Oscar winners using things you found on the internet。 To start off with，
    I'll tell you。 about how I got to doing what I'm doing today。 I did my undergraduate
    and my masters at MIT。 where I studied computer science and did all of my undergraduate
    research developing computational。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 大家好。今天我将和你们讨论如何利用互联网上找到的资料来预测票房和奥斯卡获奖者。首先，我会告诉你我是如何做到今天所做的事情的。我在麻省理工学院完成了本科学位和硕士学位，主修计算机科学，并进行了所有本科研究，开发了关于人们如何看待和感知事物的计算模型。
- en: models of how people see and perceive things。 Then I spent a year as a Fulbright
    scholar。 in Cambodia learning about how education translates into job creation。
    Then I worked as a software。 engineer at a startup in San Francisco。 And then
    I decided to quit life and become a PhD， student。 So now I'm a PhD student at
    Harvard studying machine learning。 As part of that。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我作为富布赖特学者在柬埔寨度过了一年，学习教育如何转化为就业机会。接着，我在旧金山的一家初创公司担任软件工程师。后来我决定辞掉工作，成为一名博士生。现在我是一名在哈佛大学学习机器学习的博士生。作为其中的一部分。
- en: I get to work on a lot of exciting data related projects like this one。 So to
    start off with。 we'll talk about how to build and use a great data set。 The first。
    and probably most important step is to define a question that you can actually
    answer。 Then。 you want to acquire good data to answer that question， explore the
    data and draw conclusions。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我有机会参与许多令人兴奋的数据相关项目，比如这个。因此，首先我们将讨论如何构建和使用一个优秀的数据集。第一步，也是可能最重要的一步，是定义一个你能够实际回答的问题。然后，你需要获取良好的数据来回答这个问题，探索数据并得出结论。
- en: from that data。 And today we'll step through all of those processes。 So we'll
    start by。 defining a question we can answer。 And today we are all going to pretend
    that we are movie。 producers。 We have money and we're going to pay for movies
    to be made， but we want to。 get something in return。 Preferably a huge stack of
    cash。 So how can we answer this question？
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 从这些数据中。今天我们将逐步了解所有这些过程。因此，我们将首先定义一个我们可以回答的问题。今天我们都将假装自己是电影制片人。我们有资金，并准备为制作电影付费，但我们希望得到一些回报。最好是一大堆现金。那么我们如何回答这个问题？
- en: What we really want to know is will this movie be a box office hit？ But it's
    pretty hard。 to answer that question。 How do you define that？ So a better way
    that we might phrase。 this is what is the likelihood that my movie will be a box
    office hit given that it has。 certain features？ And another way that we could
    ask this question is what attributes。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们真正想知道的是这部电影是否会成为票房热门？但这个问题相当难以回答。你如何定义这一点？因此，我们可以更好地表述这个问题：在考虑到它具有某些特征的情况下，我的电影成为票房热门的可能性有多大？我们还可以问这个问题的另一种方式是，有哪些属性。
- en: of a movie are correlated with box office success？ So that is the question that
    we're。 going to be answering today。 So now we want to acquire good data。 So first
    let's start。 off with what is good data。 We want it to be relevant to the problem
    at hand。 We probably。 want it to be relatively structured。 If it's stored in some
    sort of table or something， like that。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一部电影的哪些因素与票房成功相关？这就是我们今天要回答的问题。因此，我们现在想要获取良好的数据。那么首先，让我们从什么是良好数据开始。我们希望它与当前问题相关。我们可能希望它相对结构化。如果它以某种形式存储在表格中或类似的方式。
- en: that makes it a lot easier for us to acquire。 Ideally we want it to be relatively，
    complete。 If it's not relatively complete， there's a whole field of research and
    another。 talk in how to deal with that。 So some of the places that we found data
    for this project。 are one box office mojo， which is this great 90s style site
    with this excellent table。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这使我们获取数据变得容易得多。理想情况下，我们希望它相对完整。如果它不够完整，还有一个完整的研究领域以及其他讲座来解决这个问题。因此，我们为这个项目找到数据的一些地方是
    Box Office Mojo，这是一个很棒的90年代风格网站，有着出色的表格。
- en: which gives you a lot of information about the top movies， the top grossing
    movies in， each year。 Another great place is Rotten Tomatoes。 Also has a lot of
    really structured， data。 For every movie you have things like a rating。 Wikipedia
    is perfect for things， like this。 It has that great box in the corner which has
    the title of the movie producer， director。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这提供了关于每年票房最高电影的大量信息。另一个很好的地方是烂番茄，也有很多结构化数据。每部电影都有评级等信息。维基百科非常适合这些内容。它的右上角有一个很棒的框，显示电影标题、制片人、导演。
- en: meaning that it's formatted in the same way， making it much easier to grab。
    And also IMDB is another great place to get this sort of data。 Okay， so now how
    can we。 get this data？ One way is we can use an API which is just a group of functions
    that are。 defined like get movies which will go and get all the information for
    movies and that is。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着它以相同的方式格式化，使得抓取数据变得更加容易。IMDB也是获取这类数据的另一个好地方。好的，那么我们如何获取这些数据呢？一种方法是使用API，这只是一些定义好的函数，例如get
    movies，可以获取所有电影的信息。
- en: usually defined by the person producing the data。 So in our case we used IMDB
    pi。 And the。 other is to write a web scraper。 And to write a web scraper we need
    to start by getting。 all the text that is in the web page， bringing it down to
    our computer， making it queryable。 and then we can do stuff with it。 So to start
    off with we're going to make an HTTP request。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 通常由生成数据的人定义。因此在我们的案例中，我们使用了IMDB pi。而另一个方法是编写网页爬虫。要编写网页爬虫，我们需要先获取网页中的所有文本，将其下载到我们的计算机上，使其可查询，然后我们可以对其进行操作。因此，首先我们将发出一个HTTP请求。
- en: to get the HTML。 This is what box office mojo looks like。 Isn't it beautiful
    how structured， it is？
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以获取HTML。这就是票房魔力的样子。它是如此结构化，难道不是很美吗？
- en: So there are a couple of interesting things to point out here。 The most interesting。
    right now is the URL because the URL actually tells us exactly what information
    we're going。 to get from this。 So we're going to zoom in and look a little bit
    more closely at this。 The after the question mark there are a number of parameters
    which define what information。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几个有趣的点值得指出。现在最有趣的是URL，因为URL实际上告诉我们将获取哪些信息。因此我们将放大，仔细观察。问号后面有多个参数，定义了我们要获取的信息。
- en: we're going to get。 Most relevantly there is a page number。 The page equals
    one and then。 we're looking at the items for 2017 we can see from the last parameter。
    So we can get。 information from all these pages。 So this is just a snippet from
    a jupyter notebook and。 we're going using a request to make a get call using that
    URL and we're looping through。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将获取的信息中，最相关的是页码。页数等于一，然后我们查看2017年的项目，我们可以从最后一个参数看到。因此，我们可以从所有这些页面获取信息。这只是一个来自jupyter
    notebook的片段，我们将使用请求发出get调用，使用那个URL并循环遍历所有页面。
- en: all of the pages。 Notably we're pausing and between each grab and we'll talk
    more about， that later。 And then we're putting all the items in a dictionary and
    if we look at the。 first item in the dictionary it is just raw HTML。 Very， very
    unreadable raw HTML。 So to。 make this more usable rather than using a bunch of
    regular expressions we can make。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，我们在每次抓取之间暂停，稍后会谈到这个问题。然后我们将所有项目放入字典中，如果我们查看字典中的第一个项目，它只是原始的HTML，极其难以阅读的原始HTML。因此，为了使其更可用，而不是使用一堆正则表达式，我们可以进行处理。
- en: it queryable using something like beautiful soup or pie query。 So what those
    do is they。 translate something like what's on the left the HTML into a sort of
    parsable tree that。 you can just go through you know like get all the child nodes
    or things like this。 So if。 we go back to the site we have that table and we can
    go right click view source we get that。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用像beautiful soup或pie query这样的工具使其可查询。这些工具的作用是将左侧的HTML转换为一种可解析的树状结构，你可以逐层浏览，比如获取所有子节点等。如果我们返回到网站，我们有那个表格，可以右键点击查看源代码。
- en: completely unreadable what of text。 However if you look there are some patterns
    particularly。 if you were to control F and find the title of some of the movies
    you would see that everything。 in the table has font size equal to two。 So you
    can go and grab everything with font size。 equal to two。 And now we have this
    list of all of those items。 If we select one of them。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 完全无法读取的文本。然而，如果你仔细观察，会发现一些特别的模式。如果你使用控制F查找某些电影的标题，你会看到表格中的所有内容字体大小都等于二。因此，你可以抓取所有字体大小等于二的内容。现在我们有了这些项目的列表。如果我们选择其中一个。
- en: we can see that that is the top grossing movie Beauty and the Beast。 But it
    still isn't quite。 in the format that we want。 So the Beauty and the Beast title
    is in this link tag so we。 go and find the link and then we get text and then
    we have the title in the form that。 we wanted it in。 So this looks pretty easy
    right。 Hopefully I made it look relatively。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，票房最高的电影是《美女与野兽》。但它仍然不是我们想要的格式。所以《美女与野兽》的标题在这个链接标签中，我们去寻找这个链接，然后获取文本，这样我们就得到了我们想要的标题形式。所以这看起来很简单，对吧？希望我让它看起来相对容易。
- en: easy but it's actually often is not that easy。 So we're going to go over some
    common problems。 that people run into。 One is rate limiting。 So if you go and
    you try to scrape a webpage。 often people will the host will try to identify whether
    you are a person who is clicking and。 requesting information or whether you are
    a machine which is requesting information as。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 容易，但实际上往往并不容易。所以我们将讨论一些人们常遇到的常见问题。其中之一是速率限制。如果你去尝试爬取一个网页，通常主机会尝试识别你是一个正在点击并请求信息的人，还是一个正在请求信息的机器。
- en: quickly as you can。 So it's a good idea whenever you are writing a web scraper
    to use a time。 sleep method to put a bit of a delay in there which is approximately
    the delay at least of。 a human clicking through。 So usually one second is enough
    of a delay。 You can also limit access。 to your data based on who you think a person
    is。 I gave this talk once before and someone。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 尽可能快地进行。所以在编写网络爬虫时，使用时间睡眠方法设置一些延迟是个好主意，这个延迟至少接近人类点击的速度。通常一秒钟的延迟就足够了。你还可以根据你认为某个人的身份来限制对数据的访问。我之前做过一次演讲，有人之后告诉我一个精彩的故事。
- en: afterwards told me a fantastic story。 They were working at an open data company
    and they。 had a -- and so most of the data was open but there were some things
    that they kept to themselves。 and they had a competitor who was not very sportsman
    like and scraping their webpage to。 get all of their open data。 So they wanted
    to prevent this and the way they did this is。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 他们在一家开放数据公司工作，大部分数据都是开放的，但有些东西他们保持私密，他们有一个竞争对手并不太讲究，爬取他们的网页以获取所有开放数据。他们想要防止这种情况发生，他们的解决办法是。
- en: they put the first way is they put an API key up so that they could tell who
    was accessing。 the information。 However then their competitors spoofed the Google
    web crawler API key so it。 looked like Google was crawling through their site。
    So the way they ultimately got around。 this is they made a one page like an Angular
    JS app so that it was less easy and then the。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的第一种方法是放置一个 API 密钥，以便他们可以知道是谁在访问这些信息。然而，他们的竞争对手伪装了 Google 网络爬虫的 API 密钥，所以看起来就像是
    Google 在爬取他们的网站。最终，他们解决这个问题的方法是做了一个类似 Angular JS 的单页应用，这样就不那么容易了。
- en: way to get through that is to use browser tester like selenium which can click
    through。 each of the items for you and then you can access the data that way。
    Okay so we've talked。 about how to get the data and now we're going to start exploring
    some of this data。 So there。 are a number of factors that we can explore given
    the data set that we have。 You could。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题的方法是使用浏览器测试工具，比如 Selenium，它可以为你逐个点击每个项目，然后你就可以通过这种方式访问数据。好的，我们已经讨论了如何获取数据，现在我们将开始探索这些数据。有很多因素可以根据我们拥有的数据集进行探索。
- en: imagine that a movie budget might be important。 Maybe a movie that has a really
    big budget。 is going to make even more money。 IMDB rating might be important。
    You would suspect that。 good movies would make more money。 Maybe if a movie comes
    from a power studio like Warner。 Brothers maybe it'll make more。 The amount that
    it makes in the opening weekend can also。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，电影预算可能很重要。也许一部预算非常大的电影会赚更多的钱。IMDB 评分可能也很重要。你可能会怀疑，好的电影会赚更多的钱。也许如果一部电影来自像华纳兄弟这样的强大制片厂，它会赚得更多。开幕周末的收入也可能会影响。
- en: be predictive of how much it'll make in the long term。 You might imagine that
    there's some。 sort of saturation of opening theaters that would be good。 If you
    open a movie in too few。 theaters there will be people who want to see it who
    can't。 And if you open a movie in too。 many theaters you'll have a lot of empty
    seats and you start losing money。 Seasonality there。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 预测它在长期内能赚多少钱。你可能想象到，开放影院的数量会有一定的饱和度。如果你在太少的影院上映一部电影，会有很多想看的人看不到。而如果你在太多的影院上映一部电影，就会有很多空座位，你开始亏钱。这是季节性的问题。
- en: might be some movies that people like to watch it sometimes rather than others
    like Christmas。 movies。 And then the MPa rating this is like if it's G， PG， etc。
    So we're just going to start。 by exploring the data and making some basic plots。
    So this is going to be the gross revenue。 versus the number of opening theaters。
    Looking at that it looks like there actually is sort。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 可能有些电影人们更愿意在特定时间观看，而不是其他时间，比如圣诞电影。然后是MPA评级，比如G，PG等。所以我们将开始探索数据并制作一些基本图表。这将是总收入与开映影院数量之间的关系。从这一点来看，开映周末赚到的钱确实非常重要。
- en: of an inflection point。 That is a good number of theaters for you to use right
    there around， 3500。 So this is interesting。 When we do create this movie we want
    to probably open it in about。 3500 theaters。 So now look at something else。 Gross
    revenue versus quality rating。 And so。 you would expect that if a movie is good
    that might be predictive but it looks like it is。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个转折点。这是你可以使用的一个不错的影院数量，大约3500。因此这很有趣。当我们制作这部电影时，我们可能希望在大约3500家影院上映。那么现在看看其他内容。总收入与质量评级。因此，你会期待如果一部电影不错，那可能是可预测的，但看起来确实如此。
- en: not at all。 We would normally look if it went along that line that would mean
    that there。 was a correlation but it seems there is absolutely no correlation。
    Good movies do not make more。 money。 And so then we can also look at the amount
    of money that a movie makes in opening weekend。 versus how much money it makes
    in general。 And it looks like if a movie makes a lot of。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 根本没有。我们通常会查看如果它沿着那条线发展，那将意味着存在相关性，但似乎完全没有相关性。好电影并不一定会赚更多的钱。因此，我们还可以查看一部电影在首映周末赚的钱与它总体上赚的钱之间的关系。如果一部电影在首映周末赚了很多。
- en: money in that first opening weekend then you can expect it to make a lot of
    money in general。 So this looks like it is relatively predictive。 So then we combined
    all of these into a multivariate。 regression。 And we found that the model seemed
    to fit quite well。 Great。 So we have explored。 the data a little bit。 I have taken
    you through some of the things that we looked at。 A lot。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一部电影在首映周末赚了很多钱，那么你可以期待它总体上会赚很多钱。所以这看起来是相对可预测的。因此，我们将这些数据结合成一个多变量回归模型。我们发现模型似乎拟合得相当好。太棒了。所以我们稍微探讨了一下数据。我带你们了解了一些我们观察到的内容。
- en: of this analysis for the determining if something was going to be a box office
    it was a lot。 of linear regression。 So now we are going to draw some conclusions。
    We found that budget。 helps but it does not help very much。 We found that timing
    is really important。 It seems。 like December is a great release date which sort
    of makes sense。 Like December is often。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这项分析中，用于判断某部电影是否会成为票房的主要方法是线性回归。因此我们将得出一些结论。我们发现预算有帮助，但并不是很大。我们发现时机非常重要。看起来12月是个很好的发行日期，这似乎合理。12月通常。
- en: a time when a lot of people go to the theater to watch movies with their family。
    You are。 much more likely to go with 10 people in December than you are another
    time。 We found， that P。J。 and G-rated movies make more which I think also makes
    sense。 I think a lot of。 people find it awkward to watch other such movies in
    a larger group。 And we found that。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是很多人和家人一起去电影院看电影的时候。你在12月份和其他时间相比，更可能与10个人一起去。我们发现，P。J。和G级电影更赚钱，这也有道理。我认为很多人觉得在大团体中观看其他类型的电影会感到尴尬。我们发现。
- en: the money made in the opening weekend is very important。 Okay。 So we have talked
    about what。 it takes to make money。 So now what does it take to win an Oscar？
    So to answer this question。 we will use the same steps that we used before。 We
    want to define a question you can answer。 acquire good data， explore the data
    and draw conclusions from the data。 So that now we are。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 好的。所以我们已经讨论了赚钱所需的条件。那么，赢得奥斯卡需要什么呢？为了回答这个问题，我们将使用之前的方法。我们想定义一个可以回答的问题，获取良好的数据，探索数据并从中得出结论。因此现在我们。
- en: going to say all of us are actors。 We are maybe a linear in order to caprio
    and we want。 to figure out if we act in this next film are we going to get an
    Oscar？ So the question。 that we really want to know the answer to is will this
    movie win an Oscar？ An easier question。 to answer might be what is the likelihood
    that this movie will win an Oscar given that。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 说我们都是演员。我们可能是线性结构中的一个角色，我们想知道如果我们在下一部电影中表演，我们是否能赢得奥斯卡？所以我们真正想知道的问题是这部电影是否会赢得奥斯卡？一个更容易回答的问题可能是，考虑到这些因素，这部电影赢得奥斯卡的可能性有多大。
- en: it has certain features or what attributes of a movie are correlated with the
    movie winning。 an Oscar？ Okay。 So now we need to acquire the data。 And this turned
    out to be a little bit。 harder than we expected。 IMDB we did this entire project
    as a class project for a data。 science class meaning that we did everything in
    approximately two weeks。 And we found an。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 它具有某些特征，或者说哪些电影属性与电影获奖相关？好的。那么现在我们需要获取数据。这证明比我们预期的要稍微难一些。IMDB 我们将整个项目作为数据科学课的班级项目进行，这意味着我们大约在两周内完成了一切。我们发现了一个。
- en: IMDB has this API that lets you make a call to get certain movie information
    but they also。 sell their information via a professional service so they don't
    want to give out too。 much information through this。 So they make their API extraordinarily
    slow。 Like a good。 five to ten seconds per movie。 So we were able to get some
    interesting information but。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: IMDB 有一个 API，可以让你调用获取某些电影信息，但他们也通过专业服务出售他们的信息，因此他们不想通过这个渠道提供太多信息。所以他们使得他们的 API
    非常缓慢。每部电影大约需要五到十秒。我们能够获取一些有趣的信息，但。
- en: well we originally wanted to look at all of the recent movies between you know
    saying。 the last 10 or 15 years we found that we just that that was going to take
    a month for。 us to get all of that data。 So we had to go back and reevaluate our
    questions。 We couldn't。 answer any of these。 But what we did find is we did find
    a CSV of all of the movies that。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，我们最初想查看所有最近的电影，大约在过去的 10 或 15 年间，但我们发现，这将需要一个月的时间来获取所有这些数据。因此我们不得不回去重新评估我们的问题。我们无法回答这些。但我们确实发现了一个包含所有电影的
    CSV 文件。
- en: had been nominated from 1980 to 1996。 So then we were able to do an analysis
    reevaluating。 the data that we had we were going to said given that a movie has
    been nominated for。 an Oscar since that's all we have we don't have all the other
    movies that existed。 What。 attributes are correlated with winning and can we make
    a classifier to predict Oscar winners。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在 1980 到 1996 年之间被提名的电影。所以我们能够重新评估我们拥有的数据进行分析。我们想说，考虑到一部电影被提名奥斯卡的情况下，因为这就是我们所拥有的，我们没有所有其他存在的电影。什么属性与获奖相关，我们能否制作分类器来预测奥斯卡获奖者。
- en: Okay so we started out by exploring some of the data。 And here we had a sort
    of different。 set of factors that we could explore。 We looked at the movie nomination
    category so。 you could be nominated for best picture you could be nominated for
    best cinematography。 We also had a lot of really great binary variables based
    on the thematic content like。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，所以我们开始探索一些数据。在这里，我们有一个不同的因素集可以探索。我们查看了电影提名类别，因此你可能被提名为最佳影片，你也可能被提名为最佳摄影。我们还根据主题内容有许多非常好的二元变量，比如。
- en: is this a movie about family does it have violence in it is it about war does
    it contain， smoking。 I thought that was a great one。 And then you can imagine
    perhaps dramas are more。 likely to win an Oscar than horror movies so maybe movie
    genre effects things。 It's possible。 that where the movie isn't made might affect
    things or win during the year the movie debuted。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一部关于家庭的电影吗？它是否包含暴力？它是关于战争的吗？它是否包含吸烟？我认为这是个不错的问题。然后你可以想象，或许戏剧类电影比恐怖电影更有可能获奖，所以电影类型可能会影响结果。可能，电影制作地点会影响结果，或者电影首映年份会影响。
- en: So we started to explore some of this data。 First we looked at the countries
    associated。 with winning Oscars and we found that if the movie given that a movie
    was nominated if。 it came from Italy or Spain it actually had a very good chance
    of winning even better。 than the United States。 Then we looked at we wanted to
    look at the effect of timing like。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们开始探索这些数据。首先，我们查看了与获奖奥斯卡相关的国家，我们发现，如果电影被提名，如果它来自意大利或西班牙，它实际上获奖的机会非常好，甚至比美国还好。然后我们想查看时机的影响，比如。
- en: when the movie comes out。 So first we looked at the number of winning movies
    per month。 and if we look at this it looks like December is the clear winner we
    definitely want our。 movie to come out in December。 But then we realized we thought
    more about it and we realized。 that there might be different number it's possible
    everyone is in on the secret and there might。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当电影上映时。所以我们首先查看了每个月获奖电影的数量。如果我们看看这个，12 月显然是赢家，我们绝对希望我们的电影在 12 月上映。但后来我们意识到，我们想得更多，意识到可能会有不同的数字，可能每个人都知道这个秘密，可能会有。
- en: just be a lot of movies coming out in December。 So instead so we normalize this
    based on the。 number of movies that came out and we found that well December is
    not quite as obvious。 you definitely want to release your movie in the last half
    of the year between July and， September。 And I haven't gone through all of our
    analyses here but next up is drawing。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在12月有很多电影上映。因此，我们基于上映电影的数量进行了归一化，发现12月并不那么明显。你确实希望在下半年，即7月至9月之间上映电影。我还没有全部分析完，接下来是绘图。
- en: conclusions from the data and we found that films nominated films made Italy
    and Spain。 have a good chance at winning like we just saw。 Films are more likely
    to win if they're。 released later in the year。 Violent movies really don't do
    well unless it's a war film。 Oscars love war films and then the violence is okay。
    And if a film is nominated for best。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现，被提名的电影来自意大利和西班牙，获奖的机会很好，就像我们刚刚看到的那样。电影在年底发布更容易获奖。暴力电影表现不佳，除非是战争片。奥斯卡喜欢战争片，这样暴力就没问题。如果一部电影被提名为最佳影片。
- en: picture it has a very good chance of winning but if it's nominated for best
    cinematography。 it's probably not going to win。 Okay so what have we done in this
    process？ We defined two。 answerable questions。 We built a web scraper using requests
    in beautiful zoom。 We explored。 our data。 We used it to answer our questions。
    And I wanted to acknowledge the rest of my， team。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一部电影提名最佳摄影，获奖的机会就不大。那么我们在这个过程中做了什么？我们定义了两个可回答的问题。我们使用 requests 和 beautiful
    soup 构建了一个网络抓取器，探索了我们的数据，用它回答问题。我想感谢我的团队其他成员。
- en: I asked them all for photos of themselves and they all sent me photos of birds
    and that。 was when I knew that it was going to be a great project。 And then for
    those of you who。 want to get started scraping on your own some of the resources
    that we used were for building。 a scraper are requests and beautiful super pike
    where for making the text queryable。 For。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我请他们都给我发了自己的照片，他们都发了鸟的照片，那时我知道这将是一个伟大的项目。对于想要自己开始抓取的朋友，我们使用的一些资源包括 requests
    和 beautiful soup，后者用于让文本可查询。
- en: analyzing the data we used Jupiter notebooks site kit barn stats model。 And
    I'd say one。 of the best ways to learn is by looking at example projects。 And
    what we did is we in。 addition to putting together a website that sort of summarizes
    a lot of our results we。 also put all of our Jupiter notebooks online where we
    stepped through exactly how we got。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们分析了使用 Jupiter notebooks 的数据，包括网站工具包、谷歌统计模型。我认为，学习的最佳方式之一是查看示例项目。我们除了整理一个网站，概述我们的结果外，还把所有的
    Jupiter notebooks 在线发布，详细说明我们如何得出结论。
- en: the data what our thought process was in each of the analyses and building the
    classifiers。 And so I encourage all of you to take a look at that。 And if you're
    looking for a starting。 point for your next data science project。 And obviously
    you should feel free to reach。 out to me anytime。 That's my Twitter handle。 And
    thank you very much。 Thank you Deborah。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的分析思路和构建分类器的过程。因此，我鼓励大家去看看。如果你在寻找下一个数据科学项目的起点，随时可以联系我。这是我的推特账号。非常感谢你们。谢谢，Deborah。
- en: If anyone has any questions if they'd like to come up to one of the microphones，
    in the aisles。 Hey so one of the learnings from the first thing that you explored
    was that if you have。 if you ever release in December then your earnings are really
    high。 And then when you。 looked at the Oscars you saw that again you know later
    half of your lease at you and Oscars。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有任何问题，欢迎到过道的麦克风前提问。嘿，最初你们探索的一个学习是，如果在12月上映，收益会非常高。当你查看奥斯卡时，你会发现后半年的上映与奥斯卡的关系。
- en: Do you think there's a correlation between earning a lot of money and winning
    Oscars。 and if you do then does it make sense do you think that model would predict
    better if you。 were using the earnings instead of when it was released。 That is
    something that we thought about and we really wanted to do that analysis but we。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你认为高收入和获奥斯卡之间有相关性吗？如果有，那么你觉得如果用收入而不是上映时间，模型预测效果会更好吗？这是我们考虑过的，我们真的想进行这样的分析，但我们。
- en: ran into issues because like I like I said with the IMDB pie we weren't able
    to get the。 information from all of the years that we wanted in order to run that
    but I agree that。 that is potentially a very interesting point to go through and
    just from what I saw I think。 I would believe that that is plausible。 But so how
    do you explore something like that like in this case you're using I'm using common。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 遇到了一些问题，因为正如我所说的，关于IMDB的信息我们无法获取所有年份的数据来进行分析，但我同意这可能是一个非常有趣的点。从我所看到的，我认为这是合理的。那么，你如何探索这样的事情呢？在这种情况下你使用了什么常见的方法。
- en: sense to say oh you know you're earning more therefore you're probably winning
    the Oscars。 but in a more esoteric situation how would you deal with such correlations
    like how would。 you what would you recommend as best practices。 Having trouble
    answering that question on the spot but I'm happy to talk to you more about。 it
    afterwards。 Hi I was curious about how you knew if a movie contained violence
    or smoking was that data。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 说“哦，你知道，你赚得更多，因此你可能会赢得奥斯卡”是有意义的，但在更深奥的情况下，你如何处理这样的相关性？你会推荐什么最佳实践？当场回答这个问题有点困难，但我很乐意之后再和你谈谈。嗨，我很好奇你是如何知道电影是否包含暴力或吸烟的，这些数据是？
- en: from IMDB as well or is it just sort of。 That was we got this spreadsheet a
    CSV with all information about all of these movies that。 had been nominated from
    the 80s to I think 1996 and it actually gave us all of those variables。 so they
    had a bunch of variables which were like is this about a war one zero so it was。
    really nice because we were able to look at all those binary variables。 Thank
    you。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 是来自IMDB的其他信息吗，还是只是某种情况？我们收到了这个包含所有这些电影信息的CSV电子表格，涵盖了80年代到1996年被提名的电影，实际上给了我们所有这些变量，所以他们有一些像“这是否与战争有关”的二元变量。非常好，因为我们能够查看所有这些二元变量。谢谢。
- en: Are there any more questions？ If there are no more questions。 I have a question
    how can you in the end when you make your prediction proof how good your。 prediction
    is or measure how good your prediction is from so that the new movie comes out
    and。 you wouldn't say about if it might be the most current or not how much percent
    or so。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他问题吗？如果没有其他问题，我有个问题：你在做预测时如何证明你的预测有多好，或者如何衡量你的预测有多好？如果有新电影出来，你不会说它可能是最新的，或者多少百分比？
- en: Yeah that is actually a great question and I had a deleted section of my talk
    that went。 over that in fact。 So usually you would train a classifier on previous
    data and then you can measure the。 accuracy on some test data so you would need
    to look at probably some recent years so perhaps。 you could use the data from
    2016 since that's passed and just remove whether or not one。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，这实际上是一个很好的问题，我在演讲中有一个删除的部分讨论这个问题。所以通常你会在先前的数据上训练一个分类器，然后你可以在一些测试数据上测量准确性，因此你可能需要查看一些最近的年份，也许你可以使用2016年的数据，因为那已经过去了，并且只是移除一些。
- en: in Oscar and then see how accurate your prediction is。 Another really important
    thing to think about when you do that is to look at the baseline。 so in this case
    when we're looking at how accurate a classifier is you want to start。 by saying
    something like rather than just saying we predict 70 we have 70 percent accuracy
    and。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在奥斯卡奖上看看你的预测有多准确。考虑这个问题时，另一个非常重要的事情是查看基准，因此在这种情况下，当我们查看分类器的准确性时，你想要开始时说一些，比如“而不是仅仅说我们预测了70，我们有70%的准确率和”。
- en: that's great you want to look at well what if we predicted them all to be losers。
    It turns out that that's actually pretty close to 70 percent accuracy so you want
    to look。 at if everything is a loser everything is a winner and then you can use
    those as baselines。 and see if your classifiers better than that。 Thank you very
    much。 Thank you。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这很好，你想要看看，如果我们预测它们都是失败者。结果表明，这实际上接近70%的准确率，所以你想要查看如果一切都是失败者，或者一切都是赢家，然后你可以把这些作为基准，看看你的分类器是否比这更好。谢谢你，非常感谢。
- en: Are there any more questions？ Thank you Deborah。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他问题吗？谢谢你，**德博拉**。
- en: '![](img/65d674d59499334b89518a4a5965f4e3_3.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65d674d59499334b89518a4a5965f4e3_3.png)'
- en: Thank you。 [BLANK_AUDIO]。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 谢谢。[空白音频]。
- en: '![](img/65d674d59499334b89518a4a5965f4e3_5.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65d674d59499334b89518a4a5965f4e3_5.png)'
- en: '[BLANK_AUDIO]。'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[空白音频]。'
- en: '![](img/65d674d59499334b89518a4a5965f4e3_7.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65d674d59499334b89518a4a5965f4e3_7.png)'
- en: '![](img/65d674d59499334b89518a4a5965f4e3_8.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65d674d59499334b89518a4a5965f4e3_8.png)'
- en: '[BLANK_AUDIO]， [BLANK_AUDIO]， [BLANK_AUDIO]， [BLANK_AUDIO]。'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[空白音频]，[空白音频]，[空白音频]，[空白音频]。'
- en: '![](img/65d674d59499334b89518a4a5965f4e3_10.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/65d674d59499334b89518a4a5965f4e3_10.png)'
