- en: P86：Tutorial - Jacob Deppen_ Documenting your code from docstrings to automated
    buil - VikingDen7 - BV1f8411Y7cP
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P86：教程 - Jacob Deppen_ 从文档字符串到自动构建记录你的代码 - VikingDen7 - BV1f8411Y7cP
- en: All right， is it time？
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，时间到了？
- en: '![](img/3b9b1da3134251233edb777a8f445166_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b9b1da3134251233edb777a8f445166_1.png)'
- en: '![](img/3b9b1da3134251233edb777a8f445166_2.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b9b1da3134251233edb777a8f445166_2.png)'
- en: It's time。 Welcome everyone。 Thanks for coming。 We are here for the documenting
    your code from Duckstrings to Automated Builds tutorial。 It's like the first day
    of college。 Everybody's in the right room。 Don't need to go down the hall。 Okay。
    Welcome。 If you didn't get the links there， we'll get to them again。 So if you
    haven't got the links yet， don't worry。 I am Jacob Deppin。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 时间到了。欢迎大家。感谢大家的到来。我们在这里参加从 Duckstrings 到自动构建的代码文档教程。这就像大学的第一天。每个人都在正确的房间里。无需走到走廊。好的，欢迎。如果你没有获取到链接，我们会再次提到它们。因此，如果你还没有链接，不用担心。我是
    Jacob Deppin。
- en: You can find me on Twitter if you care to read tweets about my kids and Disney
    things and。 other stuff like that。 Also data science sometimes。 Yeah， we're going
    to talk about documentation。 And thanks to everyone who filled out the survey
    that I sent around。 We got really good participation in that。 It was super helpful
    for me to understand where you're coming from。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你愿意，可以在 Twitter 上找到我，看看我关于孩子和迪士尼等内容的推文，还有数据科学的内容。有时我们会谈论文档。感谢所有填写我发的调查的人。我们在这方面得到了很好的参与，这对我理解你们的背景非常有帮助。
- en: And I've been able to refactor some things a little bit in the talk。 Hopefully
    that will meet folks where they are。 And we can， we have a successful session
    together。 I want this to be open enough that you can ask questions as we go。 I'm
    happy to be interrupted。 If I'm in a flow or something， I'll just tell you to
    hold on for a second。 And that's totally cool。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在演讲中，我能够对某些内容进行一些重构。希望这能满足大家的需求。我们可以一起成功地进行这个会议。我希望这足够开放，以便你们可以在过程中提问。我很乐意被打断。如果我在流畅地讲述，我会告诉你们稍等一下。这完全没问题。
- en: I'm going to now pass out some Post-It notes。 This is a thing that I love to
    do。 Has anybody ever taken a Carpentries workshop， software carpentry， data carpentry？
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我现在要发一些便利贴。这是我喜欢做的事情。有人参加过 Carpentries 研讨会吗？软件木工，数据木工？
- en: We do Post-It notes。 Everybody needs a green Post-It and a pink Post-It。 And
    you're going to keep them kind of next to you。 And these are your way of telling
    me that you're following along or that you are lost or you。 need help or something
    like that。 So green is good。 Red is， I got some problem。 I'm not done yet。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们会用便利贴。每个人需要一张绿色和一张粉色的便利贴。你们可以把它们放在身边。这是你们告诉我你们是否跟得上，或者是否迷路，需要帮助的方式。绿色代表好的，红色代表我有问题。我还没完成。
- en: And in a big group like this， it's easier for me to see Post-It rather than
    really walking。 around and finding out。 So just grab one of each， one off the
    top， one off the bottom。 And please pass them towards the back as we go。 We won't
    need them yet for a while。 but get them circulated now。 So why does documentation
    matter？
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这样的大组中，我更容易看到便利贴，而不是四处走动查找。因此请各拿一张，从顶部拿一张，从底部拿一张。请在过程中将它们传到后面。我们暂时还不需要它们，但现在可以流通。那么，文档为什么重要？
- en: I don't think I need to spend a lot of time on this。 You probably wouldn't be
    here if you didn't think documentation mattered or you didn't。 care about writing
    documentation， building documentation。 So hopefully we're kind of past that。 But
    I want to get us kind of all in the same terms。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我想我不需要花太多时间在这上面。如果你不认为文档很重要，或者不关心写文档、构建文档，你可能就不会在这里。因此，希望我们已经超越了这一点。但我希望我们能在同一基础上交流。
- en: And this is how I think about the values of documentation。 First of all， we
    want to help ourselves。 You're the one who's going to read your code more than
    anybody else。 So you want to help yourself with documentation to revisit your
    own code。 What was I doing there？
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我对文档价值的看法。首先，我们想要帮助自己。你是那个比任何人都更会阅读自己代码的人。因此，你希望通过文档来帮助自己回顾自己的代码。我当时在做什么？
- en: Why did I make the choice that I made？ Next up from that。 your team or your
    collaborators want to be using your code。 And you might not be available to help
    them use your code。 So documentation needs to help them get oriented with your
    code， read your code， maybe for。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我为什么做出这样的选择？接下来，你的团队或合作者希望使用你的代码。而你可能无法帮助他们使用你的代码。因此，文档需要帮助他们熟悉你的代码，阅读你的代码，也许还有其他方面。
- en: code review purposes， you're going to have documentation。 And it's going to
    make the code review smoother when they know why you made certain choices。 or
    the way you did things。 Above that， we want to help strangers use your code。 That's
    the ultimate。 It's getting people that you've never met to use your code。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 出于代码审查的目的，你需要有文档。当他们知道你做出某些选择的原因时，代码审查会更加顺利。除此之外，我们希望帮助陌生人使用你的代码。这是最终目标。让你从未见过的人使用你的代码。
- en: Whether that's people at your company in the future， whether it's an open source
    project。 that you're distributing to the world， you want to build documentation
    that other people， can use。 If it isn't documented， then your code kind of doesn't
    exist。 This is something you've maybe heard said before。 If it's not documented，
    it doesn't exist。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 无论将来是你公司的人，还是你分发给全世界的开源项目，你都想建立其他人可以使用的文档。如果没有文档，你的代码就算不存在。这是你可能听说过的话。如果没有文档，它就不存在。
- en: And that's pretty much true to some extent。 Finally， reaching documentation
    enlightenment。 our documentations will actually do some teaching， for us。 They'll
    do some teaching to other people to strangers about how to use our code， what。
    our code does， why it does it， how are--what are some interesting ways to use
    the code。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在某种程度上，这基本上是真的。最后，达到文档启蒙。我们的文档实际上会为我们进行一些教学。它们会教其他人，甚至陌生人，如何使用我们的代码，我们的代码做了什么，为什么这样做，以及如何以一些有趣的方式使用代码。
- en: And you never have to interact with those people， right？
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 而且你永远不需要与那些人互动，对吧？
- en: You think about all the open source projects where you've never interacted with
    the maintainers。 but you've somehow learned to use the code。 Maybe never taken
    a formal class in some kind of coding technique or whatever。 but you've， somehow
    learned it， right？ Because the documentation was there for you to learn it。 And
    that's what we're kind of--eventually one to try to reach。 But who am I？
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你想想所有那些开源项目，你从未与维护者互动过，但你却以某种方式学会了使用这些代码。也许从未上过正式的编程课，但你以某种方式学会了，对吧？因为文档在那里供你学习。这正是我们最终想要达到的目标。但我是谁呢？
- en: I have a bunch of different things going on for me， but I'm a data scientist。
    I work for Corteva Agar Science， a big tech ag company。 I'm also simultaneously
    finishing up my PhD in archeology at the University of Washington。 where I did
    a lot of data science kind of stuff for my PhD project。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我有很多事情在进行中，但我是一个数据科学家。我在 Corteva Agar Science 工作，这是一家大型农业科技公司。同时，我还在华盛顿大学完成我的考古学博士学位，在我的博士项目中做了很多数据科学方面的工作。
- en: I maintain a couple of open source libraries， one's called PandasVet， which
    is a Linter tool。 for specifically designed to help you out with Pandas。 Prospect。
    which is a simulation tool for archeologists。 But I like to do a lot of stuff
    in the community。 The Puget Sound Python community has been something that's been
    really influential for， me。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我维护几个开源库，其中一个叫做 PandasVet，是一个针对 Pandas 的 Linter 工具。另一个是 Prospect，这是一个为考古学家设计的模拟工具。但我喜欢在社区里做很多事情。普吉特海湾的
    Python 社区对我影响深远。
- en: and I've tried to give back a little bit there。 And the Carpentries。 I mentioned
    that with the sticky notes。 A great organization that teaches groups of folks。
    mostly people in research fields， how， to start coding。 how to start using digital
    tools in various ways to make their work better， more reproducible。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我试图在这方面回馈一些。我提到的 Carpentries，这是一个伟大的组织，教一群人，主要是研究领域的人，如何开始编程，如何以各种方式使用数字工具来使他们的工作更好，更可重复。
- en: and kind of make them better data scientists or better scientists who use， digital
    tools。 But who I am not is any of these people who are people who really think
    deeply about documentation。 and do documentation if not full time job as a big
    part of what they do。 I wanted to put their names up there because a lot of what
    I know about documentation is。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 并且某种程度上使他们成为更优秀的数据科学家或更优秀的使用数字工具的科学家。但我并不是那些真正深入思考文档的人，也不是那些把文档作为主要工作的人。我想把他们的名字列出来，因为我对文档的理解大多来自于他们。
- en: drawn from their work， some of the tools we're going to use today are built
    by them， and they。 are kind of the experts of the experts。 There's links to everybody's
    Twitter profiles and stuff like that in that links page so。 you can find out more
    there。 But if I'm not an expert， why am I leading a tutorial on documentation？
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 基于他们的工作，有些我们今天要使用的工具是由他们构建的，他们是专家中的专家。链接页面上有每个人的Twitter资料链接等信息，你可以在那儿找到更多内容。但是，如果我不是专家，为什么我要领导文档的教程呢？
- en: Like a lot of you I suspect I like good documentation， I value good documentation，
    and I also want。 to get stuff done。 And I don't want to have to become one of
    those people you saw in the previous slide in order。 to be writing good documentation，
    building good documentation。 I want to be able to find a way to make documentation
    a little bit easier for me。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 像我猜测的很多人一样，我喜欢好的文档，我重视好的文档，我也想完成事情。我不想为了写出好的文档、构建好的文档而变成你在上一张幻灯片中看到的那些人。我希望能找到一种让文档对我来说变得更简单的方法。
- en: Turn away to make documentation a little bit quicker。 There's all kinds of incentives
    out there in。 you know， I work in industry。 Documentation is not part of my evaluation。
    It's not how I measured in my job。 So for a lot of us it's a secondary thought。
    but we still want it to be good。 So we want it to be as quick and easy as possible
    to get to that good stage or get to that stage。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 转向让文档更快的方式。有各种激励措施，你知道，我在行业工作。文档不是我评估的一部分。这不是我工作中的衡量标准。因此，对于我们很多人来说，这只是一个次要的想法，但我们仍希望它能做到好。所以，我们希望尽可能快速和简单地达到那个好的阶段或状态。
- en: whatever it might be， stage that works for you。 And so I've gone through this
    process for a while。 I've thought about， you know， what works for me。 I've tried
    a lot of different documentation workflows and tools and things like that。 And
    what I'm going to teach to you today， what we're going to kind of build together
    is a。 workflow that I think works pretty well for those of us who can't or don't
    want to become。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是什么，适合你的阶段。因此，我经历了这个过程一段时间。我思考了，什么对我有效。我尝试过很多不同的文档工作流程和工具。今天我将教给你们的，就是我认为对那些无法或不想成为文档专家的我们非常有效的工作流程。
- en: super deep in the documentation world， but we still want good documentation。
    I want documentation that I can build with and write with tools that I already
    know。 I do a lot with Markdown。 A lot of folks do a lot with Markdown。 Markdown
    is kind of everywhere these days。 So it wouldn't be great if I could write all
    my docs in Markdown。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 深入文档世界，但我们仍希望有好的文档。我希望文档可以用我已经知道的工具来构建和编写。我做了很多Markdown相关的工作。很多人都在用Markdown。现在Markdown几乎无处不在。所以，如果我能用Markdown写所有文档，那不是很好吗？
- en: I also do a lot of stuff in Jupyter Notebooks。 Wouldn't it be great if I could
    write all my docs in Jupyter Notebooks？
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我还在Jupyter Notebooks中做了很多工作。如果我能在Jupyter Notebooks中写所有文档，那不是很好吗？
- en: I write doc strings for my functions and classes and all that good stuff。 I
    want my docs to use those。 I want to just press a button and have it go， find
    all those。 get me some nice pretty documentation。 I don't want to mess around
    with CI/CD too much。 You're going to always have to mess around with CI/CD if
    you've ever tried to set anything up。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我为我的函数和类写文档字符串等。我希望我的文档能够使用这些。我只想按一个按钮，让它去找到所有这些，给我一些漂亮的文档。我不想过多地麻烦CI/CD。如果你曾尝试设置任何东西，你总是要纠结CI/CD。
- en: on any CI/CD system。 There's always 12 commits of you fussing with it and trying
    to get it to work。 A lot of us have been there。 But we can make it as minimally
    fussy as possible， I think。 and that's kind of a goal。 I want it to look nice
    by default。 We don't want to have to spend a lot of time custom tweaking CSS，
    which is something that。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何CI/CD系统上，总会有12次提交，你在纠结和尝试让它工作。我们很多人都经历过。但我认为，我们可以尽量减少这种麻烦，这也是一个目标。我希望它默认看起来不错。我们不想花很多时间自定义CSS，这是我们希望。
- en: I know basically nothing about。 I want it to look nice right out of the box。
    I don't want to have to call in a product designer to get some documentation that's
    going to。 be nice and readable and modern looking。 So what about Sphinx？ Sphinx。
    I know some people based on the survey have tried Sphinx or used Sphinx a little
    bit。 Sphinx is。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我基本上对这个了解不多。我希望它开箱即用，看起来不错。我不想为了得到一些美观、可读性强、现代化的文档而请一个产品设计师。那么，Sphinx怎么样呢？Sphinx。我知道根据调查，有些人尝试过Sphinx或者稍微用过一下Sphinx。Sphinx是。
- en: I call it the human-headed line in the room， get it into Sphinx。 It's a tool
    that has been around for quite a long time and it is the de facto standard， in
    Python。 But if you've played around with it very much， you know that Sphinx is
    sort of a time longer。 ago and it's not the most modern of tools。 It is incredibly
    powerful but that also leads to a lot of complexity。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我把它称为房间里的“人头线”，把它引入 Sphinx。它是一种存在了相当长时间的工具，是 Python 的事实标准。但如果您玩过它，您就会知道 Sphinx
    是一种较老的工具，并不是最现代的工具。它功能强大，但这也导致了许多复杂性。
- en: And it's often complexity that we're never going to touch in the projects that
    we need， to document。 Professional documentation writers use Sphinx and they use
    it to great effects to do really。 amazing things and build really amazing documentation。
    But for most of the projects that folks in the Python community are going to be
    working， on。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这种复杂性往往是我们在需要记录的项目中永远不会触及的。专业文档编写者使用 Sphinx，并以极大的效果做出真正令人惊叹的事情，构建出非常出色的文档。但对于大多数
    Python 社区的项目而言。
- en: we're not going to have that level of documentation。 You might want to document
    a little Python package that you've been working on for your。 team in your company
    and it doesn't need to be totally vetted for a broad audience。 It needs to be
    understandable to the people， you know， 10， 12 people in your team maybe。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会有那种级别的文档。您可能想为公司团队中的某个小 Python 包进行文档编写，而这并不需要经过广泛受众的全面审核。它需要对您团队中的10到12个人易于理解。
- en: So that's the scale that we're thinking about here。 We're not thinking about
    the most complicated projects in the world and that's why I think。 we're going
    to try to touch on Sphinx。 Sphinx is going to be behind everything we do today。
    So I don't want to make it seem like we're getting rid of Sphinx because Sphinx
    is actually。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这是我们在这里考虑的规模。我们并不考虑世界上最复杂的项目，这就是为什么我认为我们会尽量接触 Sphinx。Sphinx 将会是我们今天做的所有事情的基础。因此，我不想让它看起来像是我们在摆脱
    Sphinx，因为 Sphinx 实际上。
- en: there the whole time。 It's the backbone of everything we're going to do。 But
    I'd like to touch Sphinx as little as possible because of that complexity and
    we want。 to try to reduce that complexity for us as much as possible。 So there's
    pros to Sphinx。 It is the backbone of tools that we're going to use like Jupiter
    Book and many other kinds。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Sphinx 在整个过程中始终存在。它是我们要做的所有事情的支柱。但由于其复杂性，我希望尽量少接触 Sphinx，我们希望尽可能减少这种复杂性。因此，Sphinx
    有其优点。它是我们将使用的工具的基础，比如 Jupiter Book 和其他许多类型的工具。
- en: of things that interact with Sphinx。 It's a really large ecosystem and this
    is part of that complexity。 Different kinds of templates。 The extensions is what
    we're going to make use of today。 And if you want to host your docs on Read the
    Docs， you've almost undoubtedly found documentation。 hosted on Read the Docs if
    you've done anything in Python。 It works really nicely with Sphinx。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Sphinx 交互的事物非常多。这是一个庞大的生态系统，而这也是复杂性的一部分。各种不同类型的模板，扩展是我们今天要使用的。如果您想在 Read the
    Docs 上托管文档，如果您在 Python 方面做过任何事情，您几乎无疑已经找到了在 Read the Docs 上托管的文档。它与 Sphinx 协作得非常好。
- en: And so there's a lot of compatibility there that's very natural on both sides
    of that equation。 But Sphinx is complicated。 Complex maybe is better than complicated。
    It relies on things or can rely on things like make files and other technologies
    that。 you may not have a lot of experience with or you may not want to learn as
    part of documenting。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方程的两侧，有许多非常自然的兼容性。但 Sphinx 很复杂。也许复杂性比困难更好。它依赖于某些东西，比如 make 文件和其他技术，而这些您可能没有太多经验，或者您可能不想在文档编写过程中学习。
- en: your Python package。 And it may not be compatible with whatever system you're
    on and you have to find a workaround。 And that's the kind of complexity that starts
    to compound and ends up with people just not。 building the docs。 Not writing the
    docs， not maintaining the docs because it's a pain to update them and。 all of
    those things。 And we don't want to be there。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你的 Python 包可能与您所使用的系统不兼容，您必须寻找解决方法。这种复杂性会逐渐累积，导致人们最终不再构建文档，不再编写文档，也不再维护文档，因为更新文档是一种痛苦，我们不想这样。
- en: We want to keep our docs as kind of light and flexible as possible until you
    become NumPy。 and a massive open source project that needs really complicated
    documentation and really。 a lot of thought in it。 But most of us aren't doing
    that。 And Sphinx in its original form relies on restructured text。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望将文档保持尽可能轻便和灵活，直到你成为 NumPy，并且成为一个需要非常复杂文档和大量思考的大型开源项目。但我们大多数人并不是这样。而 Sphinx
    在其原始形式中依赖于重新结构化文本。
- en: And I don't know if things beyond Sphinx that use restructured text。 I'm sure
    there are some。 But they're not common in the daily workflow of somebody who's
    doing a lot of Python stuff。 Things like Markdown， Jupyter Notebooks with Markdown。
    That's something we're usually a little bit more familiar with。 And text is its
    own world of markup。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道是否有其他使用重新结构化文本的工具。我相信有一些。但它们在进行大量 Python 工作的人日常工作流中并不常见。像 Markdown、带有 Markdown
    的 Jupyter Notebooks。这些是我们通常更熟悉的内容。文本是自己一个标记语言的世界。
- en: And if you don't want to learn it， we can mostly skip it。 We'll do a little
    bit of restructured text here in a little while。 But just enough。 So we're going
    to get just enough to be useful。 In my pre-survey。 I asked folks how many people
    had tried to use Sphinx to build documentation。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不想学习它，我们大多数情况下可以跳过它。稍后我们会做一点重新结构化文本。但只做足够的部分。我们会得到足够的内容来发挥作用。在我的前期调查中，我问了大家有多少人尝试使用
    Sphinx 来构建文档。
- en: and how many people were successful。 And 10 people had tried and four people
    were successful。 And this is a gap that I think it's a leak in the pipeline of
    documentation。 I think a lot of people encounter in the Python ecosystem is you
    try to do the right thing。 You try to build documentation for your project。 But
    Sphinx is a little more complicated than you wanted。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 有多少人成功。10 个人尝试过，4 个人成功了。我认为这是文档管道中的一个缺口。我认为很多人遇到的问题是，你试图做正确的事情。你试图为你的项目构建文档。但
    Sphinx 比你想要的要复杂一些。
- en: And there's other priorities in your work。 So it gets pushed back and pushed
    back。 It's something you're going to do later or something that just never quite
    happens or。 never gets updated after you get it built one time。 And so I think
    this is a common story where you try Sphinx。 Maybe you get something working。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他工作优先事项。所以它被推迟了又推迟。这是你稍后要做的事情，或者是根本没有发生过的事情，或者在你构建一次之后就从未更新过。因此，我认为这是一个常见的故事，你尝试使用
    Sphinx。也许你能让某些东西正常工作。
- en: Maybe you don't。 And then maybe your project has documentation and maybe it
    doesn't。 So we're going to start with a little bit of a motivating case for today。
    This is where I hope that we're going to end up by the end of our session。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 也许你没有。那么，也许你的项目有文档，也许没有。因此，我们将从今天的一个激励案例开始。这是我希望我们在会议结束时能够达到的目标。
- en: '![](img/3b9b1da3134251233edb777a8f445166_4.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b9b1da3134251233edb777a8f445166_4.png)'
- en: We're going to build all this together。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这一切组合在一起。
- en: '![](img/3b9b1da3134251233edb777a8f445166_6.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b9b1da3134251233edb777a8f445166_6.png)'
- en: Oops。 We're going to build a web page。 It's going to be live on the internet
    that looks something like this。 It's not the most glamorous。 There's the ability
    to add images here that I haven't done。 But it's live。 It has， let's check out
    some features。 Well one， it has a search feature built in。 We don't have to do
    anything special to get a search。 We can put a guide here。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀。我们将构建一个网页。它将实时在线，外观类似于这个。虽然这不是最华丽的设计。这里有添加图片的能力，但我还没有做。但它是实时的。让我们看看一些功能。首先，它内置了搜索功能。我们不需要做任何特殊的事情来获取搜索功能。我们可以在这里放置一个指南。
- en: We have a nice table of contents on the right side。 We get some code blocks。
    We get the auto copy little thing。 This is becoming more and more common。 You
    start to see this in documentation and it's so useful。 This little guy to copy
    what's in the box。 There'll be syntax highlighting and other things。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在右侧有一个不错的目录。我们获得了一些代码块。我们有自动复制的小工具。这变得越来越普遍。你开始在文档中看到这一点，它非常有用。这个小家伙可以复制框中的内容。将会有语法高亮和其他内容。
- en: This is a Jupyter notebook that I have added some special little kind of box
    to to make， a note。 You might add a caution or a tip or something like that， a
    call out。 I can put code。 I can mix it with markdown。 This might be something
    familiar if you use Jupyter notebooks a lot。 Mixing all that together into a guide
    or more prose style documentation。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个 Jupyter 笔记本，我添加了一些特殊的小框框来做笔记。你可以添加警告、提示或者其他类似的内容，像是一个提醒。我可以放入代码，也可以与 Markdown
    混合使用。如果你经常使用 Jupyter 笔记本，这可能是你熟悉的。将这些混合在一起形成一个指南或更像散文风格的文档。
- en: We also get some technical documentation， reference documentation that you're
    probably。 familiar with。 Function signatures， arguments， types， all of that formatted
    nicely for us。 We can even click on the source and see the raw code that's behind
    it。 Here we start to have a pretty good foundation for documentation。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还得到了技术文档和参考文档，你可能对此比较熟悉。函数签名、参数、类型，所有这些都为我们格式化得很好。我们甚至可以点击源代码，查看其背后的原始代码。在这里，我们开始有一个相当不错的文档基础。
- en: We have the ability to drop a markdown file in and add a new guide to add a
    new module。 to our package and get it built automatically in the reference documentation
    with nice syntax。 highlighting and all of that stuff。 There's some other extra
    features that we'll see along the way。 A lot of this functionality comes from
    Jupyter book。 That's the tool we're going to try today。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将一个 Markdown 文件放入其中，添加一个新指南，增加一个新模块，自动在参考文档中生成，并且有漂亮的语法高亮和所有这些功能。还有一些额外的功能我们会在过程中看到。这些功能大部分来自
    Jupyter Book。这是我们今天要尝试的工具。
- en: That was our goal。 The sticky notes I mentioned。 Green is all good。 I'm finished
    with something that we're working on or I'm ready to move on。 Pink is。 I have
    a question， some of you in the back， I still might not be able to see。 your pink
    sticky notes。 If you do have a question， please go ahead and raise your hand。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们的目标。我提到的便利贴。绿色表示一切良好。我已经完成了正在进行的工作，或者我准备继续了。粉色表示我有问题，坐在后面的你们，有些可能我仍然看不见。你的粉色便利贴。如果你有问题，请举手。
- en: That's totally cool。 But the sticky notes are good when everybody's working
    on something and I can take a look。 around or help I'm lost。 That can be good
    as well。 If we haven't gotten the code。 we need to fork the repository from GitHub
    and then clone， that to our local machine。 Is there anyone who has not been able
    to do that yet？ I have time built in。 We can wait。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这真的很酷。但便利贴在每个人都在工作时很好，我可以四处看看或者帮助那些迷路的人。这也很不错。如果我们还没有获得代码，我们需要从 GitHub 分叉这个仓库，然后克隆到我们的本地机器。有谁还没有做到这一点吗？我留出了时间，我们可以等一下。
- en: If you have done that， put a green sticky note up。 Yes， thank you。 You can just
    put it on the top of your machine maybe。 That can help me know where we're at。
    If you haven't， keep your green sticky note down or if you have a question about
    that。 you can put the pink sticky note up or flag me down。 ( songs then stop )，
    ( silence )， ( silence )。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你完成了，就请举起一个绿色便利贴。是的，谢谢。你可以把它放在你的机器顶部。这可以帮助我知道我们目前的进展。如果你没有完成，就保持绿色便利贴不动，或者如果你对此有问题，可以举起粉色便利贴或叫我。（歌曲暂停），（安静），（安静）。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: （安静），（安静），（安静），（安静），（安静），（安静），（安静）。 （安静），（安静），（安静），（安静），（安静），（安静），（安静）。 （安静），（安静），（安静），（安静），（安静），（安静），（安静）。
    （安静），（安静），（安静），（安静），（安静），（安静），（安静）。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: （安静），（安静），（安静），（安静），（安静），（安静），（安静）。 （安静），（安静），（安静），（安静），（安静），（安静），（安静）。 （安静），（安静），（安静），（安静），（安静），（安静），（安静）。
    （安静），（安静），（安静），（安静），（安静），（安静），（安静）。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )。 ( silence )， ( silence )， ( silence )，
    ( silence )， ( silence )， ( silence )， ( silence )。
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默
    )， ( 沉默 )。 ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )。
- en: ( silence )， ( silence )， ( silence )， ( silence )， ( silence )， I'm going to
    leave that up。 I'm going to open my table of contents so we can keep moving。 And
    this time I'm going to add a new section。 I'm going to call it API reference。
    And my chapters。 This is a really killer feature。 I can glob for files here。 So
    I can glob for API star。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )， ( 沉默 )，我会把这个保留。我要打开我的目录，以便我们继续。此次我要添加一个新部分。我要称之为API参考。以及我的章节。这是一个非常棒的功能。我可以在这里使用glob来查找文件。所以我可以为API
    star使用glob。
- en: So now we'll grab anything in that API folder that we have。 So I never have
    to change my table of contents when I add a new module to my code。 I just need
    to add that RST file to the API folder and Jupyter book will snatch it up when
    it builds。 So glob if you're not familiar is kind of a Linux thing to search。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们会抓取我们在那个API文件夹中的任何东西。所以我在添加新模块时无需更改我的目录。只需要将那个RST文件添加到API文件夹，Jupyter书在构建时会自动抓取它。所以，如果你不熟悉，glob是一种在Linux中搜索的方式。
- en: You find -- I don't know how to describe it。 Find files with patterns。 Find
    things with patterns。 Yeah， in this case we're using a wild card。 But there's
    all kinds of complicated glob syntax you can use。 Okay。 How are we doing？ Is everybody
    have that？ Show me a pink sticky if you're still working on something。 All right。
    We did that。 Let's build it again。 So if you were able to build it before。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你发现——我不知道怎么描述。寻找具有模式的文件。找到带有模式的东西。在这种情况下，我们使用的是通配符。但你可以使用各种复杂的glob语法。好吧，我们进展如何？每个人都完成了吗？如果你还在忙，就给我一个粉色的便签。好了，我们做到了。让我们再构建一次。如果你之前能够构建。
- en: hopefully you will be able to build it again。 Make sure everything's saved。
    But we build our docs。 I fixed my errors。 So I don't get any errors anymore。 I'm
    going to highlight that code pass。 Now we'll see a couple of things happen。 We
    have our table of contents being auto generated。 We added that little thing on
    the home page。 So it's being updated。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你能够再次构建它。确保一切都已保存。但我们构建了文档。我修复了我的错误，所以我现在没有任何错误了。我将突出显示那段代码。现在我们会看到几件事情发生。我们的目录正在自动生成。我们在首页添加了那个小东西，所以它正在更新。
- en: So here our API reference has this section points。 And we have our nicely built
    documentation from our doc string。 So we're going to have a couple of different
    types of stuff。 So we're going to have a little bit of level two。 So you're welcome
    to keep moving on that。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们的 API 参考有这一部分要点。我们从文档字符串生成了漂亮的文档。所以我们将有几种不同类型的内容。我们将有一点二级内容，所以欢迎继续推进。
- en: But otherwise， let's take a break。 Let's take a 10-minute break。 If we can be
    back here at 4。15。 So we're going to have a little bit of a break。 So we're going
    to have a little bit of a break。 So we're going to have a little bit of a break。
    Now we're on to level three。 If you want to fast forward your code and everything。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，先休息一下。我们休息 10 分钟。如果我们能在 4 点 15 分回到这里。我们将稍微休息一下。现在我们进入三级。如果你想快进你的代码和一切。
- en: you can check out your -- check out to level two。 A level two branch。 Close
    all these。 I'm sure there's some kind of conflict or something like that。 I'm
    just going to ignore them。 All right。 Now I have fast forwarded to my level two。
    And I have some API docs for all of the different modules here。 You can do that
    if you like。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以查看你的 -- 查看二级分支。关闭所有这些。我相信会有一些冲突之类的问题。我只是忽略它们。好了，现在我已经快进到了我的二级分支。我这里有不同模块的
    API 文档。如果你愿意，你可以这样做。
- en: But in any case， we're going to work with GitHub Actions and GitHub pages。 These
    are not the only way to host your book。 Your book， when it builds， it spits out
    HTML。 So anything that can render HTML and host HTML is somewhere you can put
    your book。 You can configure an AWS S3 bucket to be a website。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，我们将与 GitHub Actions 和 GitHub 页面合作。这并不是托管你书籍的唯一方式。当你的书籍构建时，它会生成 HTML。因此，任何可以渲染和托管
    HTML 的地方都是你可以放置书籍的地方。你可以配置一个 AWS S3 存储桶作为网站。
- en: And you can send your built docs up there to AWS S3。 And you get a super long，
    complicated URL。 But that's great。 Especially for internal projects。 If you want
    to put something in there。 you can manage security through your AWS stuff。 When
    it comes to private projects and GitHub pages。 there are now， I think， a couple
    years ago， GitHub allowed pages to be available for private repos。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将构建好的文档上传到 AWS S3。然后你会得到一个超级长且复杂的 URL。这很好，特别是对于内部项目。如果你想将某些内容放进去，你可以通过你的
    AWS 相关设置管理安全性。至于私有项目和 GitHub 页面，我想大约在几年前，GitHub 允许私有仓库的页面可用。
- en: Maybe only on enterprise GitHub。 So if you're -- anybody work for GitHub。 That's
    something to confirm。 But if you are on an enterprise GitHub。 you can create a
    private page that works just like the rest of GitHub pages。 And so this workflow
    would work for that。 What we're going to do today is make it public to the world。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 也许只适用于企业版 GitHub。如果你在 GitHub 工作，这需要确认。但如果你在企业版 GitHub 上，你可以创建一个与其他 GitHub 页面一样工作的私有页面。因此，这个工作流程适用于这一点。我们今天要做的是让它对全世界公开。
- en: But there are ways to make it private。 And you can ultimately send these built
    docs wherever you want。 So， GitHub Actions。 GitHub Actions are a CI/CD kind of
    tool to automate things。 You can do a lot with GitHub Actions。 I saw in the pre-survey
    quite a few folks have worked with GitHub Actions at some level。 You might run
    your tests。 You might run linting。 You might do your builds， your deployments
    of code。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 但有方法可以让它变为私有。最终你可以将这些构建好的文档发送到你想要的任何地方。所以，GitHub Actions。GitHub Actions 是一种
    CI/CD 工具，用于自动化操作。你可以用 GitHub Actions 做很多事情。我在预调查中看到有不少人曾在某种程度上使用过 GitHub Actions。你可以运行测试，可能会运行代码检查，进行构建和部署。
- en: all from GitHub Actions。 If you use GitLab， GitLab CI/CDs， a very similar kind
    of process， Jenkins。 I think， Travis。 There's a whole bunch of tools like that
    out there that do similar kinds of things。 But GitHub Actions is nice because
    if you use GitHub， it's already there for you。 And it lives right where your code
    lives and that makes a difference。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都是来自 GitHub Actions。如果你使用 GitLab，GitLab CI/CD，流程非常相似，Jenkins。我想，Travis。外面有很多类似的工具，可以做相似的事情。但
    GitHub Actions 很好，因为如果你使用 GitHub，它已经为你准备好了。它就与代码一起存在，这点很重要。
- en: So we're going to specify things in YAML files， just like we've been doing with
    our configuration before。 We're going to write YAML files。 And these days， Actions
    have been around for， what。 four years maybe？ Five years。 And everything that
    you want to do is probably been done before。 You're not the first person to try
    to do it。 And that's really awesome。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们将在 YAML 文件中指定内容，就像之前的配置一样。我们将编写 YAML 文件。如今，Actions 已经存在了，大约有四年？五年。你想做的事情可能之前就已经有人做过。你不是第一个尝试这样做的人。这真的很棒。
- en: So there's a lot of pre-built Actions out there that you can just use off the
    shelf without having to write the details yourself。 There's a whole world of GitHub
    Actions that we're not going to get into。 We're going to do a pretty simple flow
    to build our docs and put it in GitHub pages。 You can do things like protect your
    branches until certain things pass through your GitHub Actions as well。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 所以有很多预构建的 Actions，你可以直接使用，而无需自己编写详细信息。GitHub Actions 有一个完整的世界，我们不会深入研究。我们将做一个相对简单的流程来构建我们的文档并放到
    GitHub Pages。你还可以做一些事情，比如在某些事情通过 GitHub Actions 之前保护你的分支。
- en: So what I like to do is you can't merge your branch until the docs have built。
    Or immediately upon merging your branch， you build the docs and deploy them。 So
    let's add some Actions。 We're just going to add one。 And it's this long thing
    on the right。 But there's a template for that。 We're going to create this directory
    structure first。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢这样做：在文档构建之前，你无法合并你的分支。或者在合并你的分支后立即构建文档并部署它们。所以让我们添加一些 Actions。我们将只添加一个。这是右侧的长代码。但有一个模板可以使用。我们将首先创建这个目录结构。
- en: This is where GitHub is going to look for your Actions。 So we're going to create
    a top level of our repository。 We're going to create a 。github。 You need the 。github。
    Under that， I'm going to create a workflows folder。 Don't need a 。there。 And then
    inside the workflows， you're going to create a 。yaml file。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 GitHub 将查找你的 Actions 的地方。所以我们将创建我们仓库的顶层。我们将创建一个 .github。你需要这个 .github。在下面，我将创建一个
    workflows 文件夹。里面不需要有点。然后在 workflows 内，你将创建一个 .yaml 文件。
- en: You can name it whatever you want。 But I'm going to call it deploy。yaml。 And
    the book is well documented and has a template that we can use for deploying a
    book。 I'm going to go to that link。 It should be in the link list。 And copy the
    template and put it here in my 。yaml file。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以随意命名。但我将称之为 deploy.yaml。书中有良好的文档，并且有一个可以用来部署书籍的模板。我将访问那个链接。它应该在链接列表中。然后复制模板并放在我的.yaml
    文件中。
- en: Let's look through some things that it's doing。 We give it a name for this action。
    Then we have triggers。 So we want to trigger it when something happens on -- in
    this case on push。 When we push to the master or main branch， you probably will
    have a main branch。 not a master branch。 You might want to change this to main。
    On push to main。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看它正在做的一些事情。我们给这个操作一个名称。然后我们有触发器。所以我们想在某些事情发生时触发它——在这种情况下是推送。当我们推送到主分支时，你可能会有一个主分支，而不是主分支。你可能想将其更改为主分支。在推送到主分支时。
- en: that's when this action is going to run。 So that's the trigger。 For other GitHub
    Actions that are not related to this docs。 you might want to trigger it on something
    else。 But push to main is where we're going to work。 Let's go down here。 We're
    going to do -- this is a very generic prebuilt action for us that we're just going
    to make use of。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这时这个操作将会运行。所以这就是触发器。对于其他与此文档无关的 GitHub Actions，你可能想在其他事件上触发它。但是推送到主分支是我们要工作的地方。让我们往下看。我们要做——这是一个非常通用的预构建操作，我们将加以利用。
- en: And let's check out an Ubuntu operating system。 We're going to install Python
    3。8。 Again。 this is a pre canned action for us。 We don't have to write out all
    the steps to get that there。 We just say use this action and then give it some
    configuration。 We're going to install our dependencies。 And then we're going to
    change our build directory。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查一下Ubuntu操作系统。我们将安装Python 3.8。同样，这对我们来说是一个预先包装好的操作。我们不需要写出所有步骤来实现。我们只需说使用这个操作，然后给出一些配置。我们将安装我们的依赖项。然后我们将更改构建目录。
- en: We're not going to build from the top level。 We're going to use the command
    that we used before。 which was build docs。 That's important on line 35。 Change
    that。 The next thing is the real magic for taking that built documentation and
    putting it onto GitHub pages。 And this is somebody who has already built this
    action and written it out。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会从顶层构建。我们将使用之前用过的命令，也就是`build docs`。这在第35行是重要的。改一下。接下来是将构建的文档放到GitHub页面上的真正魔法。这是已经有人构建并写好的这个操作。
- en: What we do is it's going to look for a GitHub pages branch。 It's going to take
    the built documentation， send it to the GitHub pages branch。 That's a branch where
    GitHub pages is going to look to build itself， to build the site。 Here we need
    to specify docs again in the last line， line 42。
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所做的就是查找GitHub页面分支。它将获取构建的文档，并发送到GitHub页面分支。那是GitHub页面用来构建自己、构建网站的分支。在这里，我们需要在最后一行，即第42行再次指定docs。
- en: There's one last step that we need to add to our workflow here。 We need to install
    randomly so that we can run things in our Jupyter Notebooks so that the Jupyter
    Notebook can build properly。 It will need to know where randomly is。 It hasn't
    been installed in this Ubuntu environment when it's running in GitHub Actions。
    We're going to mimic the install dependencies command here。 We're going to call
    it install randomly。
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在这里为工作流程添加最后一步。我们需要安装`randomly`，以便能够在我们的Jupyter Notebook中运行，以便Jupyter Notebook能够正确构建。它需要知道`randomly`在哪里。在这个运行于GitHub
    Actions的Ubuntu环境中，它尚未安装。我们将在这里模拟安装依赖项的命令。我们将称之为安装`randomly`。
- en: And then we're going to run colon。 The vertical bar is just a way of saying
    continue on the next line。 It's a little bit nicer formatting。 And then I'm going
    to pip install。 Period。 So we're going to install from the current directory at
    this point which is the top level of the repository。 You could do the dash e install
    if you wanted to but it's not really helpful because our module is not going to
    change。
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将运行冒号。竖线只是表示继续到下一行的一种方式。这是一种更好的格式。接着我要进行`pip install`。句号。所以在这个时刻，我们将从当前目录安装，即代码库的顶层。如果你想，可以使用`dash
    e`安装，但这并没有什么帮助，因为我们的模块不会改变。
- en: the workflow so the editable mode doesn't help us。 Show me green stick keys
    if you're there。 Make sure to save your deploy file。 Show me pink stick keys if
    it's something you still need a little bit of help with。 [silence]， Any other
    pink stick keys out there？ Alright。 Let's see what we can do。 We're going to commit
    this and push it back to the GitHub repository。 [silence]。
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 工作流程中，编辑模式对我们没有帮助。如果你在这里，请给我绿色的棒棒糖。如果需要保存你的部署文件，请给我粉色的棒棒糖。如果你仍然需要一些帮助，任何其他的粉色棒棒糖？好吧。让我们看看我们能做什么。我们将提交并推送回GitHub代码库。
- en: After you do that push you should go to your repository。 [silence]。 And yours
    should look something like this。 You should have your GitHub workflows here。 Your
    yaml file。 Everybody there？ Show me any pink stick keys。 Alright。 Now we need
    to enable GitHub pages。 [silence]， In this case you can merge it into main。 That's
    fine。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在你进行推送后，你应该去你的代码库。你的代码库应该看起来像这样。你应该在这里有你的GitHub工作流程。你的yaml文件。大家在吗？给我任何粉色的棒棒糖。好吧。现在我们需要启用GitHub页面。在这种情况下，你可以将其合并到main分支。这没问题。
- en: You might have a different little bit more cautious workflow on your own repositories
    but in this case we're going to just merge it to main。 So once you're in your
    repository we can go to settings on top right。 And on the left side pages。 And
    we're going to tell it to build from the GH pages branch。 You didn't create that
    branch but the GitHub action will create it for you。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能在自己的代码库上有一个更谨慎的工作流程，但在这种情况下，我们将直接合并到main分支。所以一旦你进入你的代码库，我们可以在右上角进入设置。在左侧选择页面。然后我们将告诉它从GH页面分支构建。你没有创建那个分支，但GitHub
    Action会为你创建它。
- en: So that is a nice thing because then the built version of your docs。 all the
    HTML files and all of that doesn't end up in your main code branch。 And polluting
    that branch a little bit it stays in its own isolated built branch。 And we can
    specify root of that branch as the GitHub pages。 And if you say that again。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一件好事，因为你构建的文档版本，所有的 HTML 文件等不会最终出现在你的主代码分支中，避免了对该分支的污染，而是保留在它自己隔离的构建分支中。我们可以将该分支的根指定为
    GitHub 页面。如果你再说一遍。
- en: Change it to docs。 Let's see how others did。 So if you save that it will this
    should turn something。 This green box should change color or it will say your
    site is ready to be published or something like that maybe。 Thanks to Geex。 Thank
    you。 Thank you。 Thank you。 Thank you。 I want everyone to go to the actions tab。
    And see what happened。 See if it failed。
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 改为 docs。让我们看看其他人是如何做的。如果你保存，应该会发生一些变化。这个绿色框应该改变颜色，或者会显示你的网站已准备好发布之类的信息。感谢 Geex。谢谢。谢谢。谢谢。谢谢。我希望每个人都去操作选项卡，看看发生了什么，看看是否失败了。
- en: Raise your hand if you got a successful build。 You should have a green link
    here。 A green box around the link and your link should open to your build documentation
    on the web。 Pretty nifty。 We'll see what we can do。 Thank you。 Thank you。 Thank
    you。 Thank you。 Thank you。 Thank you。 Thank you。 Thank you。 Thank you。 Thank you。
    Thank you。 Thank you。 Thank you。 Thank you。
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你成功构建了，请举手。你应该在这里看到一个绿色的链接，链接周围有一个绿色框，并且你的链接应该打开你在网上构建的文档。非常不错。我们将看看我们能做些什么。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。
- en: Thank you。 Thank you。 Thank you。 Thank you。 Thank you。 Thank you。 Thank you。
    Thank you。 Thank you。 Thank you。 Thank you。 Thank you。 Thank you。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。谢谢。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。
- en: the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。
- en: the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。
- en: the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    the next slide。 the next slide。 the next slide。 the next slide。 the next slide。
    Any other questions for this launch？
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。下一张幻灯片。
- en: \>\> We'll come back to it when it's done doing this thing。 There's a library
    called -- I'm going to run through these tools。 These are not tools that I use
    a lot， but they're tools that are pretty nifty。 If you want to level up your documentation
    setup and your work flows， especially with teams。
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: \>\> 完成后我们再回来讨论这个。这里有一个库——我将快速浏览这些工具。这些工具不是我常用的，但它们相当不错。如果你想提升你的文档设置和工作流程，尤其是与团队合作时。
- en: how many people have used the coverage tool for testing their Python code？
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 有多少人使用过覆盖工具来测试他们的 Python 代码？
- en: What it does is it goes through your code and goes through your tests and says，
    okay， well。 this part of your code has been touched by a test， and so， you know，
    ultimately。 you get a report on， how much of your code is covered by tests。 In
    perfect measure， of course。 but it's a nice thing to have。 This is doing the same
    thing for docstrings。
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 它的作用是检查你的代码和测试，看看好吧，这部分代码已经被一个测试触及，因此，你知道，最终。你会得到一份报告，关于你的代码有多少被测试覆盖。当然这是一个完美的度量，但这是一个不错的事情。这也为文档字符串做了同样的事情。
- en: So what we're looking at here is a report that I ran on the randomly module
    or randomly。 package that tells us how much coverage we got。 So you notice we
    missed one something in every single one of our modules。 That's because according
    to pep 257， you should have a docstring at the top of the module that。 describes
    the module。 We didn't do that。 It's -- I don't know。
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里看到的是我在随机模块或随机包上运行的报告，告诉我们覆盖率有多少。所以你会注意到我们在每一个模块中都遗漏了一些东西。这是因为根据 pep 257，你应该在模块顶部有一个描述模块的文档字符串。我们没有做到。这是——我不知道。
- en: I don't know how common of a practice it is or not。 I tend not to use it。 but
    now that I know that it's a pep 257 thing， maybe I will start using， it a little
    bit more。 but that's why we got misses here。 This one's called interrogate。 The
    next one is pi doc style。 which is similar。 How many people have used flake 8，
    the linter flake 8 to run on their code？
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道这是一种多么常见的做法。我倾向于不使用它，但现在我知道这是 pep 257 的要求，也许我会开始多用一点。但这就是我们在这里遗漏的原因。这个被称为
    interrogate。下一个是 pi doc 风格，相似的。多少人使用 flake 8，这个 linter 来检查他们的代码？
- en: What this does is it will look through your docstrings and it will check for
    some of those。 best practices things。 We'll see what it flagged here。 So it flagged
    missing docstring in a public module。 That means I didn't have that line at the
    top。 so that one's going to appear every time。 The first line of your docstring
    should end with a period。
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具会检查你的文档字符串，并检查一些最佳实践的内容。我们来看看它标记了什么。所以它标记了公共模块缺少文档字符串。这意味着我在顶部没有那一行。因此每次都会出现这个。你的文档字符串的第一行应该以句号结束。
- en: That's part of pep 257 recommendations。 I failed at that a couple of times。
    What else？
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 pep 257 的建议之一。我在这方面失败过几次。还有什么呢？
- en: I'm missing one here。 Maybe that's it。 Oh， after your docstring。 you're not
    supposed to have blank lines。 I didn't know that that was an official recommendation。
    I'm going to start enforcing that good patterns of documentation， adding a tool
    like this to。 your testing or linting things you might be doing already in your
    code。
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里漏掉了一点。也许就是这个。哦，在你的文档字符串之后，你不应该有空行。我不知道这是一个正式的建议。我将开始执行这种良好的文档模式，添加像这样的工具来进行测试或代码中可能已经在做的
    linting。
- en: These could be part of GitHub actions。 Any of these could be incorporated there。
    You could fail。 You could block merging a PR until all of these pass if you really
    want to。 It's up to you how strict you want to be with it。 It at least gives you
    some insight。 Especially as your project grows， you start getting contributions
    from multiple people。
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这些可以是 GitHub actions 的一部分。任何一个都可以被纳入其中。你可能会失败。如果你真的想的话，可以阻止合并 PR，直到所有这些都通过。严格程度由你决定。这至少给你一些洞察。特别是当你的项目成长时，你会开始获得来自多人的贡献。
- en: These tools might give you some insight as to where you're lacking in docstrings
    or where。 docstring coverage is weak or needs to be improved。 I mentioned X-Doc
    test before。 There's an older tool called DocTest。 I think X-Doc test is really
    nice。 It integrates with PyTest。 Here's how。 Let's say we have a Fibonacci function。
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具可能会给你一些关于文档字符串不足的地方或文档字符串覆盖薄弱或需要改进的地方的洞察。我之前提到过 X-Doc test。还有一个较老的工具叫 DocTest。我觉得
    X-Doc test 非常不错。它与 PyTest 集成。比如说，我们有一个斐波那契函数。
- en: We create a Fibonacci series up to whatever number we give it。 As part of our
    docstring。 we can add an example。 We didn't do that in any of our docstrings。
    That's how you can do it。 You can add an example。 You have the three arrows there。
    The three chevrons。 Then you have something you would execute in Python。 In this
    case。
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建一个斐波那契序列，直到我们给定的任意数字。作为我们的文档字符串的一部分，我们可以添加一个示例。我们在任何文档字符串中都没有做到这一点。这就是你可以做到的方式。你可以添加一个示例。你有三个箭头在那里。三个尖头符号。然后你会有在
    Python 中执行的内容。在这种情况下。
- en: we're calling the function and giving it a parameter。 On the next line after
    that。 we have the expected output。 You can think of this as a software test。 A
    unit test where we say。 given this， I expect this。 What X-Doc test can do is turn
    that into executable Python。 not just a string as part of the docstring。 It will
    turn that into executable Python and run it。
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在调用函数并给它一个参数。在下一行，我们有预期的输出。你可以把这看作软件测试。一个单元测试，我们说，给定这个，我期望这个。X-Doc 测试能做到的就是把它转化为可执行的
    Python，而不仅仅是作为文档字符串的一部分的字符串。它将把它转化为可执行的 Python 并运行它。
- en: If it doesn't get this output， it will fail。 That's pretty fun。 It's pretty
    cool。 That's one way to do some regression testing on your docs。 If you try to
    keep your examples up to date， that's an interesting feature。 We already talked
    about editor support for VS code， PyCharm， how you can use these tools。
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它没有得到这个输出，它就会失败。这相当有趣。这相当酷。这是对你的文档进行一些回归测试的一种方式。如果你能保持示例的更新，这是一个有趣的特性。我们已经谈到了
    VS Code、PyCharm 的编辑器支持，以及你如何使用这些工具。
- en: to generate your docs for you or to at least generate the stubs of your documentation
    for you。 and make sure things are as easy and smooth as possible when you're trying
    to write docstrings。
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 以便为你生成文档，或者至少为你的文档生成一些框架。并确保在你尝试编写文档字符串时，事情尽可能简单顺利。
- en: '![](img/3b9b1da3134251233edb777a8f445166_8.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b9b1da3134251233edb777a8f445166_8.png)'
- en: '![](img/3b9b1da3134251233edb777a8f445166_9.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b9b1da3134251233edb777a8f445166_9.png)'
- en: With that， I am done with everything that I have prepared。 I'm happy to take
    questions， thoughts。 Do you want some feedback on anything？ Anything like that？
    I'm here。 Thank you。 I should add。 I would really love if you go out and build
    some documentation to send me a message。 or share the GitHub repository with me。
    I would love to see it。
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我就完成了我准备的一切。我很乐意接受任何问题或想法。你想要对什么给予反馈吗？类似这样的事情？我在这里。谢谢。我还应该补充一下。如果你能出去构建一些文档，并给我发个消息，或者分享
    GitHub 仓库给我，我会非常高兴。我很想看到它。
- en: I would love to see what's happening and see all the cool things that you can
    build。 Thanks。
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我想看看发生了什么，并看到你们可以构建的所有有趣的东西。谢谢。
- en: '![](img/3b9b1da3134251233edb777a8f445166_11.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b9b1da3134251233edb777a8f445166_11.png)'
- en: '[SIDE CONVERSATION]。'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[侧面对话]。'
