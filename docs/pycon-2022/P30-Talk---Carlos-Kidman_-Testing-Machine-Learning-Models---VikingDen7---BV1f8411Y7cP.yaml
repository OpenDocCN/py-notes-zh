- en: P30：Talk - Carlos Kidman_ Testing Machine Learning Models - VikingDen7 - BV1f8411Y7cP
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P30：演讲 - Carlos Kidman_ 测试机器学习模型 - VikingDen7 - BV1f8411Y7cP
- en: Hello everyone。 Today we have the pleasure of having Mr。 Kidman present a paper
    on testing。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 大家好。今天我们很高兴邀请到 Kidman 先生来做关于测试的论文演讲。
- en: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_1.png)'
- en: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_2.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_2.png)'
- en: machine learning models。 Echo， echo， echo。 Yes， yes， yes。 Fantastic。 Alright，
    well。 thank you everyone for coming。 Testing and quality of ML systems。 That's
    what I'm going to be talking about。 Just like， they said， my name is Carlos Kidman。
    A few things about me really fast。 I'm the head， of engineering at an AI company
    right now。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型。回声，回声，回声。是的，是的，是的。太好了。那么，感谢大家的到来。机器学习系统的测试和质量。这就是我将要讲的内容。就像他们说的，我的名字是
    Carlos Kidman。关于我，有几点很快介绍一下。我目前是一个 AI 公司的工程主管。
- en: Before this， I was an engineering manager， at Adobe around an organization called
    Automation and Productivity Engineering。 We use machine， learning there as well。
    I do lots of stuff with open source。 including my own projects。 The one I'm most
    known for is Pylenium。 which is just a simple wrap around Selenium and， PyTest。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之前，我曾是 Adobe 的一名工程经理，负责一个名为自动化与生产力工程的组织。我们在那里也使用机器学习。我做了很多开源项目，包括我自己的项目。我最著名的项目是
    Pylenium，它只是一个简单的 Selenium 和 PyTest 的封装。
- en: I do lots of keynote speaking all over the world。 This is my first PyCon。 Yes。
    I'm so excited to get PyCon。 I also have a stream on Twitch once or twice a week，
    depending。 on how I feel， and then I have a YouTube channel。 My most exciting
    one I feel is that。 I'm the founder of QAP or QA at the point， which is the software
    testing and quality。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我在全球各地进行很多主题演讲。这是我的第一次 PyCon。没错。我对参加 PyCon 感到非常兴奋。我每周在 Twitch 上有一到两次直播，具体取决于我的感觉，然后我还有一个
    YouTube 频道。我觉得我最兴奋的事情是，我是 QAP 或者说 QA at the point 的创始人，这是软件测试和质量。
- en: community here in Utah。 Yes， Utah based for anyone else。 If you are a tester
    and you're， in Utah。 you should be part of this community because it's pretty
    amazing。 Going right， into it。 I feel like when it comes to software testing and
    quality and traditional software， development。 it's a pretty common topic。 You
    have software testers， you have people that。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是犹他州的社区。没错，基于犹他州，对其他人也是如此。如果你是一名测试人员，并且你在犹他州，你应该成为这个社区的一部分，因为它真的很棒。直接进入这个话题。我觉得在软件测试和质量以及传统软件开发方面，这是一个相当普遍的话题。你有软件测试人员，还有一些人。
- en: are in the testing space like SREs， stuff like that。 When it comes to machine
    learning and， AI。 it's as if it's a new field。 It feels like there's not a whole
    lot that happens in， that space。 This is what got me really interested in。 How
    do we monitor？ How do we measure？ How。 do we test and measure the quality of these
    ML systems that we're building？ Now that I've。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 处于测试领域，比如 SREs 之类的。当涉及到机器学习和 AI 时，这就像是一个新的领域。感觉在这个领域发生的事情并不多。这让我对如何监测产生了浓厚的兴趣。我们如何测量？我们如何测试和衡量我们正在构建的这些机器学习系统的质量？现在我已经。
- en: been in the space for about five years now and I'm building these models， they've
    definitely。 gotten better from when we first started， even just five years ago，
    and some people have。 been doing it way longer than I have。 Like I said， testing
    is relatively new to this space。 Tools in Jacqueline back in 2019， they learned
    at Google that if they didn't do software。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这个领域大约待了五年，构建这些模型，它们确实从我们最初开始时有了显著的进步，即使仅仅是五年前，还有一些人做这项工作比我更久。正如我所说，测试在这个领域相对较新。2019
    年的 Jacqueline 工具，他们在 Google 学到，如果他们不进行软件。
- en: testing early and often， they ran into a lot of problems once they deployed
    their models。 into production， once they deployed these systems。 In their talk
    here at Google I/O， they。 talked about here some of the things that we learned，
    here are some things that we do。 now and we try to bring in software testing as
    early as possible。 To make sure they're。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 早期和频繁地进行测试，他们在将模型部署到生产环境时遇到了很多问题，一旦他们部署了这些系统。在他们在 Google I/O 的演讲中，他们谈到了我们在这里学到的一些东西，以下是我们现在所做的一些事情，我们尽量在尽可能早的时候引入软件测试，以确保他们。
- en: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_4.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_4.png)'
- en: all on the same page， because I don't really know where everyone is at。 You
    may be brand。 new to Python， you may be a machine learning engineer right now。
    I don't know。 We're going。 to go through a very simple exercise here with a very
    common machine learning application。 which is prediction。 Jay Allen-Marz did this
    really well。 He said prediction is predicting。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 大家可能并不在同一页面，因为我并不知道每个人的水平。你可能是刚接触Python的新手，也可能是一名机器学习工程师。我不知道。我们将通过一个非常简单的练习，来进行一个常见的机器学习应用，即预测。Jay
    Allen-Marz对此做得很好。他说预测就是预测。
- en: values based on patterns and other existing values。 Once we understand this
    bit a little， bit。 it'll be like， "Wow， machine learning。" So let's say that we
    are the machine learning。 engineers at this grocery store and our job is to predict
    how much we think customers will。 spend when they come in。 Let's say we have this
    as our data set。 A group of one person， comes in。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 其值基于模式和其他现有值。一旦我们稍微理解这一点，就会想，“哇，机器学习。”假设我们是这家杂货店的机器学习工程师，我们的工作是预测客户进店时会花多少钱。假设我们的数据集是这样的：一位顾客进来。
- en: they spend $10。 A group of two， they spend 20， before they spend 40。 So if I
    were， to ask you。 how much do you think three people will spend， what would you
    say？ 30， right？
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 他们花了$10。两个人花费20，然后花费40。那么如果我问你，三个人人会花多少，你会怎么说？30，对吧？
- en: How did you come up with the answer of 30？ Because we're smart， yes。 You found
    this magical。 number of 10， which happens to be the relationship between the numbers
    in this table。 So if you。 were to grab three and then multiply it by 10， well
    very easily 30。 If I said seven， you。 would say 70 on and on and we go。 Someone
    said regression， exactly。 This is essentially。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你是怎么得出30这个答案的？因为我们聪明，是的。你找到了这个神奇的数字10，这恰好是这个表格中数字之间的关系。因此，如果你抓取三个，然后乘以10，很容易就得到30。如果我说七，你会说70，就这样往下推。有人说回归，没错。这本质上就是。
- en: how machine learning models work。 In this case， this is a supervised learning
    thing。 But， yes。 it finds these relationships between the data and that's what
    it outputs。 Now， in the， top here。 this is the paradigm of traditional programming
    where we define the rules put。 in the data and then we get answers right back
    out。 So if we had a， let's say we had。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型的工作原理。在这种情况下，这是一个监督学习的例子。但，没错。它找到数据之间的关系，这就是它的输出。现在，在顶部，这是传统编程的范式，我们定义规则，输入数据，然后得到答案。因此，如果我们假设，我们有。
- en: a function that was called like is even and you passed in the number three，
    you'll have。 some rules in there to determine that is either true， it's even or
    false， it's odd。 So。 writing unit test for that should be fairly simple， right，
    assert that if I pass in three。 I get false， I put in two， I get true。 Machine
    learning is a little bit different because。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一种名为“是否为偶数”的函数，你传入数字三，它会有一些规则来判断是正确的（偶数）还是错误的（奇数）。因此，为此编写单元测试应该相当简单，对吧？如果我传入三，我得到假；如果我传入二，我得到真。机器学习有点不同，因为。
- en: here you input the answers and the data and the machine learning algorithm determines。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里你输入答案和数据，机器学习算法会判断。
- en: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_6.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_6.png)'
- en: what the rules are instead。 So the output is going to be different。 So what
    makes this。 difficult when it comes to software testing is the fact that it is
    not guaranteed that。 the group of three people are going to spend $30。 They might
    spend 28， they might spend 50。 they might walk in and then just go to the bathroom
    and then leave， right， they might。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 规则是什么呢？因此，输出会有所不同。那么，软件测试时困难的地方在于，无法保证这三个人会花费$30。他们可能花28，可能花50，也可能一进来就去洗手间然后离开，对吧？
- en: spend anything at all。 So because of that， it's difficult to say， well， let
    me assert。 that 30 is the case。 Instead， you have these rules that get out， but
    did you have these， ranges。 these boundaries， it's different than traditional
    programming。 But in this case。 there's different points of fault inside of machine
    learning system， right。 One of the。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 完全不花钱。因此，很难说，嗯，让我确认30是对的。相反，你有这些规则，但这些范围和边界是不同于传统编程的。但在这种情况下，机器学习系统内部有不同的故障点，对吧？其中一个。
- en: big ones is obviously the data set。 The data is what drives the entire machine
    learning， system。 And so if there's problems inside the data set， you're already
    going to have。 issues with what gets out putted。 So software testing can happen
    really early and later， as well。 And that's kind of what we're going to be talking
    about today is the testing and。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一个显而易见的大问题是数据集。数据驱动整个机器学习系统。因此，如果数据集中存在问题，输出的结果就会出现问题。所以软件测试可以在早期和后期进行。这正是我们今天要讨论的测试和。
- en: quality of these things。 So in software testing， we have this concept called
    shift left。 Does。 anyone want to take a stab at what shift left means？ Move or
    hire every data stack。 I like。 that a lot。 Anyone else？ Do it earlier。 I mean，
    the white text， they're kind of throws， it off。 right。 But anyway， if you were
    to take the software development lifecycle， right。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这些事情的质量。在软件测试中，我们有一个叫做向左转的概念。有人想尝试解释一下“向左转”是什么意思吗？移除或雇佣每个数据堆栈。我很喜欢这个。还有其他人吗？尽早做。我是说，白色的文本有点让人困惑。不过，如果你考虑软件开发生命周期。
- en: which is usually a circle diagram and it's like， step one is planning， step
    two is designed。 to be implemented and you deploy and all the good stuff。 If you
    were to take that circle。 and flatten it out， step one is on the left。 Step one
    is on the left。 And step， the last。 step is on the right。 When we talk about shift
    left， we're talking about trying to bring。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 通常是一个循环图，第一步是计划，第二步是设计，然后实施，最后是部署，所有的好事情。如果你把这个循环展平，第一步在左边，最后一步在右边。当我们谈论向左转时，我们是在讨论如何尽可能早地将软件测试人员和开发人员纳入团队。
- en: a lot of these quality and software testing practices as early in the process
    as we possibly， can。 And a lot of companies， they will do all of their development
    right in the middle。 And usually you'll get， you get requirements from UX or product
    or business。 You build。 a thing and then when you're able to deploy， you give
    someone else， they deploy it， they。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 很多这些质量和软件测试实践都应该尽可能早地融入流程中。很多公司会在开发的中间阶段进行所有工作。通常你会从UX、产品或业务那里获得需求。你构建一个东西，然后在能够部署时，交给别人去部署。
- en: observe it， they monitor， they operate it， right。 So shift left is talking about
    how。 can we include our software testers， our developers， as much of the team
    as we possibly can， as。 early in the process。 Because the more you are there in
    the design of things， the better。 things will happen downstream。 So let's say
    we take an example project that we're building。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 观察它，他们监控，操作它，对吧。因此，向左转是在谈论我们如何能尽可能早地将软件测试人员、开发人员及整个团队纳入流程。因为你在设计阶段的参与越多，后续的事情就会越好。假设我们拿一个正在构建的项目作为例子。
- en: a new ML project， right。 And let's kind of go through the process here so we
    can see what。 this will look like。 So step one is we wanted to find the problem。
    What are we trying to， solve？
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一个新的机器学习项目。让我们梳理一下这个过程，看看它是什么样子。第一步是我们想要找出问题。我们想解决什么？
- en: In the previous example with the grocery store， the problem was we want to predict
    how。 much people will spend。 That's not a very good problem statement though，
    because why are。 we wanting to do that， right。 It could be that for the grocery
    store， we care about preventing。 under stocking or over stocking， right。 Especially
    with perishable like milk or dairy。 If I buy。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的杂货店例子中，问题是我们想预测人们会花多少钱。这并不是一个很好问题声明，因为我们为什么想要这样做？可能对于杂货店来说，我们关心的是防止缺货或过度备货，尤其是像牛奶或乳制品这样的易腐烂商品。如果我买。
- en: too little of milk and then people come in expecting milk， well now I'm losing
    money。 as a business because I don't have any milk for them。 So we overstock，
    we buy tons of， milk。 but then we only sell half of our stock。 So then the rest
    of my stock goes to waste。 I lose all that money， it's also a problem。 So it could
    be that we're using machine learning。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 牛奶太少，人们进来期待有牛奶，现在我作为商家就亏损了，因为没有牛奶可供他们。所以我们会备货过多，买很多牛奶，但我们只卖出一半库存。剩下的库存就浪费了，我失去了所有那笔钱，这也是个问题。因此，我们可能会使用机器学习。
- en: to help prevent the under stocking and over stocking problem。 A much better
    problem statement。 than can we tell how many people or can we predict how much
    money is going to be spent， by people。 Moving on。 Who is the ML system for？ Again，
    back in our example here， is this。 for the people doing stocking at night？ Is
    this for the store manager？ Is this for the。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以帮助防止缺货和过量库存的问题。一个比我们能否判断多少人或我们能否预测人们将花费多少钱更好的问题陈述。继续。这个机器学习系统是为谁服务的？再次回到我们的例子中，这是。为了晚上做库存的人吗？是为了店长吗？这是为了。
- en: VP of the region？ Is this for who is going to be using this thing？ It could
    be that the。 ML system is to feed another ML system， right。 That could be the
    case as well。 So who is。 a system ultimately for？ And then of course， does this
    even need machine learning？ When。 I first started， you better believe I was like，
    wow， I know how to do a few little simple。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 区域副总裁？这是针对谁将使用这个东西吗？可能是这个。机器学习系统是为了供给另一个机器学习系统，对吧？这也可能是情况。那么，最终这个系统是为谁服务的？当然，这是否需要机器学习？当我第一次开始时，你最好相信我当时想，哇，我知道怎么做一些简单的。
- en: machine learning things。 Can I apply to everything？ And a lot of the time， the
    answer is yes， but。 sometimes you don't want to do that， right。 What is even is
    odd。 Imagine applying machine。 learning to tell me if three is odd。 Probably not
    the best example， right。 So moving on。 Number two is define success and assess
    risk。 Success， assessment， English is hard。 You。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习的事情。我可以应用到所有事情上吗？很多时候，答案是肯定的，但有时你并不想这样，对吧？甚至奇怪的是什么？想象一下应用机器学习来告诉我三是不是奇数。可能不是最好的例子，对吧？所以继续。第二点是定义成功并评估风险。成功，评估，英语真难。
- en: want to start by defining initial baselines。 And in doing this， let me go a
    few more right， here。 That creative proof of concept is one of the most underrated
    pieces that teams miss， right now。 Because it's so easy now to build these machine
    learning models， right， with。 things like transformers， for example， you can get
    to predicting things within a few lines， of code。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想从定义初始基准开始。在做到这一点时，让我再往前推几步。那种创造性的概念验证是团队现在错过的最被低估的部分之一。因为现在构建这些机器学习模型变得如此简单，比如说，使用变换器，你可以用几行代码开始预测。
- en: And so you might try those out and say， well， this is good enough to start just，
    building things。 When instead， if you build a proof of concept and actually start
    defining。 these baselines for what success looks like and what risks you want
    to avoid or mitigate。 or prevent， this is going to force you into building something
    that's a lot more practical。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你可能会尝试这些并说，嗯，这个足够好可以开始构建东西。当相反，如果你构建一个概念验证并实际上开始定义这些成功的基准以及你想要避免或缓解的风险时，这将迫使你构建一些更实用的东西。
- en: rather than the shiny toy that is a transformer， let's say。 We're dealing with
    a lot of data。 so of course there's going to be privacy and security risks as
    well。 Again， another piece。 that a lot of people don't think about。 And then of
    course， my favorite， one of my favorite。 questions here is do we even have the
    proper resources to do this？ If we were building an。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是那个闪亮的玩具变换器，假设。我们处理着大量的数据，所以当然也会有隐私和安全风险。同样，很多人并没有考虑到的另一个方面。然后当然，我最喜欢的，我最喜欢的问题是，我们是否真的有适当的资源来做到这一点？如果我们在团队中构建一个。
- en: ML system that was meant to detect cancer in patients， let's say， me， Carlos
    Kidman， and。 the worst possible person to tell you what this thing is working
    or not。 So even though。 I may be a software tester by trade， I would suck at testing
    that system because I myself。 don't know how to detect cancer even manually， right？
    So do we have experts that can help。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一个旨在检测癌症的机器学习系统，假设是我，卡洛斯·基德曼，而。告诉你这个东西是否有效的最糟糕的人。因此，即使我可能是一个软件测试员，我在测试这个系统时会很糟糕，因为我自己。甚至连手动检测癌症的方法都不知道，对吧？所以我们是否有可以帮助的专家。
- en: in our team to make sure that we're building the right thing the right way that
    is actually。 helping， right？ Another example of the like sentiment analysis， I'd
    probably want some。 linguists on my team， for example， so do we have the proper
    resources？ Number three is。 design initial architecture， which database or tables
    are going to pull data from？ What。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以确保我们以正确的方式构建正确的东西，实际上是有帮助的，对吧？另一个例子，比如情感分析，我可能希望我的团队中有一些语言学家，所以我们有适当的资源吗？第三点是。设计初始架构，哪个数据库或表将提取数据？什么。
- en: does our ELT process look like？ Is this going to be behind a REST service？ Is
    it going to。 be on a mobile device？ It might not have internet if that's the case，
    right？ How are we going。 to monitor this， monitor and measure it as we're developing
    it？ What about when it's inside。 production？ How are we going to monitor things
    as well？ Yeah， oh， just keep going because， of time。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 ELT 过程是什么样的？这会在 REST 服务后面吗？它会在移动设备上运行吗？如果是那样的话，可能没有互联网，对吧？我们将如何监控这个过程，在开发过程中监测和测量它？当它在生产环境中时呢？我们又将如何监控这些内容？嗯，哦，继续，因为时间关系。
- en: Number four is to collect data。 Where is the data coming from？ This is a little。
    bit different than what I asked before in the database is because this might be
    our data。 is coming from recordings at a traffic camera。 This could be we're recording
    user session。 data and that's being streamed in。 The different sources you have
    will also determine how you。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 第四点是收集数据。数据来源于哪里？这与我之前在数据库中询问的略有不同，因为这些数据可能是来自交通摄像头的录音。这可能是我们正在录制用户会话数据并将其进行流式传输。你拥有的不同数据源也会决定你如何处理这些数据。
- en: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_8.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_8.png)'
- en: do a lot of this as well。 Is this different than staging your dev？ Are you just
    grabbing。 things from production and cloning it into a staged database？ Or are
    you doing some different。 filtering？ How much of it is synthetic versus actual
    prod data？ Where are we storing the， data？
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这与开发环境的准备有何不同？你是在从生产环境中抓取内容并克隆到一个准备好的数据库中吗？还是你在进行不同的过滤？其中多少是合成数据，多少是实际的生产数据？我们在哪里存储这些数据？
- en: Is the data being streamed or batched？ Basically， at the end of the day， what
    I'm。 trying to get at is you got to understand the data during that it's going
    through。 It's。 not enough to just say， well， as the machine learning engineering
    team， I just know that。 Snowflake has all my data in these few tables。 I don't
    need to know what happens before that。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 数据是以流式还是批处理方式进行的？基本上，归根结底，我想表达的是，你必须理解数据在处理过程中发生了什么。仅仅说，作为机器学习工程团队，我只知道 Snowflake
    在这几张表中有我的所有数据，这样是不够的。我不需要知道之前发生了什么。
- en: All I care about are my tables。 That's enough for me。 Well， it's really hard
    to do software。 testing if you're oblivious to what's happening beforehand。 So
    let's take a simple diagram here。 This is a very simple ELT process。 On the left，
    it starts there and then goes to the right。 We have our sources coming from user
    sessions。 So customers on a website， they're doing things。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我关心的只是我的表。这对我来说已经足够了。不过，如果你对之前发生的事情毫无所知，进行软件测试就会变得非常困难。那么我们来看一个简单的示意图。这是一个非常简单的
    ELT 过程。在左侧，它从这里开始，然后向右移动。我们的数据源来自用户会话。因此，网站上的客户在进行操作。
- en: and kind of like Google Analytics， data is being streamed in。 In this case，
    we're using。 Kinesis to stream the data in and loading it into S3。 We're using
    that as our data lake， let's say。 From there， we have some DAGs that do transformations
    and there's different transformations。 depending on where the data is going to
    eventually land。 So， for example， we have Neptune and。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 Google Analytics，数据正在被流式传输。在这种情况下，我们使用 Kinesis 将数据流入并加载到 S3。我们将其作为我们的数据湖。然后，我们有一些
    DAG 进行转换，不同的转换取决于数据最终将落在哪里。例如，我们有 Neptune。
- en: Snowflake and we're putting data in those places。 As software testers， we care
    about every single。 one of these steps。 Why？ Because each one of these steps，
    there's going to be risk in each。 one of those。 If Kinesis goes down for whatever
    reason， then everything downstream gets screwed。 And so we want to make sure that
    we have not just testing and monitoring place but also。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Snowflake，我们正在将数据放入这些地方。作为软件测试人员，我们关注每一个步骤。为什么？因为每一个步骤中都会存在风险。如果 Kinesis 出现故障，那么所有下游的内容都会受到影响。因此，我们希望确保不仅有测试和监控措施，还有其他的。
- en: fault tolerant practices。 If Kinesis were to hiccup， would we know about that？
    Would we。 be able to automatically get it back up and going again？ That's all
    part of software quality， right？
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 容错实践。如果 Kinesis 出现问题，我们会知道吗？我们能否自动恢复并重新启动？这都是软件质量的一部分，对吧？
- en: And so we care about these steps to make sure that once everything on the right
    hand。 side over here， you can't see it but this is probably where the machine
    learning stuff， lives。 right？ That has the best data that possibly can。 But when
    we say what's good data。 we have to define those things。 You don't just get good
    data by writing these theoretical tests。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们关注这些步骤，以确保一旦右侧的所有内容。你看不到，但这可能就是机器学习的部分，对吧？它拥有尽可能好的数据。但是当我们说什么是好数据时，我们必须定义这些内容。你不能仅仅通过编写这些理论测试来获得好数据。
- en: that I'm talking about， right？ Number five is then preparing data。 Now we're
    getting into。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我所谈论的内容，对吧？第五步是准备数据。现在我们进入了。
- en: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_10.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_10.png)'
- en: actual like machine learning stuff， right？ So now you're preparing data。 What
    shapes is。 data to be in？ What are the data types？ Are there any missing values
    or errors？ Basically。 poop data makes poop models， right？ And this is where a
    lot of our machine learning engineers。 the AI， the data scientists， they're doing
    a lot of testing here already。 So I'm going。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上是在处理机器学习的内容，对吧？所以现在你正在准备数据。数据应该处于什么形状？数据类型是什么？是否有缺失值或错误？基本上。劣质数据会导致劣质模型，对吧？而这里是我们的许多机器学习工程师。人工智能，数据科学家，他们在这里已经进行了很多测试。所以我将。
- en: to go through this really this part pretty quick but already lots of experimentation，
    lots。 of testing happens here。 I have data analysts for things like this and data
    engineers because。 I am not the best。 But yeah， we have these people because we
    know that this ML systems。 the lifeblood is the data。 So we want to have people，
    you may call them testers but there。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 必须快速完成这一部分，但这里已经发生了很多实验和测试。我有数据分析师来处理这些事情，还有数据工程师，因为。 我不是最优秀的。但是是的，我们有这些人，因为我们知道这些机器学习系统。其生命线就是数据。所以我们希望有一些人，你可以称他们为测试者，但他们。
- en: may be data analysts in your HR tool but they're still testing the data。 Next
    up we have training。 validating models。 So we experiment and compare models， capture
    training validation metrics。 visualize results， tune weights and parameters and
    hopefully using tests， exploratory and。 automated to help you as you're doing
    this。 One of the， in a previous scene that I had。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 可能在你的人力资源工具中是数据分析师，但他们仍在测试数据。接下来是训练。验证模型。因此，我们实验和比较模型，捕捉训练验证指标。可视化结果，调整权重和参数，并希望使用测试、探索性和自动化来帮助你完成这一过程。在我之前的一幕中，我。
- en: they would do all of their experiments all locally and they would open like
    a new tab， into VS Code。 Here's the results and then for the next run they'd open
    the new tab and， okay。 here's the new results。 Very manual process and nowadays
    we have companies and。 platforms that are building tools specifically to help
    you kind of track all of your experiments。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 他们会在本地进行所有实验，并在VS Code中打开一个新选项卡。这里是结果，然后下一次运行他们会打开新选项卡，好的。这里是新的结果。这是一个非常手动的过程，而如今我们有公司和平台专门构建工具，帮助你跟踪所有实验。
- en: and test results。 So hopefully you can use some automation as well to help out
    to speed， things up。 And we'll have some examples here soon。 So I think that here，
    let me see。 Yep。 So when I talk about validation， the reason why I call it that
    is because I want it to。 be a little bit different than what we refer to as testing。
    So validation is how well does。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 和测试结果。所以希望你也能使用一些自动化来加快进程。我们很快会提供一些示例。所以我想在这里看看。没错。当我谈到验证时，我之所以这样称呼，是因为我希望它与我们所称之为测试的有所不同。因此，验证是指模型的表现如何。
- en: the model perform against the data set it's never seen before。 So even though
    yes this。 you can call it testing as well because it kind of is， right？ You do
    like a test training。 split and whatnot。 I'm calling it validation just so that
    we don't overload the word test。 too much because it's pretty overloaded。 So you
    can think that during training maybe。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 模型在从未见过的数据集上的表现。因此，即使是的，这个过程也可以称为测试，因为它确实是，对吧？你会进行测试训练。分割等等。我称之为验证，以避免过多使用“测试”这个词，因为它的确被过度使用了。所以你可以想象在训练期间也许。
- en: our model has a 95% accuracy。 Wow， so smart， so great。 But then during validation
    it's 76%。 accuracy。 So some people would say， well， this looks like a great indication
    of overfitting。 because my model knows the training data really， really well。
    And yet I'm saying testing is。 a different thing than this as well。 The only reason
    I have facial hair is if I can do， this。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的模型准确率为95%。哇，真聪明，真棒。但是在验证期间，它的准确率是76%。所以有些人会说，这看起来是一个很好的过拟合指示，因为我的模型对训练数据了解得非常、非常透彻。然而，我在说测试与此也是不同的。我的脸上有胡须，唯一的原因就是我可以这样做。
- en: So step number seven is then testing the models。 What behaviors does the model
    show？
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 所以第七步是测试模型。模型显示了什么行为？
- en: Does it demonstrate harmful biases？ Does it meet those actual privacy requirements
    that， we have？
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 它是否展示了有害的偏见？它是否满足我们实际的隐私要求？
- en: Is it performance and reliable and performance in this case is， for example，
    can。 it have a very large load of users using it at one time？ Can it withstand
    things like。 adversarial attacks which is now more about the robustness of the
    model than anything？
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 性能和可靠性，在这种情况下，性能就是，例如，它能否承受大量用户同时使用？它能否抵御诸如对抗性攻击等情况，这现在更多的是关于模型的鲁棒性？
- en: Does it solve the problems that we set out to solve？ So the understocking， overstocking。
    is it actually solving that problem or not？ Or is it only doing a really good
    job predicting。 how much people spend？ And then， of course， do our customers enjoy
    using our ML system？
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 它是否解决了我们设定的那些问题？比如库存不足、库存过多。它实际上是否解决了这个问题？或者它只是在很好地预测人们的消费金额？然后，当然，我们的客户是否喜欢使用我们的机器学习系统？
- en: Sometimes they might not even know that they're using it， right？ That might
    be a good indication。 about who knows。 But do they enjoy using it？ A lot of people
    are weary of AI because like。 a lot of want the machines to do everything and
    they have， you know， that's some truth， in that。 So you want to make sure that
    they can trust your system。 They like using it and。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，他们甚至可能不知道自己在使用它，对吧？这可能是一个很好的指示。关于谁知道。但他们喜欢使用它吗？很多人对AI感到疲惫，因为很多人希望机器做所有事情，而他们知道，这其中有些道理。因此，你需要确保他们能信任你的系统。他们喜欢使用它。
- en: they want to keep using it。 Number eight is then deploy the model。 Again， is
    this going， to be。 is the model itself going to be behind the rest of GraphQL
    service？ Is it going to。 be on a mobile device？ Maybe an airplane， a self-driving
    car， maybe it's a model to tell。 you that you need to restock your fridge and
    buy some more eggs you ran out？ Or maybe。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 他们想继续使用它。第八步是部署模型。再一次，这个模型将会是。模型本身会在GraphQL服务的其余部分之后吗？它会在移动设备上吗？也许在飞机上，或者是自动驾驶汽车，或者它是一个模型来告诉你需要补充冰箱里的食物，买些鸡蛋？或者也许。
- en: it's supposed to give you diagnostic information about a turbine， right？
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 它应该给你提供有关涡轮机的诊断信息，对吧？
- en: Is it a serverless function？ Maybe feeding other things。 For software testers。
    when we talk about like a rest of GraphQL service， well。 there's lots of API testing
    techniques we can use， right？ We can use the requests。 library in Python in order
    to make these requests and see that the responses we get back are， good。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 它是无服务器的功能吗？也许在为其他事物提供支持。对于软件测试人员来说，当我们谈论GraphQL服务的其余部分时，有很多API测试技术可以使用，对吧？我们可以在Python中使用requests库来发出这些请求，并查看我们得到的响应是否良好。
- en: We think of performance。 We can use locust。io to do performance testing and
    see。 how many requests can my model handle at one time？ Can it handle a million
    predictions within。 a second？ Interesting questions that you ask in order to test
    and， you know， measure the。 quality of things。 And it's step number nine。 You
    observe and iterate and this is， you know。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们考虑性能。我们可以使用locust.io进行性能测试，看看我的模型一次能处理多少请求？它能在一秒钟内处理一百万个预测吗？这些有趣的问题可以用来测试和测量事物的质量。这是第九步。你观察和迭代，这就是，你知道的。
- en: your monitor， measure alert， insights learned。 This is， you're operating in
    production now。 So big terms like observability， operability。 These things come
    to mind when I think of。 this step nine。 And if you're not sure what these terms
    mean， it's a great thing to note， down。 do some research afterward because they're
    pretty awesome topics。 All right。 So through。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你的监控、测量、警报、洞察学习。这是，你现在在生产中操作。因此，当我想到第九步时，像可观察性、可操作性这样的术语浮现在脑海中。如果你不确定这些术语的含义，这是一个很好的事项，记下来。事后进行一些研究，因为它们是相当精彩的话题。好的。那么通过。
- en: all those steps， what we're thinking about is how can we prevent risk？ How can
    we mitigate， risk？
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有这些步骤中，我们要考虑的是如何防止风险？我们该如何减轻风险？
- en: How can we detect risk or problems？ Right。 When I think of prevent， that's where
    the shift。 left happens。 It's not easy to， and if I don't holistically know what
    my ecosystem is going。 to have， if I don't holistically know the problem we're
    trying to solve， how customers are going。 to end up actually using this thing，
    it's difficult to prevent problems。 Right。 And so。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何检测风险或问题？对吧。当我想到防止时，这就是向左转移发生的地方。这并不容易，如果我不能全面了解我的生态系统会是什么样，或者我们要解决的问题是什么，客户如何最终使用这个东西，那么预防问题就很困难。对吧。所以。
- en: in software testing， we'll do things like risk storming， example mapping， and
    different。 collaborative techniques。 You've probably heard of like behavior driven
    development in order。 to get the team on the same page as to what do we care about，
    what heuristics matter to。 us when it comes to this ML system or building。 Mitigation
    is when I think of mitigation， I'm。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在软件测试中，我们会进行风险风暴、示例映射和不同的协作技术。你可能听说过行为驱动开发，以便让团队在我们关心什么、哪些启发式对我们来说重要时达成一致，尤其是在涉及到这个机器学习系统或构建时。减轻风险时，我想到的是。
- en: thinking of things like， I'm thinking of things like blue green deployments，
    feature flags。 A/B testing， how can we prevent or mitigate as much risk as possible？
    For example， going。 back to the cancer detection， I may want to just release my
    ML system to one doctor that's。 working with us closely to say， how is it working
    for you and get some feedback from， them？
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 想到的事情，比如蓝绿部署、功能标志、A/B测试，我们该如何尽量防止或减轻风险？例如，回到癌症检测，我可能只想把我的机器学习系统交给一位与我们紧密合作的医生，问问它对你来说效果如何，并从他们那里获取反馈？
- en: If things are working well， let me release it to the whole hospital now。 Let
    me release。 it to then 5% of my customer base， then 50% and so on and so forth。
    Right。 And then detection。 is where you'll find like test automation because those
    kind of functional tests can detect。 problems and that kind of stuff。 So lots
    of different techniques you can use when you're。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切运作良好，我就会把它推广到整个医院。让我先给5%的客户群体发布，然后是50%，依此类推。对吧。然后检测。在这里你会发现测试自动化，因为那些功能测试可以检测问题等。你可以使用许多不同的技术。
- en: thinking about software testing and quality。 So Zillow， this is a very common
    problem。 Hopefully。 people have seen this before。 Zillow is a real estate company
    and they wanted to build an。 ML system back in， I want to say 2019 to 2020， that
    would allow them to automatically buy。 properties and then sell them at a higher
    price later on and make a bunch of money。 Right。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 软件测试和质量。因此Zillow，这是一个非常常见的问题。希望人们之前见过这个。Zillow是一家房地产公司，他们想在2019到2020年间建立一个机器学习系统，使他们能够自动购买房产，然后以更高的价格出售，赚取大量资金。对吧。
- en: They would hire hundreds of people in order to do all this analysis themselves
    and so， they thought。 well， we don't need hundreds of people if our machine learning
    system can， do this all on its own。 Sounds fantastic。 And at the beginning， it
    worked really， really， well。 But then eventually it went down very fast。 Right。
    They actually had to let go。 I。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 他们会雇佣数百人来进行所有的分析，因此，他们认为。如果我们的机器学习系统能独立完成这些工作，那我们就不需要数百人。这听起来太棒了。一开始，它运作得非常非常好。但随后它很快就崩溃了。对吧。他们实际上不得不裁员。
- en: want to say it was like 25 to 50% of their workforce。 They let go。 Because，
    oh， there， it is。 Because there's a huge problem and this person tweeted on their
    hand side saying。 I sold my house to Zillow last week for 550，000。 They called
    me to buy it back。 I offered 350。 and they accepted it on the spot。 So within
    a week， they made $200，000 just because they。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我想说大约是他们员工的25%到50%被裁掉了。因为，哦，没错。因为有一个巨大的问题，这个人在社交媒体上发文说。我上周以550,000卖给Zillow我的房子。他们打电话让我回购。我出价350,000，他们当场接受了。因此，在一周内，他们仅仅因为这样就赚了200,000。
- en: took advantage of the ML system that Zillow had。 So what do you think happened？
    Like， how。 could that possibly have more things worked so well and then eventually
    things went obviously。 so bad？ Anyone have any ideas？ [inaudible]， There's adversarial
    attack。 Was that over there？
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 利用Zillow的机器学习系统。那么你认为发生了什么？像是，怎么可能事情一开始运作得如此顺利，最终却变得如此糟糕？有没有人有想法？[听不清]，这有对抗性攻击。那是在那边吗？
- en: '[inaudible]， Yes。 Whoa， yes。 Lots of different things， right。 And I would say
    every single one of。 you are absolutely right。 There was。 What was that？ Sorry。
    Yeah， the feature engineering。 could have been off as well。 And yes， that was
    definitely a huge part of it too。 There。 was a lot of problems。 So we''ll go through
    this part really quick。 But there was poor， data quality。'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[听不清]，是的。哇，是的。很多不同的事情，对吧。我想说你们每一个人都是绝对正确的。那是什么？抱歉。是的，特征工程也可能存在问题。而且，是的，这绝对是其中一个巨大因素。有很多问题。因此我们会快速过一下这一部分。但是数据质量很差。'
- en: There was， it was easy to game the system。 They were entirely dependent on，
    the ML system。 So there was very little to know human intervention for this ML
    system。 So it could automatically buy properties and sell them however it wanted
    to。 Now this was。 done before COVID as well。 Right。 So when I say risk of external
    factors， once COVID hit。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，系统很容易被操纵。他们完全依赖于机器学习系统。因此对这个机器学习系统几乎没有人工干预。所以它可以自动购买和出售物业，随心所欲。这在COVID之前就已经完成了。对。当我说外部因素的风险时，一旦COVID爆发。
- en: and the market went crazy， instead of pausing the system going， well， let's
    take a second。 to step back。 They stayed on。 So as the market changed and it was
    trained on historical data。 when there was no COVID， all of a sudden there is
    COVID and they didn't do anything about， it。 Goodness。 Lots of problems。 So then
    the one that I took away from this was it was good。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 市场变得疯狂，instead of pausing the system going, well, let's take a second. to step
    back. They stayed on. 所以随着市场变化，它是基于历史数据训练的。当时没有COVID，突然有了COVID，他们对此没有采取任何行动。天哪。很多问题。因此我从中得出的结论是，这是好的。
- en: at first and it got worse over time。 And this is one of the big problems that
    we have， not。 just in machine learning but in software development as well。 You
    have a team of developers， they。 build something， deploy it and then they immediately
    move on to the next task because you know that's。 what they do。 So it may have
    been great for the first three months。 Oh， Carl， who monitored。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 一开始是这样，随着时间推移情况变得更糟。这是我们面临的一个大问题，不仅在机器学习中，也在软件开发中。你有一个开发团队，他们构建某样东西，部署它，然后立即转向下一个任务，因为你知道这就是他们的工作。因此，前面三个月可能很好。哦，卡尔，谁在监控。
- en: for three months and everything looked great。 It's time for us to move on to
    the next thing。 And yet after three months， COVID happened and then things were
    what？ So this is where。 the concept of shift right comes into play。 Who would
    have thought， right？ Doesn't that， make sense？
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 三个月一切看起来都很好。是时候让我们进入下一个环节了。然而在三个月后，COVID发生了，事情变成了什么？所以这就是“右移”概念发挥作用的地方。谁会想到呢，对吧？这不是很有道理吗？
- en: Shift right。 This is what happens post deployment and maybe during deployment。
    to but post deployment。 And so I mentioned SREs or site reliability engineering。
    A lot。 of them live in the right because they care about what happens inside of
    production and。 they have probably a team of people observing this and I'm working
    with it。 So I made this。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 右移。这是部署后发生的事情，可能在部署期间也发生。但在部署后。因此我提到的SREs或网站可靠性工程师。他们大多生活在右边，因为他们关心生产内部发生的事情，他们可能有一组人观察并与之合作。所以我做了这个。
- en: diagram a really simple one just so you can kind of see that instead of it being
    this。 linear thing that I talked about， right， it's meant to be this infinity
    loop。 It's meant。 to be and this is a diagram of ML ops by the way。 But it's meant
    to be you continue to observe。 you continue to iterate and you don't stop， right？
    There's going to be things that you're。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 画一个非常简单的图，这样你可以看到它不是我所说的这种线性东西，而是一个无限循环。这是机器学习操作的图表。它意味着你继续观察，继续迭代，而不是停止，对吧？你会遇到许多事情。
- en: going to optimize in your data collection， optimizing your data preparation，
    optimizing。 your training and probably retraining。 If you're not doing these things
    then you run。 the risk of things like data drift happening to your application，
    right？ And then immediate。 biases like historical bias get introduced。 So of course
    ML ops requires good processes。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据收集、数据准备和训练，以及可能的再训练方面进行优化。如果你不做这些事情，就会面临数据漂移的风险，对吧？然后像历史偏见这样的立即偏见会被引入。因此，当然，机器学习操作需要良好的流程。
- en: testing and automation。 This is much easier said than done of course as is with
    anything。 that involves humans。 It's pretty difficult to have something that's
    really robust that。 everyone feels great， you know。 But alas。 So let's go right
    into testing techniques now。 so then we can wrap it up with concrete things that
    you can take away。 So the first one is。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 测试和自动化。这当然比说起来容易，因为任何涉及人类的事情都是如此。要有一个真正可靠的系统，让每个人都觉得很好，确实很困难。但是，让我们现在深入讨论测试技术，这样我们就能总结出一些具体的东西，你可以带走。所以第一个是。
- en: adversarial attacks。 This is you trying to exploit the model， trying to find
    its weaknesses。 and take advantage of them just like the person did with selling
    their house and then rebying， it。 So on the left here you see a turtle and in
    this case the ML system that's already， been trained。 trained， deployed to production
    and everything is identifying this turtle， as a rifle。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 对抗攻击。这是你尝试利用模型，寻找其弱点并加以利用，就像那个人以低价卖掉他们的房子后又买回一样。在左侧，你看到一只海龟，而在这种情况下，已经训练好的机器学习系统把这只海龟识别为步枪。
- en: I think this is a rifle Carlos。 Well it's funny and yet at the same time what。
    are the potential implications or risks that happen because it thinks a turtle
    is a rifle。 Hopefully no one's walking their turtle and then you know the SWAT
    team shows up and picks。 their butt。 On the right hand side here we have a stop
    sign and in this case the self-driving。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得这是步枪，卡洛斯。这很有趣，但与此同时，这可能有什么潜在的影响或风险，因为它认为海龟是步枪。希望没有人带着他们的海龟散步，然后SWAT队就出现了。右侧是一个停车标志，而在这种情况下是自动驾驶。
- en: car saw this as a 45 mile per hour speed limit sign。 Just with a few stickers
    placed on top， of it。 Now again this may seem like a really simple example but
    that's not uncommon in， the real world。 There might be graffiti on the stop sign。
    If there's a graffiti on the。 stop sign and it doesn't see it as a stop sign anymore
    you're probably going to kill someone。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 汽车把这个看作是时速45英里限制的标志。仅仅在上面贴了几个贴纸。现在，这可能看起来是一个非常简单的例子，但在现实世界中并不罕见。停牌上可能会有涂鸦。如果停牌上有涂鸦，系统就不再把它看作停牌了，那么你可能会导致有人受伤。
- en: Interesting。 Moving on in this case this is security AI。 On the left hand side
    it detects。 a person very nicely。 On the right hand side this person is completely
    invisible to the， system。 All because they're wearing a colorful little square。
    And I have in my house right。 now I have a security system like this that detects
    animals right。 There's a dog walking。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣。继续说，这个是安全AI。在左侧，它能很好地检测到一个人。在右侧，这个人对系统完全不可见。这都是因为他们穿着一个五彩的小方块。而我现在家里就有这样一个安全系统，可以检测动物。现在有一只狗在走。
- en: across your driveway。 It can detect these things。 So if people can be invisible
    to this。 ML system security AI that I purchased that I'm spending money for they
    can just walk。 right into my house no problem well that's scary for me as a consumer
    right。 So become。 the attacker I'm going to go through this really quick。 It's
    not only for computer vision。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 经过你的车道。它可以检测这些东西。因此，如果人们对我购买的这个ML系统安全AI不可见，他们可以轻松走进我的家，这对我作为消费者来说是非常可怕的。所以成为攻击者，我将快速通过这一点。这不仅仅是针对计算机视觉。
- en: obviously I'm showing computer vision because it's the one that you can see
    and look at。 You don't have to be a data scientist or an analyst to create these
    attacks。 You don't。 have to not code either。 If you take my course on test automation
    university that is called。 Intro to Testing Machine Learning Models。 I will actually
    show notebooks and code that。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我展示的是计算机视觉，因为这是你可以看到和观察的。你不必是数据科学家或分析师就能创建这些攻击。你也不必会编码。如果你参加我的测试自动化大学课程，叫做“机器学习模型测试入门”，我会展示笔记本和代码。
- en: you can use in order to do these kinds of attacks。 Be a part of threat modeling。
    If you don't。 know what threat modeling is that's another thing to write down
    and do some research afterward。 And then of course be creative and design tests
    and attacks。 Sometimes you have to be creative。 to find the solutions like us
    using the earth as a satellite that was pretty insane right。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用这些方法进行攻击。成为威胁建模的一部分。如果你不知道威胁建模是什么，那也是要写下来，事后进行一些研究。当然，还要有创造力，设计测试和攻击。有时候你需要有创造力，才能找到解决方案，比如我们用地球作为卫星，这真是疯狂。
- en: Being creative with these kinds of things。 I'm not for behavioral testing。 This
    is us when。 I talked about testing behaviors and what not。 This is what I'm talking
    about。 Behavioral testing。 This is beyond accuracy in those lost metrics。 You
    have to define those desired capabilities。
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这些事情保持创造性。我并不支持行为测试。这是我当谈到测试行为等时所指的。这就是我所说的。行为测试。这超出了准确性和那些损失指标。你必须定义这些期望的能力。
- en: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_12.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_12.png)'
- en: during design right。 So that's the shift left aspect of it。 You can't just say
    well。 let's make sure that turtles don't look like rifles。 That might not be that
    fit your context。 of what you're building right。 So you and your team have to
    decide what are these capabilities。 we care about。 What should it be able to do
    and what shouldn't it be able to do。 If there's。
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计过程中，对吧。这就是“向左移动”的方面。你不能只是说，好吧，让我们确保乌龟看起来不像步枪。那可能不适合你正在构建的上下文。因此，你和你的团队必须决定这些能力是什么。我们关心的是什么？它应该能够做什么，而不应该能够做什么。如果有。
- en: a problem with it how are we going to raise that problem in an elegant way to
    our users。 Right。 The second part testing behaviors gives a more accurate picture
    of model performance。 and this team that actually wrote this white paper。 They
    said that they created twice as。 many tests and found almost three times as many
    bugs because they were doing this collaborative。
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将如何优雅地向用户提出这个问题呢？对。第二部分测试行为能够更准确地反映模型性能。而且实际上撰写这篇白皮书的团队表示，他们创建了两倍于之前的测试，并发现了几乎三倍的错误，因为他们在进行这种协作。
- en: design that shift left approach and then moving into development。 So what does
    this look like。 in the real world。 On the left hand side you can see the capabilities
    that they defined。 One of them was vocabulary。 If you could only have 5，000 tokens
    inside your vocabulary， well。 those 5，000 tokens better be high quality words。
    For example the word and probably you don't。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 设计那种“向左移动”的方法，然后进入开发。那么在现实世界中，这是什么样子的呢？左侧可以看到他们定义的能力。其中之一是词汇。如果你的词汇量只能有 5,000
    个词，那么这 5,000 个词必须是高质量的单词。例如“和”这个词，可能你不需要。
- en: want that in your vocabulary。 Right。 The next one NER is named entity recognition
    and then。 negation as well。 Those are the rows。 The columns they had were different
    testing types。 You。 have the minimal functionality tests， invariance and directional。
    We'll get into some examples。 of this。 On the right hand side they have a table
    of test cases that they're going to。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你希望它在你的词汇中出现。对。下一个 NER 是命名实体识别，然后还有否定。这些是行。他们有的列是不同的测试类型。你有最小功能测试、不变性和方向性。我们将举一些例子。右侧他们有一个将要进行的测试用例表。
- en: be using to test these different capabilities。 So you can see like on the right
    hand side。 it says I can't recommend the food。 They expected it to be a negative
    sentiment and yet the model。 returned it was a positive sentiment so the test
    failed。 Enough of these tests they had。 and after all the tests executed it had
    a failure rate of 76。4%。 Why does this matter？
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 用来测试这些不同能力的东西。所以你可以看到右侧写着，我无法推荐这道菜。他们期望这是一个负面情感，但模型返回的是积极情感，因此测试失败了。他们进行了足够多的测试，在所有测试执行后，失败率达到了
    76.4%。这为什么重要？
- en: Well it matters because and I'll go through this really quick。 It matters because
    you're。 able to test multiple models at once very very quickly。 Now I know this
    is a little hard， to see。 All of these rows here these are all the capabilities。
    So you see like robustness。 and temporal these different capabilities here。 But
    what I care about the most is this section。
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这很重要，因为我会很快讲完。它之所以重要，是因为你能够非常快速地同时测试多个模型。现在我知道这有点难以看清。这些行都是能力的体现。所以你会看到，比如鲁棒性和时间性，这些不同的能力。但我最关心的是这一部分。
- en: here。 This is the failure rate for all the models they're comparing。 To zoom
    in on one。 of them they have the failure rate for there's a model from Microsoft
    a model from Google。 a model from Amazon and then Bert and Roberta。 The two tests
    they have here are the companies。 Australian that should be neutral sentiment。
    This is a private aircraft that should be。
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这是他们比较的所有模型的失败率。放大其中一个模型，他们有来自微软、谷歌、亚马逊的模型，还有 Bert 和 Roberta。他们这里的两个测试是公司的，澳大利亚的应该是中性情感。这是一架私人飞机，应该是。
- en: neutral sentiment as well and yet Bert had a really hard time determining this。
    And these。 were all state of the art models。 So again pass just the training and
    validation there's。 more to be tested right these behaviors especially。 Now fair
    and responsible AI this is testing。 for harmful biases。 So in this case if you
    look at like this is in this paper they were。
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这也具有中性情感，但Bert在判断这一点时遇到了很大的困难。这些都是最先进的模型。所以在训练和验证之后，还有更多需要测试的，尤其是这些行为。现在公平和负责任的AI是测试有害偏见。因此在这种情况下，如果你看这篇论文，他们在做的就是。
- en: trying to show here's data generation and in here all the red bits you see are
    different。 types of harmful biases。 Zillow had the historical bias problem where
    they trained the model on。 things before COVID and then it sucked during COVID。
    Representation bias measurement bias。 and then as you're modeling and building
    things even more biases biases everywhere problems。
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 试图展示数据生成，这里你看到的所有红色部分都是不同类型的有害偏见。Zillow遇到了历史偏见的问题，他们在COVID之前对模型进行了训练，然后在COVID期间表现不佳。表现偏见、测量偏见，然后在建模和构建过程中，更是偏见无处不在，问题重重。
- en: all around。 So fairness when we talk about fairness there's a few aspects you
    can have。 fairness by data fairness by measurement modeling and fairness by design。
    Let's go through some。 examples。 Back in 2017 Google wanted to create an ML system
    that could detect toxicity online。 This would be great for moderators in a chat
    room maybe a video game or whatnot right。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 关于公平性。当我们谈论公平性时，有几个方面可以考虑：数据公平性、测量建模公平性和设计公平性。让我们来看看一些例子。2017年，谷歌希望创建一个能够在线检测毒性的机器学习系统。这对聊天室、视频游戏等中的版主来说将是非常有用的。
- en: So on the top they had if they put in I am straight the model said this is 4%
    toxic basically。 not toxic at all but if you put in I am gay the model back this
    is 86% toxic showing a。 harmful bias。 So they decided well I wonder what other
    things it's has harmful bias with。
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在顶部，他们输入“我很直”，模型显示这是4%有毒，基本上并不有毒，但如果输入“我很同性恋”，模型返回86%有毒，显示出有害的偏见。所以他们决定想知道还有哪些东西也存在有害偏见。
- en: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_14.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b761e95bea5b9f53ef6ad76763b52c8_14.png)'
- en: our system so they put I am gay queer Muslim Jewish Christian straight and notice
    the score。 of how toxic the machine learning system saw this as。 Well us changing
    just the token that。 is an example of invariance testing if I only change one
    word does it change sentiment how。 positive or negative in this case how toxic
    does this become you can measure these things。
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的系统因此他们输入“我很同性恋”、“酷儿”、“穆斯林”、“犹太人”、“基督徒”、“异性恋”，注意机器学习系统如何看待这些的有毒评分。我们仅仅改变一个词，这是不变性测试的一个例子，如果我只改变一个词，情感是否会变化？在这种情况下，这变得有多有毒？你可以测量这些东西。
- en: and do a lot of software testing against them。 In this case this is Google translate
    on the。 left hand side you have Turkish Turkish doesn't have gender for example
    in Spanish you do right。 you have la cia and things like that when it translated
    to English it automatically assumed。 that a nurse she and doctor is he showing
    a harmful bias right。 Another example Casey is my friend。
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 并且对它们进行大量的软件测试。在这种情况下，这是谷歌翻译。在左侧，你有土耳其语，土耳其语没有性别，而西班牙语有，比如“la cia”之类的，当它翻译成英语时，它自动假设护士是女性，医生是男性，显示出有害的偏见。另一个例子是“凯西是我的朋友”。
- en: how do we know if Casey is male how do we know if they're female non-binary
    we don't we don't。 have that context so by design what they did instead was how
    about we show them the different。 answers and the user can select the option that
    matches their context so when I want to translate。 friend into Spanish you get
    amigo or amigo which one fits what you're trying to do。
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们怎么知道凯西是男性？我们怎么知道他们是女性或非二元性别？我们不知道，我们没有那个上下文。因此，他们设计时做的是，我们展示不同的答案，用户可以选择与他们的上下文相匹配的选项。所以当我想把“朋友”翻译成西班牙语时，你得到“amigo”或“amiga”，哪个更适合你的需求。
- en: So to recap we have the shift left shift right adversarial attacks testing behaviors
    and the。 overall experience test fairness harmful biases and of course hopefully
    this helps you get some ideas。 as to what you can search different testing techniques
    you can use in order to test for these。 different things and if you need help
    software testers are here you should leverage them because。
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 所以总结一下，我们有左移右移的对抗攻击，测试行为和整体体验测试的公平性、有害偏见，当然希望这能帮助你获得一些想法，关于你可以搜索的不同测试技术，以便测试这些不同的东西。如果你需要帮助，软件测试人员会在这里，你应该利用他们的资源，因为。
- en: they can help you out we need better testing all around in a very holistic way
    so with that said。 that's it that's all I have for this presentation I do have
    code examples for anyone that is。 interested in seeing how these tests can be
    written in a test automation format but otherwise I'm ready。 for questions or
    I think we're actually close to time so thank you。
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 他们可以帮助你，我们需要更全面的测试，以一种非常整体的方式进行。因此，我想说的就这些。这就是我这次演示的全部内容。对于任何有兴趣了解如何以测试自动化格式编写这些测试的人，我有代码示例，但除此之外，我已经准备好回答问题了，或者我认为我们实际上快到时间了，所以谢谢大家。
