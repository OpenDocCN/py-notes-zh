- en: P11：Keynote - Steering Council Panel - VikingDen7 - BV1f8411Y7cP
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P11：主题演讲 - Steering Council 小组讨论 - VikingDen7 - BV1f8411Y7cP
- en: So next up we have our keynote with Python Steering Council members Pablo Helindo
    and。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是我们与Python Steering Council成员Pablo Helindo的主题演讲。
- en: '![](img/175c2853e461acd8a351a8e44cb0f609_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/175c2853e461acd8a351a8e44cb0f609_1.png)'
- en: Thomas Wouders。 Unfortunately， our other three Python Steering Council members
    weren't able to make it to。 Python this year for various reasons。 You know， COVID，
    babies， et cetera， et cetera。 So all very understandable reasons。 But they are
    certainly here in spirit。 I did not have time to print out their faces， but that
    absolutely was my intention to have。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Thomas Wouders。不幸的是，我们其他三位Python Steering Council成员由于各种原因未能参加今年的Python大会。你知道，COVID，婴儿，等等等等。因此，这些都是非常可以理解的原因。但他们的精神绝对在这里。我没有时间打印出他们的照片，但我确实打算这样做。
- en: them sitting in these chairs with them。 So just imagine little cutouts of their
    heads sitting here alongside。 So we're just going to give them a moment to get
    everything hooked up and then we'll get， started。 \>\>， \>\>， \>\>， \>\>， \>\>，
    \>\>， \>\>， \>\>。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下他们坐在这些椅子上。所以只需想象他们的头部剪影坐在这里。因此，我们只会给他们一点时间连接一切，然后我们就会开始。 \>\>， \>\>， \>\>，
    \>\>， \>\>， \>\>， \>\>， \>\>。
- en: '![](img/175c2853e461acd8a351a8e44cb0f609_3.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](img/175c2853e461acd8a351a8e44cb0f609_3.png)'
- en: \>\>， \>\>， \>\>， \>\>， \>\>， \>\>， \>\>， \>\> \>\>， \>\> \>\>， \>\>， \>\>，
    \>\>， \>\>， \>\>， \>\> \>\>， \>\> \>\>， \>\> \>\> \>\>， \>\> \>\> \>\>。 \>\> \>\>
    \>\>， \>\> \>\> \>\> \>\> \>\>， \>\> \>\> \>\> \>\> \>\>， \>\> \>\> \>\> \>\>
    \>\> \>\>， \>\> \>\> \>\> \>\> \>\> \>\>， \>\> \>\> \>\> \>\>。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: \>\>， \>\>， \>\>， \>\>， \>\>， \>\>， \>\>， \>\> \>\>， \>\> \>\>， \>\>， \>\>，
    \>\>， \>\>， \>\>， \>\> \>\>， \>\> \>\>， \>\> \>\> \>\>， \>\> \>\> \>\>。 \>\> \>\>
    \>\>， \>\> \>\> \>\> \>\> \>\>， \>\> \>\> \>\> \>\> \>\>， \>\> \>\> \>\> \>\>
    \>\> \>\>， \>\> \>\> \>\> \>\> \>\> \>\>， \>\> \>\> \>\> \>\>。
- en: welcome to the probably most boring keynote of the conference， at least my part。
    Pablo。 and I are two fifths of the Python steering council， and we are going to
    talk about the。 steering council。 Thank you。 So here is what we are going to talk
    about。 The steering。 council highlights of the year， just a couple of highlights
    of the year and Pablo is going。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到可能是本次会议最无聊的主题演讲，至少是我这一部分。Pablo和我是Python Steering Council的五分之二，我们将讨论这个领导委员会。谢谢。那么我们将讨论的内容是今年领导委员会的亮点，仅仅是几项亮点，Pablo将会。
- en: to give a very exciting talk about what is new in Python 3。11 and then we will
    have a。 little pre-recorded Q&A session。 The questions were asked via the internet
    over the last， two weeks。 So what is the steering council？ The steering council
    as defined in 13， originally。 PEP 16 is in charge of Python， the programming language
    and Python， the C Python。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 给出一个非常激动人心的演讲，关于Python 3.11的新特性，然后我们将有一个预先录制的问答环节。这些问题是在过去两周通过互联网提问的。那么，什么是领导委员会？领导委员会根据第13项PEP
    16的定义，负责Python编程语言和C Python。
- en: the implementation。 It replaced the BDFL， Peter van Rossen， and yes。 that is
    how you pronounce his name， when， he retired in 2019。 We are supposed to govern
    by consensus or not authoritarian control。 We。 listen to the core developers，
    we listen to the community and we make decisions， we。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 实施。它替代了BDFL，Peter van Rossen，是的。这是他名字的发音，他于2019年退休。我们应该通过共识治理，而不是专制控制。我们倾听核心开发者，倾听社区，并做出决策。
- en: think is best in all of that。 We are also charged with fostering the community
    and fostering。 the core developers， making sure the volunteers can all do their
    work， all of that。 And then。 also we make the final decision on Python enhancement
    proposals， at least the ones that。 we don't delegate to certain individuals who
    have better experience or better knowledge。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这是其中最好的部分。我们还负责促进社区和核心开发者，确保志愿者能够完成他们的工作，所有这些。然后，我们对Python增强提案做出最终决定，至少是那些我们不委托给有更好经验或知识的个人的提案。
- en: than we do and who we trust to make those decisions。 We meet weekly and I say
    this because we take。 this seriously， there is a lot of stuff we have to go through，
    we meet for an hour and。 a half every week and we fill that hour and a half talking
    about things。 And then we also。 do some other work besides preparing emails， communications，
    et cetera。 And just to make。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们信任做出这些决定的人。我们每周开会，我这样说是因为我们对此非常认真，有很多事情需要处理，我们每周会开一个半小时的会议，填满这一个半小时讨论各种事情。然后我们还会做一些除了准备电子邮件、沟通等之外的其他工作。为了确保。
- en: it very clear， the steering council is separate from the Python software foundation。
    The steering。 council is the technical direction of the language and the Python
    software foundation。 is the community， the fundraising， the grants， this fantastic
    conference， infrastructure like， PIPI。 There is a lot of overlap。 There are core
    developers on the PSF board of directors， including me。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 非常明确的是，指导委员会是与Python软件基金会分开的。指导委员会负责语言的技术方向，而Python软件基金会则负责社区、筹款、资助，这个精彩的会议，还有像PIPI这样的基础设施。两者之间有很多重叠。PSF董事会有核心开发者，包括我。
- en: And there are board directors like me and former board directors like Brett。
    on the steering council。 We also have a very good work， had a very good working
    relationship。 with the former executive director， Eva。 She had attended our weekly
    meeting， not a voting。 member of the steering council but very much part of the
    process and providing a lot of。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 还有像我这样的董事会成员和像布雷特这样的前董事会成员在指导委员会中。我们与前执行董事埃娃有着非常良好的工作关系。她参加了我们的每周会议，虽然不是指导委员会的投票成员，但她在流程中发挥了重要作用，提供了很多。
- en: support and keeping the lines of communication with the software foundation
    short。 So we can。 spend money， which I'll talk about later。 Eva left the PSF last
    year after 14 years of service。 We have a new executive director。 We haven't quite
    established the same relationship yet。 but I'm sure it will be fine because I
    love that。 For those who want to keep up up to date。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 支持并保持与软件基金会的沟通畅通。因此我们可以花钱，稍后我会谈到这一点。埃娃在服务了14年后去年离开了PSF。我们有了新的执行董事。我们还没有建立起相同的关系，但我相信会很好，因为我很喜欢这一点。对于那些想要保持最新状态的人。
- en: on what the steering council does， we publish monthly updates on GitHub。 We
    also send them。 to discuss。python。org which is the discourse website we use。 And
    if you have any questions。 you can always ask us personally at the conference
    an email or you can send an email to steering。 council at Python。org。 So a little
    bit of the steering council we had in the past， like I， said。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 关于指导委员会的工作，我们每月在GitHub上发布更新。我们也会将这些更新发送到discuss.python.org，这是我们使用的讨论网站。如果你有任何问题，可以在会议上亲自问我们，或者发邮件给我们，或者发邮件到steering.council@python.org。所以这是我们过去的指导委员会的一些情况。
- en: this was established in 2019 because Hido wanted to retire from being the one
    person， in control。 But as you can see from the fair steering council， he didn't
    quite abandon us。 He was part of the first steering council creating a little
    bit of continuity。 The year later。 we had Nick and Hido step down and I came in
    and Victor Stinner。 The year after that。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这在2019年建立，因为Hido想要退休，不再是唯一的控制者。但正如你从公平的指导委员会看到的，他并没有完全放弃我们。他是第一个指导委员会的一部分，创造了一些连续性。一年后，我们有尼克和Hido辞职，我接替了，维克托·斯廷纳。之后的一年。
- en: Pablo replaced Victor Stinner。 Victor stepped down， I should say， and Pablo
    replaced Victor。 And then last year， Carol stepped down。 Barry， who is probably
    somewhere in the audience。 heckling me， didn't get reelected and we had Gregory
    and Peter in their stead。 Now， I put。 the company names up there。 We have a conflict
    of interest policy， no more than two people。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 巴勃罗替换了维克托·斯廷纳。可以说是维克托主动辞职，巴勃罗接替了他。然后去年，卡罗尔也辞职了。巴里，可能就在观众席中，嘲弄我，他没有连任，我们有格雷戈里和彼得来接替他们的位置。现在，我把公司的名称放在这里。我们有利益冲突政策，不超过两个人。
- en: from the same company。 If， for instance， Google acquired Microsoft， you never
    know， one of。 us would have to step down。 I also put it up there because even
    though we have a nice。 turnover and I colored the slide so you can see kind of
    the spread in years of service。 on the steering council。 And we have a spread
    of experience as core developers。 Brett， Greg。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 来自同一公司的情况。如果，例如，谷歌收购了微软，你永远不知道，我们中的一个人将不得不辞职。我把它放在这里，因为即使我们有不错的人员更替，我也把幻灯片上色，这样你可以看到在指导委员会的服务年限分布。而且我们在核心开发者中也有经验的分布。布雷特、格雷戈里。
- en: and I have been core developers for 20 some years。 Pablo and Peter are more
    recent core， developers。 We are still five white guys working at tech companies。
    So it's not exactly diverse。 We are spread out of the world。 We have a very diverse
    set of opinions to the point where。 occasionally we have discussions in our weekly
    meetings， specifically Pablo and I。 And then。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经是核心开发者20多年了。巴勃罗和彼得是比较新近的核心开发者。我们仍然是五个在科技公司工作的白人男性。所以这并不算多元化。我们遍布世界各地，拥有非常多样的观点，以至于偶尔在我们的每周会议中进行讨论，尤其是巴勃罗和我。然后。
- en: when I come down from my office， my wife asks who I've been fighting with。 I
    guess I speak very loud。 And it's all good。 I mean， we work together very， very
    well。 It's just we have passion。 I mean， the diversity is a reflection of the
    core developers。 We。 are all core developers。 It's not a requirement for steering
    council members to be core developers。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 当我从办公室下来时，我的妻子问我跟谁在争吵。我想我说话声音很大。这一切都很好。我的意思是，我们的合作非常顺利。我们只是充满激情。我的意思是，多样性反映了核心开发者的特点。我们都是核心开发者。对指导委员会成员来说，并不是必须是核心开发者。
- en: I would love for a non-core developer to be on the steering council。 But the
    people who。 vote for the steering council are core developers。 So there is a trust
    issue， an experience issue。 A lot of the decisions made by the steering council
    are very technical。 So we want the。 technical knowledge。 But there are also a
    lot of social things。 We're looking at ways。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望有一位非核心开发者加入指导委员会。但是投票选举指导委员会的人是核心开发者。因此存在信任问题和经验问题。指导委员会做出的很多决策都非常技术性。所以我们需要技术知识。但也有很多社会方面的事情。我们正在寻找方法。
- en: to spend money， acquire sponsorships。 Those also require other expertise。 So
    it is something。 I hope we can improve as core developers in the future。 Here's
    a terrible picture of。 us on the top from left to right。 Pablo， me， Greg， and
    the bottom， Peter， and Brett。 I apologize。 for the picture that makes me look
    young。 It's very old。 So some highlights of the year。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 花钱，获得赞助。这些也需要其他专业知识。所以这是一个事情。我希望我们作为核心开发者在未来能够改进。这里有一张我们从左到右的可怕照片：Pablo，我，Greg，以及底部的Peter和Brett。我为这张让我看起来年轻的照片感到抱歉。这是很旧的。所以这一年的一些亮点。
- en: First of all， bugs。python。org was migrated to GitHub。 This was the result of
    years of planning。 years of discussion before the years of planning。 And then
    more than a year of work by Ezio。 which was funded by GitHub by donation from
    GitHub and with support from GitHub。 There。 were a lot of GitHub engineers involved
    as well。 In the end， to try to get at the last， you， know。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，bugs.python.org 被迁移到 GitHub。这是多年计划的结果。在多年规划之前进行了多年的讨论。然后是 Ezio 进行的超过一年的工作，这项工作由
    GitHub 的捐赠资助，并得到 GitHub 的支持。还有很多 GitHub 工程师参与其中。最后，试图解决最后的问题，你知道的。
- en: last mile done， we included Ukash as well。 And it was completely finished on
    April， 10th。 There's still some cleanup to be done。 The current state is that
    bugs。python。org is， frozen。 I don't know if a lot of people have used Roundup。
    I thought it was great。 But it's。 not GitHub issues and it doesn't have the network
    effect and the community knowledge。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一公里完成，我们也包括了Ukash。它于4月10日完全完成。仍然有一些清理工作要做。目前的状态是 bugs.python.org 被冻结。我不知道有多少人使用过
    Roundup。我认为它很好。但它不是 GitHub 问题，没有网络效应和社区知识。
- en: that GitHub issues has， as well as the integration with the rest of GitHub。
    All old issues have。 been moved， including comments and other metadata。 It was
    a lot of data。 It took three days to。 migrate。 It was originally going to take
    seven， but GitHub managed to provide some speedups。 All new issues have to be
    created on GitHub。 All the changes have to be made on GitHub。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 问题，以及与 GitHub 其余部分的集成。所有旧问题，包括评论和其他元数据，已被迁移。这是大量的数据。迁移花了三天。最初预计需要七天，但
    GitHub 设法提供了一些加速。所有新问题都必须在 GitHub 上创建。所有更改都必须在 GitHub 上进行。
- en: It's all on GitHub now。 All the documentation was updated。 As far as we know，
    we may have。 missed some。 We have a new FAQ on the migration and the effects of
    the migration。 And we're。 still ironing out last couple of things， but the bots
    and the workflows have all been updated。 \>\> That's a funny thing。 We did this
    slide before we knew that the configuration was actually， done。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在一切都在 GitHub 上。所有文档都已更新。就我们所知，我们可能漏掉了一些。我们有一个关于迁移及其影响的新常见问题解答。我们仍在解决最后几个问题，但机器人和工作流程都已更新。>>
    这是个有趣的事情。我们在知道配置实际上已经完成之前就做了这个幻灯片。
- en: We assumed it was going to happen。 \>\> We were never quite sure。 Other news
    from the last year。 we hired a developer in residence。 This is something that
    the steering council has been working on since 2019。 so since before， my involvement。
    We originally wanted three developers in residence that we were going。 to fundraise
    for in 2020， but then the pandemic happened。 We weren't quite sure what state。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们以为这会发生。>> 我们从未完全确定。去年的其他新闻是我们雇佣了一位驻留开发者。这是指导委员会自2019年以来一直在努力的事情，早在我参与之前。我们最初想在2020年为三位驻留开发者进行筹款，但随后疫情发生了。我们不太确定状态。
- en: the PSF would be in。 Last year， Google came to the PSF and wanted to provide
    a significant。 donation for a good project。 We convinced them very easily that
    it would be a good idea to。 hire a developer in residence to work on CPython。
    A full-time core developer。 \>\> Lukas is a long-term core developer。 Really，
    he managed over 3。8， 3。9 and he gave a very。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: PSF会参与其中。去年，谷歌找到了PSF，希望为一个好的项目提供一笔可观的捐赠。我们很容易说服他们，聘请一位驻开发者来专注于CPython是个好主意。这是一名全职核心开发者。>>
    Lukas是一名长期核心开发者。实际上，他管理过3.8、3.9版本，并且他做得非常好。
- en: uncontroversial keynote on Friday， which I was in agreement with just for the
    record。 So the position is hired by the PSF。 It's funded by Google this year。
    Meta has already。 provided funding for the next year， which starts in July。 So
    we're good for a little， while。 but obviously we want this to continue in the
    future。 While it's managed by the PSF。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 周五的主题演讲没有争议，我只是为了记录与之达成了一致。因此，这个职位是由PSF聘用的。今年的资金来自谷歌。Meta已经为明年提供了资金，明年从七月开始。因此我们在接下来的一段时间内都很稳妥，但显然我们希望将来能够继续。在PSF的管理下。
- en: because you need to make sure that people have everything they need to do the
    work， the。 direction is set by the steering council。 We've asked Lukas to do a
    number of things。 including the GitHub issues migration。 He's been working through
    issues and pull requests。 mentoring and trying to figure out the best way to have
    impact。 He's also been keeping。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 因为你需要确保人们拥有完成工作的所有必要条件，方向由指导委员会设定。我们已要求Lukas做一些事情，包括GitHub问题的迁移。他一直在处理问题和拉取请求，指导并试图找出最有效的影响方式。他还一直在保持。
- en: the community up to date on his blog。 Other news of the last year， multiple
    efforts。 to speed up CPython。 This isn't entirely a new thing， but a lot of things
    came together， last year。 Microsoft has a faster CPython team that's been churning
    out changes to speed， up CPython。 Instagram released Cinder。 Sam Gross came to
    Cordef with a plan to remove the。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 社区在他的博客上保持最新的动态。去年的其他新闻包括多项努力来加速CPython。这并不是完全新的事情，但去年有很多事情汇聚在一起。微软有一个更快的CPython团队，正在推出变更以加速CPython。Instagram发布了Cinder。Sam
    Gross带着一个计划来到Cordef，准备移除。
- en: global interpreter lock， which would allow parallel threads to execute Python。
    We have， piston。 pigeon， all kinds of projects that have been going for a while
    that are still。 going and providing insides and patches and experiments。 A lot
    of this work is experimental。 Not all of the improvements will land。 There's a
    lot of communication that needs to happen， as well。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 全局解释器锁，这将允许并行线程执行Python。我们有Piston、Pigeon等各种项目，这些项目已经持续了一段时间，仍在进行中，并提供见解、补丁和实验。很多工作都是实验性的，并不是所有的改进都会实现。此外，还有很多沟通需要进行。
- en: There are tradeoffs to consider。 But we already see good improvements in 311。
    which Pablo will talk about and there is going to be more to come。 Awesome。 Who
    is excited for 311？
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 需要考虑一些权衡。但我们已经在311中看到了很好的改进，接下来Pablo会谈到这些，并且还会有更多的内容。太棒了！谁对311感到兴奋？
- en: Yeah。 Yeah。 So what I'm going to do is I'm going to cover。 a bit kind of the
    things that you can expect for 311。 We still have one week， so maybe some。 brave
    person will propose a gigantic pec。 Sorry if that's amazing。 Please don't。 Yeah。
    I'm a sort of a release manager， so better not give me more work。 But I'm going
    to cover。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 是的。所以我将要做的是覆盖一下311的预期内容。我们还有一周的时间，也许会有勇敢的人提议一个巨大的pec。抱歉，这太惊人了。请不要。是的。我是一名发布经理，所以最好不要给我更多的工作。但我将会涵盖一下。
- en: it briefly。 What is there？ If you have more interest on some of these topics，
    you can。 read the what's near 311 or the peps in particular。 So let's go。 So the
    first exciting thing is。 the faster CPython project。 So here you can see it is
    not important that you can read。 the different things。 But what you're seeing
    here is the different benchmarks that we have。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 简要介绍一下。还有什么？如果你对这些主题有更多的兴趣，可以阅读关于311的最新动态或特别的PEPs。所以我们开始吧。第一个令人兴奋的事情是更快的CPython项目。在这里，你可以看到重要的是你能读懂的不同内容。但你看到的是我们拥有的不同基准测试。
- en: on the official benchmark。 So in 310 against 311， 311 is the orange one， 310
    is the blue， one。 The interesting thing to see here is that bigger bars are worse
    and smaller bars are， better。 So a lot of these benchmarks have been improved。
    This is the biggest improvement。 in any patch release that we have done。 So in
    any minor release， sorry， which we are super。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 关于官方基准测试。在310和311的对比中，311是橙色的，310是蓝色的。有趣的是，这里较大的柱子表示较差的结果，而较小的柱子则表示较好的结果。因此，这些基准测试中有很多都得到了改善。这是我们在任何补丁发布中最大的改进。所以在任何小版本中，抱歉，我们对此感到非常兴奋。
- en: exciting。 How this will translate to your application， as Mark Sandon likes
    to say， it， depends。 You know， give us more benchmarks so they can appear here。
    But we are super， excited。 We are packing very interesting optimizations and we
    are very hopeful that， you will enjoy them。 Of course， there has been some interesting
    consequences of this。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 令人兴奋的是，这将如何转化为你的应用，正如马克·桑登喜欢说的，取决于。你知道，给我们更多基准测试，这样它们就可以出现在这里。但我们非常兴奋。我们正在打包非常有趣的优化，我们非常希望你会喜欢它们。当然，这也带来了一些有趣的后果。
- en: We have been working very hard to try to fix like third party projects and what
    not that。 have been affected by some of the most internal changes。 So it may take
    a bit more to， for。 some projects to support 311。 But we think that in total it
    will be worth it。 So yeah。 fast-to-see Python。 Everybody is excited about that。
    So what else？ So we have more error messages。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一直在努力修复像第三方项目等受到一些内部变化影响的内容。所以某些项目可能需要更多时间来支持311。但我们认为总的来说是值得的。所以，是的，快速看到的Python。大家对此都感到兴奋。那么还有什么？我们有更多的错误信息。
- en: I know when to talk about all of them in particular。 But I'm very excited to
    say that in 311， most。 of these error messages that you can see here， those are
    like specialized syntax errors have。 been continued by the community。 So before
    I've been working on them， but a lot of people。 have been very excited about these
    things。 Many of the ones that you see here， like for。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道何时具体谈论它们。但我很高兴地说，在311中，你可以看到的大多数错误信息，像这样专门的语法错误，已经得到了社区的继续支持。在此之前我一直在处理这些，但很多人对此非常感兴趣。你在这里看到的许多，比如。
- en: instance like functional elements with two stars and things like that， have
    been proposed。 and even continued by members of the community。 So you could do
    that。 It's very simple。 You。 can watch the recording of one of my talks to know
    how to do that。 But yeah， I think。 everybody loves better error messages and we
    are going to still pack those in 311 and。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于带有两个星号的功能元素等实例，已经被提出，并且得到了社区成员的继续支持。所以你可以这样做。这非常简单。你可以观看我演讲的录音来了解如何做到这一点。但我认为，大家都喜欢更好的错误信息，我们仍然会在311中加入这些内容。
- en: even more in 312。 So stay tuned for that。 Something that we have also that we
    are super。 excited about is PEC 657， which has this boring name， including fine
    grained error location。 in tracebacks。 So what this PEC is about is， for instance，
    here you can see like a traceback。 of an exception that says here， non-type object
    has no attribute X。 And this is because like。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在312中甚至更多。所以请保持关注。我们还有一件事情，让我们非常兴奋，那就是PEC 657，它有这个无聊的名字，包含细粒度的错误定位。在回溯中。所以这个PEC的内容是，例如，这里你可以看到一个异常的回溯，指出非类型对象没有属性X。这是因为。
- en: something in this big formula here is none。 And the problem is that in 310 and
    before it。 was not possible to know which one of those things was none。 But with
    this PEC， we are super。 excited because now we can show you this instead in which
    we can point to you immediately that。 I was this guy here， the one that he was
    known， which is very cool。 You can see all。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个大公式中，某个值是`none`。问题在于，在310及之前的版本中，无法知道哪些是`none`。但通过这个PEC，我们非常兴奋，因为现在我们可以立即向你展示。我是这里的这个人，那个他所知道的，这非常酷。你可以看到所有。
- en: the examples here。 For instance， this is my favorite actually。 You can see here
    like in。 mind that you have some big JSON with a lot of like， you know， levels。
    So you are accessing。 a bunch of things here and the problem is like， yeah， non-type
    object is not subscriptable。 Not good， right？ But look at this beauty。 Now I'm
    telling you， yeah， it was this guy that。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的示例。例如，这实际上是我最喜欢的。你可以看到，想象一下你有一个包含很多层的大JSON。所以你在访问这里的一堆东西，问题是，非类型对象不可下标访问。不太好，对吧？但看看这个美丽。现在我告诉你，是这个家伙。
- en: was not subscriptable。 Nice。 And also， who doesn't like dividing by zero？ The
    dividing。 by zero is bad， right？ We don't like it。 But now it's even better because
    like we'll tell。 you which one was the one that was divided by zero with this
    nice arrow here。 So much better。 that you do not need to touch a PDB or anything。
    You can know this thing from the tracebacks。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 不可下标访问。很好。还有，谁不喜欢除以零呢？除以零是坏事，对吗？我们不喜欢它。但现在更好了，因为我们会告诉你哪个是被零除的，用这个漂亮的箭头指示。这样好多了，你不需要触碰PDB或其他任何东西。你可以通过回溯知道这件事。
- en: So we are super excited about this one。 More cool stuff。 So for instance， we
    have now。 exception groups and exception star。 This is a very interesting one。
    So right now we have。 this new API that still needs documentation。 So if you try
    to look for documentation， we。 will get there。 But the idea is that it's something
    that will work very similar as how。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们对此非常兴奋。更多酷炫的东西。例如，我们现在有异常组和异常星。这是一个非常有趣的东西。目前我们有这个新的API，仍然需要文档支持。所以如果你试图寻找文档，我们会做到的。但这个想法是它的工作方式与。
- en: three nurseries work。 So in a sync I/O， you can now say I'm going to start a
    task group。 here with a context manager and a synchronous context manager。 And
    here you can create a。 bunch of tasks。 And the whole idea here， although it has
    more interesting semantics， but the。 main idea here is that the task group will
    basically wait until these two tasks finish。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 三个托儿所工作。所以在同步I/O中，你现在可以说我要开始一个任务组。在这里使用上下文管理器和同步上下文管理器。你可以创建一组任务。这里的整个概念，尽管它有更有趣的语义，但主要思想是任务组基本上会等待这两个任务完成。
- en: And you can handle correctly cancellation。 So you can sell some of these tasks。
    It will。 behave as you spec and it does in Trio and things like that。 And this
    is very， very exciting。 because like a lot of people have been waiting for this。
    This semantics has proven to be super。 interesting from the Trio project and we
    are bringing them then into CPython。 Interestingly。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 而且你可以正确处理取消。因此，你可以出售其中一些任务。它会按你的规格执行，类似于Trio等。这是非常令人兴奋的，因为很多人一直在等待这个。这种语义在Trio项目中证明是非常有趣的，我们正在将其引入CPython。有趣的是。
- en: to provide nice interoperability with the interpreter， this requires a big change，
    which。 is the actual path that is here。 The reason is because this task over here，
    like T1 and， T2。 are going to run concurrently， right？ And both of them can raise
    exceptions。 So we needed。 a way to communicate to the interpreter that some piece
    of code can raise multiple exceptions。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提供与解释器的良好互操作性，这需要一个重大改变，这就是这里的实际路径。原因是因为这里的任务，比如T1和T2，将同时运行，对吗？而且它们都可以引发异常。因此，我们需要一种方法来向解释器传达某段代码可以引发多个异常。
- en: not only one。 And this is what this path is about。 So now there is this new
    exception。 called exception group。 And here I'm raising one of them。 And the whole
    idea of this exception。 group is that you can have many exceptions inside。 For
    instance， I'm adding here one。 value error and one index error。 And for instance，
    if you raise these things， you will see that。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 不止一个。这就是这条路径的意义。所以现在有一个新的异常，称为异常组。在这里我引发其中一个。这个异常组的整体概念是你可以在里面有多个异常。例如，我在这里添加了一个值错误和一个索引错误。例如，如果你引发这些东西，你会看到。
- en: now we have this nicely formatted traceback code。 So if this exception reaches
    the top， level。 it will tell you， okay， someone from this exception group and
    inside this exception， group。 you know， it was a value error and an index error。
    This is very important because。 this will allow you to handle cancellation and
    many other things that happen with exceptions。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了格式良好的回溯代码。所以如果这个异常达到顶层，它会告诉你，好的，某个来自这个异常组的人，以及在这个异常组中，你知道，它是一个值错误和一个索引错误。这非常重要，因为这将允许你处理取消和许多其他与异常相关的事情。
- en: group in a nice way。 And to provide very good interoperability with interpreter，
    now we。 have this extra key word called accept star。 So now you can write this
    kind of code， which。 at the beginning looks of your funky， but it's very easy
    to understand。 The main idea here。 is that in normal in an exception handler，
    only one of these will execute， right？ If you。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以一种优雅的方式分组。为了与解释器提供良好的互操作性，现在我们有一个额外的关键字叫做accept star。所以你可以编写这种代码，最开始看起来有些古怪，但非常易于理解。这里的主要思想是，在常规异常处理程序中，只有其中一个会执行，对吗？如果你。
- en: throw an exception， it just happens to be an spam error。 So the spam error handler
    will， execute。 If you happen to be a fooler， then the fooler will execute， so
    far and so on。 But in it with accept star， because it's made to handle exception
    groups， then multiple。 of these things can happen。 So for instance， if you throw
    an exception group that has an。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 抛出一个异常，它恰好是一个垃圾邮件错误。所以垃圾邮件错误处理程序将执行。如果你恰好是一个愚弄者，那么愚弄者将执行，依此类推。但在它与`accept star`一起，因为它是为了处理异常组而制作的，那么多个。
    这些事情可以发生。所以例如，如果你抛出一个包含的异常组。
- en: spam error and a fooler， then both the handle for the spam error and the handle
    for the。 fooler will trigger。 This will allow you to handle， for instance， an
    exception group that。 has cancellation and other things。 So for instance， you
    could use some of the information。 to stop a database or to log the exceptions，
    whatever you want。 The actual motivations and。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 垃圾邮件错误和一个愚弄者，那么垃圾邮件错误的处理程序和愚弄者的处理程序。 将同时触发。这将允许你处理，例如，一个包含取消和其他内容的异常组。所以例如，你可以使用一些信息。
    停止数据库或记录异常，无论你想要什么。 实际的动机和。
- en: why this is useful is very well written in the peps。 So I really encourage you
    to go。 there and read about it。 It reads very， very nicely。 But we will also obviously
    put some。 examples in the documentation， so you don't need to read all the technical
    documents。 But it's a very small change， but if you write a sync。io code and you
    are being used， in Trio。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么这很有用在PEPs中写得很好。所以我真的鼓励你去。 那里阅读。它读起来非常非常好。但是我们显然也会在文档中放入一些。 示例，这样你就不需要阅读所有的技术文档。但是这是一个非常小的变化，但如果你编写`sync.io`代码并且你正在使用Trio。
- en: we think you are going to love this version on a sync。io。 We are very excited
    for。 you to try it out。 So we have -- sorry， this is the same thing。 So we have
    a lot of type。 improvement。 So the first thing that we have is the self-type。
    This is a small one， but this。 is very useful。 So the idea is that if you have
    a function here that returns an instance。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们认为你会喜欢这个版本的`sync.io`。 我们非常期待。 你尝试它。所以我们--抱歉，这是一回事。所以我们有很多类型。 改进。所以我们首先有的是self类型。这是一个小的，但这。
    非常有用。所以想法是如果你在这里有一个返回实例的函数。
- en: of a class， so for instance， in this class， in this example， this method called
    setScale。 is written in an instance of the class shape。 So before， normally， if
    you type annotate this， code。 instead of self here， you will put the name of the
    class， which in this case is shape。 This unfortunately doesn't play very well
    if you now subclass shape， because if you call。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一个类，例如，在这个类中，在这个例子中，这个名为`setScale`的方法。 是在类`shape`的一个实例中编写的。所以之前，通常，如果你对这个代码进行类型注释。
    这里的self将放置类的名称，在这种情况下是`shape`。 不幸的是，如果你现在对子类`shape`进行子类化，它并不好用，因为如果你调用。
- en: setScale for a subclass， myPIE or other type checkers are going to freak out
    of it because。 they are going to think you are returning shape here instead of
    the subclass。 And then。 I want to play very well。 But now you can basically type
    annotate this kind of code with self and。 it will do what you expect。 If you use
    this in front of subclass， let's say， I don't know， circle。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个子类的`setScale`，我的`PIE`或其他类型检查器会对此感到恐慌，因为。 他们会认为你在这里返回的是`shape`而不是子类。然后。 我想要很好地发挥作用。但是现在你基本上可以用self对这种代码进行类型注释，。
    它会做到你所期望的。如果你在子类面前使用这个，假设，我不知道，圆形。
- en: when you call setScale， it will think that it's a circle of just spec and also
    you。 don't need to type the name of the class over here， which is nice。 Some more
    interesting。 type of improvements is baryotic generics。 So the idea here is that
    you can now do this。 kind of code over here。 So when you are not a genetic， you
    can now put an unpacking star。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当你调用`setScale`时，它会认为它只是一个圆形的规范，并且你。 不需要在这里输入类名，这很好。有一些更有趣的。 类型改进是baryotic泛型。所以这里的想法是你现在可以在这里做这种。
    代码。当你不是一个泛型时，你现在可以放一个拆包星号。
- en: and some type variable。 We have a new one that is called type bar table。 But
    the whole。 idea of the star shape is that now you can assign to this thing a race
    that has multiple。 dimensions。 For instance， here， I am creating two types for
    the height and the width of an， array。 And I can use this shape to match an array
    that has height and width。 But I can， also do this thing。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 和一些类型变量。我们有一个新的叫做`type bar table`。但整个。 星形的想法是，现在你可以将这个东西分配给一个具有多个。 维度的种族。例如，在这里，我为数组的高度和宽度创建了两种类型。
    我可以使用这个形状来匹配一个具有高度和宽度的数组。但我也可以做到这一点。
- en: which has four of them。 So the idea is that this thing over here can。 support
    assignment to things that have multiple dimensions over there。 Interestingly，
    this。 PEP has some consequences on the language。 For instance， now you can do
    this， which before。 it was illegal。 The idea is that now you can unpack in the
    items。 So for instance， I can。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 其中有四个。所以这个想法是，这个东西可以支持赋值给有多个维度的事物。有趣的是，这个PEP对语言有一些影响。例如，现在你可以这样做，而之前这是不合法的。这个想法是现在你可以解包这些项。因此，例如，我可以。
- en: define here a bunch of indexes， one and two。 And I can unpack those in this
    here in this。 one and one， this is equivalent to basically adding zero， one， two
    and minus one。 And if。 you have an interval， it will basically impact the interval
    and access the index。 This is。 not extremely useful。 It's kind of a side effect
    of the other thing。 But we think it's。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里定义一堆索引，分别为一和二。我可以在这里解包这些一和一，这基本上相当于加零、一、二和负一。如果你有一个区间，它将基本上影响区间并访问索引。这不是极其有用的。这有点像是其他事情的副作用。但我们认为这。
- en: actually consistent with the language。 Like there is other places where we allow
    to do。 these things。 And it's just for you to know that it's allowed。 But this
    isn't all the。 actual feature。 The actual feature is the one before。 We also have
    literal string types。 And the idea here is that， for instance， if you have --
    let's say you have a function。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上与语言一致。就像我们在其他地方允许做这些事情一样。这只是让你知道这是被允许的。但这并不是所有的实际功能。实际功能是之前提到的。我们还有字面字符串类型。这里的想法是，例如，如果你有——假设你有一个函数。
- en: called execute that is going to run some query on the database。 So the idea
    is that if you。 annotate the query itself with this literal string type， the type
    checker will complain。 if you pass a string that is not a literal。 For example，
    the second string here is a full。 literal string。 It's not formatted。 So that
    is good。 Because it means that not data from。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 调用执行将在数据库上运行某些查询。所以这个想法是，如果你用这个字面字符串类型注释查询本身，类型检查器会抱怨。如果你传递一个不是字面量的字符串。例如，这里第二个字符串是一个完整的字面字符串。它没有格式化。所以这很好。因为这意味着没有来自。
- en: the user or from weird parts of the system that will allow a squeal injection
    can make。 it to my query。 But if now I go on format my string， either using F
    strings or format。 this is not considered a literal string。 It's considered a
    regular string。 So executing。 the query will error。 There are other uses for this。
    But the security kind of thing is。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 来自用户或系统中奇怪部分的东西可以允许SQL注入，可能会对我的查询产生影响。但如果我现在格式化我的字符串，无论是使用F字符串还是格式化，这都不被视为字面字符串。它被视为一个普通字符串。因此执行查询将出错。还有其他用途，但安全方面的问题。
- en: the most interesting one that is written in the PEP。 But you can go to PEP to
    know how。 this change can actually be useful。 So apart from typing improvements，
    now we have Tomo。 live in the standard library。 This took a while。 But now we
    have it。 So now you can open， you， know。 Tomo files。 And you can also do the same
    thing with strings。 We don't have dumps。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在PEP中写的最有趣的内容。但你可以去PEP了解这个变化如何实际有用。因此，除了类型改进之外，现在我们在标准库中有Tomo。这花了一段时间。但现在我们有了。所以现在你可以打开，你知道的。Tomo文件。你也可以对字符串做同样的事情。我们没有转储。
- en: So you are thinking about the JSON module。 You can load and dump JSON。 We only
    have loads。 The PEP actually describes why you can only read Tomo and not write
    Tomo。 Because writing。 Tomo is kind of a mess。 Especially because people like
    consistent format and what not。 But now you can use this thing。 If you have a
    project of Tomo， you can directly read it。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你在考虑JSON模块。你可以加载和转储JSON。我们只有加载。这个PEP实际上描述了为什么你只能读取Tomo而不能写入Tomo。因为写Tomo有点麻烦。尤其是因为人们喜欢一致的格式等等。但现在你可以使用这个东西。如果你有一个Tomo项目，你可以直接读取它。
- en: with Tomo live in the standard library in 311。 You don't need third party libraries。
    And basically that's it。 We have four three。 So far， here is a lovely photo of
    the language。 summit this year at PyCon。 And this is not only the core of the
    team that attended PyCon。 but also a bunch of people that were in the summit。
    We are very excited for you to try， 311。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 与Tomo一起在311的标准库中。你不需要第三方库。基本上就是这样。到目前为止，我们有四个三。这里是今年在PyCon的语言峰会的一张可爱照片。这不仅是参加PyCon的核心团队，还有一群参加峰会的人。我们非常期待你尝试311。
- en: I think it's going to be the best release ever。 But I'm also the release manager。
    So。 you know what I'm going to say。 So we hope you like it。 [APPLAUSE]。 So I mentioned
    we put up a slide on the internet two weeks ago to assemble some questions。 Because。
    we didn't think with COVID rules， it would be a good idea to hand around a microphone。
    By the way。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这将是有史以来最好的版本。但我也是发布经理。所以，你知道我会怎么说。所以我们希望你们喜欢它。[鼓掌]。所以我提到我们在两周前在互联网上放了一张幻灯片来收集一些问题。因为我们认为在COVID规定下，传递麦克风并不是一个好主意。顺便说一下。
- en: Pablo and I are unmasked close together。 We're both vaccinated， boosted， and，
    we both had COVID。 And still， I'm only comfortable doing this because everyone
    followed the rules。 is wearing masks and everyone is safe。 So thank you。 [APPLAUSE]。
    So we put a slide on and started asking questions of people。 And I don't know
    how many of you。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 巴勃罗和我紧密无防护地在一起。我们都接种了疫苗，进行了加强接种，并且我们都感染过COVID。尽管如此，我之所以感到舒适，是因为每个人都遵守了规则，佩戴口罩，大家都很安全。所以谢谢大家。[鼓掌]。于是我们放了一张幻灯片，并开始询问人们的问题。我不知道你们有多少人。
- en: saw yesterday。 I saw Peter Wang's keynote。 But this--， I don't know。 That's
    not weird。 This was the first， the most upvoted question。 What are the SCs plans
    to put Python in the， browser？
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 昨天我看到了彼得·王的主题演讲。但这个——我不知道。这并不奇怪。这是第一个得到最多支持的问题。SC对将Python放入浏览器有什么计划？
- en: We don't need the plans anymore。 Peter's taken care of it。 Seriously though。
    this is one of those things where it feels like something the Syrian Council，
    should care about。 But we're only making decisions on proposals that other people
    bring to us。 We're not driving the development of Python at this point。 We probably
    could， especially。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不再需要计划了。彼得已经处理好了。说真的，这是一件事情，感觉像是叙利亚委员会应该关心的。但我们现在只是在对其他人向我们提出的提案做出决策。我们并没有推动Python的发展。我们可能可以，特别是。
- en: if we had more core developers and residents。 But at this point， we are not
    making these， decisions。 So I'm really glad that other people are doing the work。
    And we're very happy with。 Christian Heimers' work to include WasmBills in CPython
    and creating a supportive platform。 But we're not the ones making the decisions
    or doing the work。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有更多的核心开发人员和驻场开发人员。但在这一点上，我们并没有做出这些决定。所以我很高兴其他人在做这项工作。我们对Christian Heimers在CPython中包含WasmBills并创建支持平台的工作非常满意。但我们不是做出决定或进行工作的那一方。
- en: So there are very popular questions that has been already actually answered
    many times。 in the conference。 But I will try to do it again。 So is Don Quina
    asked， "So CPython 11。 so it's not a good performance in Premiere of CPython 3。10。
    So how much faster would we， expect？
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 所以有一些非常受欢迎的问题，实际上在会议上已经回答了很多次。但我会再试一次。所以Don Quina问：“那么CPython 11，CPython 3.10的性能不太好。我们期待多快的速度？
- en: '" Well， it depends。 I mean， we are measuring， I think， every time I see the
    same。 Mark Shannon corrects me because it''s actually faster。 So we think we expect
    like 25% on the。 geometric mean of the performance。 But that doesn''t really mean
    anything towards your。 application because as you saw yesterday， it depends on
    what you''re doing。 You''re doing。'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: “好吧，这要看情况。我是说，我们正在测量，我认为，每次我看到的都是一样的。马克·香农纠正我，因为它实际上更快。所以我们认为在性能的几何平均上，预期大约会有25%的提升。但这对你的应用程序并没有实际意义，因为正如你昨天看到的，这取决于你在做什么。你在做的事情。
- en: like number crunching， image change a lot if you're doing faster， sorry， heavy
    object。 oriented code。 So it depends a lot。 But it will be faster for sure in
    most of the cases。 And in 3。12， it will be even faster。 So stay tuned for the
    announcements of 3。11。 I try。 as a realist manager to always keep those numbers
    updated。 And I'm actually going to。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 像数字运算一样，如果你做得更快，图像变化会很大，抱歉，这是重型对象导向代码。所以这在很大程度上取决于情况。但在大多数情况下，它肯定会更快。而在3.12版本中，它会更快。所以请关注3.11版本的公告。我作为一个现实主义经理，总是努力保持这些数据的更新。实际上我也会。
- en: price it down with Mark to just find with this is the best way to communicate
    the。 improvements because people like to know a number。 But yeah， faster。 How
    beneficial has it been to have a developer in residence？ Are there any plans or
    desires。 to look for funding to expand this like having more folks asked by Prudyun？
    It has been a。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 和马克一起把价格压下来，找到最好的沟通方式，以便了解改进情况，因为人们喜欢知道一个数字。但确实，更快。拥有驻场开发人员带来了多大好处？是否有计划或希望去寻找资金来扩大这个，比如让更多人被Prudyun邀请？这一直是一个。
- en: great success to have Ukash as developer in residence。 He's doing a ton of work，
    has a。 lot of positive effect。 And we would love to have three or more developer
    in residence。 So we are looking for funding。 There are other aspects of this。
    We hired Ukash。 He was already。 a core developer。 We didn't explicitly say we
    needed an existing core developer but we。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 非常成功地邀请乌卡什担任驻驻开发者。他正在做大量的工作，产生了很多积极的影响。我们希望能有三名或更多的驻驻开发者。因此我们在寻找资金。这还有其他方面。我们聘请了乌卡什。他已经是一名核心开发者。我们并没有明确表示需要一个现有的核心开发者，但我们。
- en: did have a number of core developers apply。 Even so that the pool of core developers
    who。 are looking for employment or willing to move to the Python software foundation
    is fairly， small。 So there's also the thing we have to consider are we comfortable
    hiring someone。 who's not already a core developer to work on C Python and how
    long will it take them。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 确实有一些核心开发者申请了。即便如此，寻找工作或愿意转到Python软件基金会的核心开发者池相对较小。因此，我们也必须考虑，是否愿意雇佣不是核心开发者的人来为C
    Python工作，以及他们需要多长时间。
- en: to get up to speed and all that。 But it is something we're actively looking
    at and excited。 about as well in the future。 Frank asks us， does the sting counts
    and things that San Luis will be viable for C Python any。 time in the next few
    years？ And if so， does it have a roadmap？ This is an interesting one。 We have
    not discussed this thing in depth。 We are excited about the work for sure。 So。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要赶上进度等等。但这是我们积极关注并对未来感到兴奋的事情。弗兰克问我们，圣路易斯的统计数据和其他东西在未来几年内是否会对C Python可行？如果可以，是否有路线图？这是一个有趣的问题。我们还没有深入讨论这件事。我们肯定对这项工作感到兴奋。
- en: we don't have a sting counts in official answer to this thing。 But it's certainly
    feasible。 Unfortunately， we don't have a roadmap。 This means that we are excited
    about the idea。 We have a lot of questions。 This is a very big change in the past。
    Someone has said that。 probably if there will be any Python forever， this doesn't
    mean that it's going to be Python。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在官方答案中没有关于这件事的具体统计。但这肯定是可行的。不幸的是，我们没有路线图。这意味着我们对这个想法感到兴奋。我们有很多问题。这在过去是一个非常大的变化。有人曾说，如果未来会有任何Python，这并不意味着它会是Python。
- en: for them。 But it's a very big change。 And therefore， it cannot be integrated
    easily， in the core。 Someone needs to put a roadmap。 That is going to be very
    important。 It's even。 more important as the change itself。 Because even if it
    could be a scenario when we are。 super excited about this thing， but there is
    no way to do it， right？ Because not only。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 对他们来说。这是一个非常大的变化。因此，它无法轻易地集成到核心中。需要有人制定一个路线图。这将非常重要。甚至比变化本身更重要。因为即使我们对这件事超级兴奋，但没有办法去做，对吧？因为不仅仅是。
- en: about agreeing with that， it's trying to review those PRs， making sure that
    user code is not。 going to be impacted， ensuring that backwards compatibility
    is preserved as much as we decide。 to that is preserved。 If we can everything，
    if we cannot， which ones。 So right now， we are。 like in a roadmap。 This didn't
    consider the support of the work， I think。 For sure， we。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 关于达成共识，努力审查那些PR，确保用户代码不会受到影响，确保向后兼容性尽可能地保留，这是我们决定保留的。如果我们能做到一切，如果不能，哪些可以。所以现在，我们像是在一份路线图中。这没有考虑到工作的支持，我认为。我们肯定。
- en: would like to see a PEP and discussions。 But unfortunately， we don't have any
    particular。 roadmap right now。 Also， we have been focusing just as a discussion。
    We have been focusing。 on all the PEPs that we have for 311。 Because， as you know，
    after I release the first beta。 next week， there cannot be any more PEPs on 311。
    So we wanted to make sure that everyone。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 希望看到一个PEP和讨论。但不幸的是，我们现在没有任何特别的路线图。此外，我们一直只专注于讨论。我们一直关注311的所有PEP。因为，正如你所知，在我下周发布第一个测试版之后，311上将不再有PEP。因此我们想确保每个人。
- en: that has submitted PEPs， they have been reviewed by the Student Council。 So
    all of our focus。 have been on that。 So now that we have 311 kind of more or less
    set up， we can start discussing。 these kinds of things and how can the three council
    have some and the community to advance。 this work if this is what the community
    wants。 \>\> Bernard asked what happened to HPI。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 提交了PEP的，他们已经被学生委员会审查过。所以我们所有的重点都放在这个上。因此，现在我们有311大致上搭建好了，我们可以开始讨论这些事情，以及三个委员会和社区如何一起推动这项工作，如果这是社区所希望的。
    \>\> 伯纳德问HPI发生了什么。
- en: any other initiative to address this problem？ Now， first of all。 I want to say
    I don't think that's how Bernard usually spells his name。 There's some accents
    involved。 I copied this verbatim out of fairness with all the questions。 from
    the slide。 So it's not my fault。 For those who don't know， HPI is an effort to
    define。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他举措来解决这个问题吗？首先，我想说我不认为这是伯纳德通常拼写他的名字的方式。有一些重音在里面。我是公正起见逐字复制了这个问题。因此这不是我的错。对于那些不知道的人，HPI是一个定义。
- en: a C API for CPython and other Python implementations。 So you can have efficient
    extension modules。 for CPython that already have efficient extension modules that
    will also work well when you recompile。 them with other Python implementations。
    I don't think anything happened to it。 It's still going。 still being developed。
    It's something that takes a long time and it's also something。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 一个针对CPython和其他Python实现的C API。因此，你可以为CPython创建高效的扩展模块，这些扩展模块在用其他Python实现重新编译时也能很好工作。我认为对此没有任何进展。它仍在继续开发。这是一个耗时的过程。
- en: that takes a long time to adopt because we have a lot of extension modules。
    Rewriting。 them is a lot of work。 So this is something that's just going to take
    a very long time。 \>\> So anonymous asked， what does the steering-cals think of
    the process of attracting new contributors。 in general and specifically for minority
    groups？ Well， we think it's super important。 How we're。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要很长时间才能采用，因为我们有很多扩展模块。重写它们工作量很大。所以这件事需要很长时间。
- en: going to achieve this thing？ So we， as the steering-calsil， have this thing
    actually as。 a topic to discuss。 Again， we have been focused on the -- we started
    to discuss this thing。 at the beginning of the year。 We have some ideas， then
    we have all these mountain of pups that。 we need to check and other， like， the
    developer interested in stuff， we have migrations。 But。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如何实现这个目标？所以，作为指导委员会，我们将这个议题列为讨论主题。我们在年初就开始讨论这件事。我们有一些想法，还有很多待处理的事项，我们需要检查，其他开发者感兴趣的事情，以及迁移。
- en: this is certainly on the agenda to keep discussing。 But also， like， many core
    developers are also。 like aware of this thing and they agree that this is a very
    important thing to do。 Some。 of them are actually only mentoring people for minority
    groups。 But we， in general， both。 the steering-calsil and the core of the team，
    I think we believe that this is extremely important。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这肯定在议程上持续讨论。但许多核心开发者也意识到这件事，并同意这是非常重要的事情。他们中的一些人实际上是专门为少数群体提供指导。但我们总体上，无论是指导委员会还是团队核心，我们都认为这是极其重要的。
- en: especially for keeping Python -- for ensuring that Python serves all people
    from different。 backgrounds and ideas and especially for people that are underrepresented
    in the community。 We know that we have a lot to do here， for sure。 But I just
    want to make you understand。 that we think it's very important that we are working
    on that。 Anonymous asked。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是为了让Python能够服务于来自不同背景和思想的人，尤其是社区中代表性不足的人。我们知道在这里还有很多工作要做，但我只想让你明白。我们认为正在为此努力是非常重要的。匿名提问者问。
- en: '"Any uptick of new contributors post-github migration？ Any other GitHub improvements，
    planned？'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: “GitHub迁移后有新的贡献者增加吗？还有其他计划中的GitHub改进吗？
- en: '" I assume this is often about the GitHub issues migration because we moved
    to。 GitHub a number of years ago。 I think we saw an uptick from the original move
    from curial。 to Git on GitHub。 It''s been two weeks -- it''s way too early to
    say anything about GitHub。 issues migration。 As for further improvements， some
    people are excited about new workflows。'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: “我认为这通常是关于GitHub问题迁移，因为我们几年前转移到了GitHub。我觉得从Curial迁移到Git的那次转移后，我们看到了一些增加。距离GitHub问题迁移还不到两周，现在说任何事情都为时已晚。至于进一步的改进，有些人对新工作流程感到兴奋。
- en: new hooks， new robots to do things for us on GitHub issues。 I think we need
    to figure out。 more policy around， as the core developer group， not as the steering
    council， policy around。 how we deal with new bugs， old bugs， bugs that require
    more information or that we can't。 reproduce and that kind of thing， which people
    are absolutely working on。
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 新钩子、新机器人在GitHub问题上为我们做事情的努力。我认为我们需要搞清楚。作为核心开发者组，而不是作为指导委员会，我们需要制定政策，处理新的错误、旧的错误、需要更多信息或无法重现的错误，诸如此类，大家都在积极工作。
- en: Another important thing on this topic is that we have migrated to have issues，
    but we still。 have some rough corners that we are trying to get。 There are things
    that used to work。 on BPO that don't work exactly the same or don't work even。
    It's been just two weeks。 as to how much we need to move。 We still， even before
    adding new stuff， we need to make。
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个话题上另一个重要的事情是我们已经迁移到处理问题，但我们仍然有一些粗糙的地方在努力解决。有些事情在BPO上能正常工作，但现在却不完全一样或甚至无法工作。距今只有两周，关于我们需要迁移多少。我们仍然需要在添加新内容之前进行必要的改进。
- en: sure that most workflows keep working and things that used to work keep working
    here。 We are going to need some time to ensure that we polish everything and everything
    works。 as expected。 In Python， we got better messages。 What far the improvements
    can we do to make it even。 better？ I need to steal from the languages。 That's
    an interesting word。
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 确保大多数工作流程继续正常运行，并且以前能正常工作的事情在这里依旧有效。我们需要一些时间来确保我们完善一切，并且一切都按预期运行。在Python中，我们获得了更好的消息。我们可以做哪些改进，使其更好？我需要从其他语言中学习。这是一个有趣的词。
- en: I find this funny just as a small parent that is like every time when we start
    announcing。 the error messages， like an enormous amount of people say， "Oh， Python
    is still in for， rest。" We are not as team for rest。 Rest still has it。 It's great，
    but like， exactly。 We are not even coping for rest because they are compiler，
    time errors that are actually easier。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得这很有趣，作为一个小插曲，每次当我们开始宣布错误信息时，很多人都会说：“哦，Python还是在为rest。”我们不是rest的团队。Rest仍然存在。它很棒，但，确切地说。我们甚至没有为rest而努力，因为它们是编译时错误，实际上更容易。
- en: Anyway， you can expect more for sure。 This is an idea that we see that a lot
    of people。 really like and they find it super useful。 We are super happy to keep
    working on this。 I think the best way you can help us make better messages is
    telling us what do you think。 is a situation and an existing error that makes
    your life very difficult。 Both as a user。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 不管怎样，你肯定可以期待更多。这是一个我们看到很多人真的很喜欢并觉得超级有用的想法。我们非常高兴能继续对此进行研究。我认为你能帮助我们改善信息的最佳方式是告诉我们你认为的情况，以及一个让你生活非常困难的现有错误。作为用户来说，都是如此。
- en: or if you especially are teaching Python to people that are learning programming
    for the。 first time。 Knowing those errors that are especially tricky or that people
    struggle with。 it is super important。 As core developers， we are a bit biased
    over super fancy problems。 and things that we think are super important and even
    we like to tackle the most difficult， things。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是如果你是在教Python给第一次学习编程的人。了解那些特别棘手的错误，或者人们所挣扎的地方是非常重要的。作为核心开发人员，我们对超级复杂的问题有些偏见，认为它们非常重要，甚至喜欢解决最困难的事情。
- en: Sometimes we spend a lot of time with things that maybe are not that useful
    for people。 Even if you don't know how to even do error messages， just open an
    issue and say， "Look。 I teach Python every Monday or something like that and at
    this thing always takes me an。 hour to spend to people。" Even if it's a syntax
    error or if it's not。 That will be super useful。
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们在一些可能对人们并没有太大用处的事情上花费了很多时间。即使你不知道如何处理错误信息，也可以打开一个问题并说：“听着，我每周一教Python，或者其他类似的事情，这件事总是让我花费一个小时。”即使是语法错误，或者不是。那将是超级有用的。
- en: for us to know。 We may need to tell you that that is not possible but some of
    them and many。 of them actually is things that we can tackle or improve in certain
    ways。 At least tell us。 what do you think we can improve so we can think about
    it。 Bernad also asked。 "Are the core devs generally happy with a steering console
    election system？
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能需要告诉你，那是不可能的，但其中一些，很多其实是我们可以以某种方式解决或改善的。至少告诉我们，你认为我们可以改进什么，这样我们可以考虑一下。Bernad也问过：“核心开发人员对指导委员会选举系统一般满意吗？”
- en: Would any of you like something to change on it？" The steering console election
    system， we。 elect a new steering console after every major Python release。 After
    3。11。0 is released， we'll。 elect the next steering console and the entire steering
    console gets replaced。 A lot of us。 rerun and a lot of us get reelected at least
    the last couple of years but there's always。
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你们中有人希望对此进行更改吗？“我们每次在主要的Python发布后都会选举一个新的指导委员会。在3.11.0发布后，我们将选举下一个指导委员会，并且整个指导委员会将被替换。很多人重新当选，至少在过去几年中，但总是有。
- en: the risk that the entire steering console gets replaced。 Up until last year
    that wasn't a。 major concern of mine because Eva was part of the weekly meetings
    and could provide continuity。 We kind of lost that right now。 I'm not really worried
    that this entire steering console is。 going to get booted out but in the future
    that might， you know， we don't know what's。
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 整个指导委员会被替换的风险。直到去年，这对我来说并不是一个重大担忧，因为Eva是每周会议的一部分，能够提供连续性。我们现在有点失去这一点。我并不真的担心整个指导委员会会被踢出，但在未来，这可能会发生，你知道，我们不知道。
- en: going to happen。 Personally， I would like to see two or three-year terms and
    then overlapping。 terms which we've done on the PSF board of directors a couple
    of years ago which I think。 worked out really well。 That also allows people to
    take more risky votes。 If they know that。 there are three people going to be on
    the board who aren't up for re-election that they。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 将会发生。就我个人而言，我希望看到两到三年的任期，然后是重叠的任期，我们在几年前的PSF董事会中做过，我认为效果很好。这也允许人们做出更冒险的投票。如果他们知道有三个人会在董事会中，不会再竞选，他们。
- en: approve of then they can take a risk at a minority candidate for the current
    election。 I think that's what would happen but that's just my feeling and in the
    end it's not the。 steering console that decides these things。 It's the core developers
    so there needs to。 be discussion among core developers on all of this。
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果他们认可，那么他们可以冒险支持当前选举的少数候选人。我认为这就是会发生的，但这只是我的感觉，最后并不是指导委员会决定这些事情。是核心开发者，因此在所有这些事情上需要进行核心开发者之间的讨论。
- en: By design the steering console cannot change the document where it says how
    the steering。 console works which makes sense。 Another thing I know this guy has
    a lot of questions。 Typing。 and packaging pebs have been delegated down to BDFLs。
    Is this working out well and will。 any other was followed？ I mean packaging pebs
    are delegated。 We have the packaging and。
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 从设计上看，指导委员会无法更改文档中关于指导委员会如何运作的内容，这很有道理。另一个我知道的事情是，这家伙有很多问题。类型和包装pebs已被委托给BDFL。这运作得好吗？其他的会被跟随吗？我的意思是包装pebs被委托了。我们有包装。
- en: authorities that is how it's going。 The fact with packaging is it's separate
    from Python language。 They use the pebs system but， the pebs don't affect Python
    or C Python。 They only affect the packaging。 Typing is not fully delegated。 We
    have delegated some type of pebs but for instance I think。
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 当局就是这样运作的。包装的事实是，它与Python语言是分开的。它们使用pebs系统，但pebs并不影响Python或C Python。它们只影响包装。类型并没有完全委托。我们已经委托了一些类型的pebs，但例如，我认为。
- en: almost all of the ones that I just saw here were decided by the steering console
    especially。 they touched the syntax。 And especially the ones that were rejected。
    And a bunch of them that were rejected as well。 I think it has been working really
    well， so far。 I mean I don't know that much about the packaging world。 I see that
    some people。
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我刚刚在这里看到的几乎所有内容都是由指导委员会决定的，尤其是涉及到语法的部分。尤其是那些被拒绝的内容，以及一大堆被拒绝的内容。我认为到目前为止，这运作得非常好。我的意思是，我对包装世界了解不多。我看到一些人。
- en: have some restraints maybe but so far it has not been abundantly a bad idea。
    For typing it has worked pretty well when we delegated。 And this is because even
    if the steering console we are very technical people。 We are not expressing， typing
    and typing all of their artists。
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 可能有一些限制，但到目前为止，这并没有显得特别糟糕。对于类型来说，当我们委托时，它运作得相当不错。这是因为即使在指导委员会中，我们也是非常技术性的人。我们并没有表达，类型和他们所有的艺术家。
- en: It's always good to bring people that really know。 about this stuff or to delegate
    if we think it's just a particular person and it's safe。 to delegate。 But this
    is an interesting topic。 We are thinking about how can we leverage。 better the
    community and the core developer community to help us。 Because what happens。
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 总是很高兴能带来真正了解这方面的人。或者如果我们认为只是某个人，并且安全的话，委托他们。但这是一个有趣的话题。我们在考虑如何更好地利用社区和核心开发者社区来帮助我们。因为发生的事情。
- en: sometimes is that we have these many pebs and we can't review them all in time
    so the。 delegation is something that we are always looking at。 But we are also
    careful to make。 sure that decisions that affect more areas than just typing are。
    We make sure that the。 steering console ensures that the whole community is represented
    when the decision is made。 The。
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候我们有这么多pebs，我们不能及时审查所有的。因此，委托是我们一直在关注的事情。但我们也小心确保影响的不仅仅是类型的决策。我们确保在做出决定时，指导委员会确保整个社区都被代表。
- en: answer will be I think it has been working quite nicely。 What do you think？
    Yeah I agree。 We are pretty much out of time。 We had a couple more questions but
    it was， one from my manager。 I can answer him directly。 So thank you all and if
    you have any more questions。
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 答案是我认为它运行得相当不错。你觉得呢？是的，我同意。我们差不多没时间了。我们还有几个问题，但有一个是来自我经理的。我可以直接回答他。所以谢谢大家，如果你们还有其他问题。
- en: '![](img/175c2853e461acd8a351a8e44cb0f609_5.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/175c2853e461acd8a351a8e44cb0f609_5.png)'
- en: then Pablo and I are around at the conference。 [Applause]。
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我和巴勃罗在会议上。 [掌声]。
- en: '![](img/175c2853e461acd8a351a8e44cb0f609_7.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/175c2853e461acd8a351a8e44cb0f609_7.png)'
- en: Hey I was in one of those pictures。 That's kind of cool。 All right thank you
    so much to。
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 嘿，我在其中一张照片里。那真不错。好的，非常感谢。
- en: '![](img/175c2853e461acd8a351a8e44cb0f609_9.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/175c2853e461acd8a351a8e44cb0f609_9.png)'
- en: Thomas and Pablo。
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 托马斯和巴勃罗。
