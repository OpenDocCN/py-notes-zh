- en: P77：Talk - Tadeh Hakopian_ Programming Your Way up a Skyscraper   Python in
    the Buil - VikingDen7 - BV1f8411Y7cP
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'P77：演讲 - Tadeh Hakopian_ 用Python编程建造摩天大楼 - VikingDen7 - BV1f8411Y7cP  '
- en: Hello and welcome。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '你好，欢迎大家。  '
- en: '![](img/9bc27498caebbe4a1cec728f064dce63_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9bc27498caebbe4a1cec728f064dce63_1.png)'
- en: '![](img/9bc27498caebbe4a1cec728f064dce63_2.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9bc27498caebbe4a1cec728f064dce63_2.png)  '
- en: Our next presentation is about to start and for this presentation we have Tadehakopian。
    who is going to be talking about programming your way up Skype scrapper Python
    in the， B-word。 Help me welcome Tadeh with a round of applause。 By the way if
    you guys want to get a preview of the presentation before I get started。 if you
    want to keep catch up， I have the QR code and the tiny URL at PyARC and I'll have。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '我们的下一个演讲即将开始，这次演讲的嘉宾是**Tadehakopian**，他将谈论如何使用Python编程创建Skype爬虫。让我们用热烈的掌声欢迎Tadeh。顺便说一下，如果你们想在我开始之前预览一下演讲，或者想跟上进度，我在PyARC有二维码和短网址。  '
- en: it again at the end。 Let's get started。 A little bit about me， Tadehakopian，
    the program， manager。 background architecture， and an architecture engineering
    construction using， data， VR workflows。 teaching people about all these things，
    low code， Python coding for， a couple of years now。 In my experience one thing
    that was a big deal to me is that Python， makes it possible。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '我会在最后再提一次。让我们开始吧。我是**Tadehakopian**，程序经理，背景是建筑以及使用数据和虚拟现实工作流程的建筑工程。多年来，我一直在教人们这些知识，低代码、Python编程。对我来说，Python的一个重要特点是它的可能性。  '
- en: This is a showcase of how Python can support architects and design， in a lot
    of different ways。 As we talk about these examples and I go over them， consider，
    how you use your build space。 your environment around you， how you interact with
    it， and。 consider what it takes to get there as far as the design intent and making
    the concept。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '这是一个展示Python如何以多种不同方式支持建筑师和设计的案例。在我们讨论这些例子时，请考虑一下你如何使用你的建筑空间、你周围的环境以及你与它的互动，并思考实现设计意图和概念所需的条件。  '
- en: into reality and the challenges they're in。 We get architects and architects。
    People think architecture is a crowd of systems， pattern， languages， what have
    you。 That's a big part of it。 There's a lot of people who have a， CS architecture
    background。 But there's also architecture。 These examples are floor plans。 They
    have a common ground。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '将想法变为现实以及其中的挑战。我们得到的是建筑师和建筑师。人们认为建筑是系统、模式、语言等的集合，这确实是很大一部分。很多人拥有计算机科学的建筑背景，但还有建筑。这些例子是楼层平面图，它们有共同的基础。  '
- en: The reason there's so much jargon shared between them is that。 there was a source
    material from the 60s and 70s from a guy called Christopher Alexander。 who was
    a traditional architect who talked about design patterns。 He's like a pattern，
    language。 He's like， you know， you can repeatedly use a pattern for designing
    a building， floor， plan。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '它们之间有这么多术语的原因是，来源于60年代和70年代的一个叫做**克里斯托弗·亚历山大**的人，他是一位传统建筑师，谈论设计模式。  '
- en: using windows in a certain arrangement。 That makes sense for a small building，
    for。 a apartment block， for a city。 And you can just scale this up。 And some computer
    science。 students picked up on this in the 70s。 And said， hey， this is a great
    idea。 So they borrowed。 a lot of his concepts and created the idea of design patterns，
    which is where you get。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '使用特定排列的窗户。这对于小建筑、住宅楼或城市来说是合理的。而且你可以将其放大。一些计算机科学学生在70年代注意到了这一点，并说，“嘿，这是个好主意。”所以他们借鉴了他的许多概念，创造了设计模式的概念，这就是你获得这些建筑思想与计算机科学结合的地方。  '
- en: all these ideas of architecture into computer science。 There's actually a lot
    of shared knowledge。 between two groups as a lot of crossover appeal。 So there's
    already a lot in common。 And talk。 about architecture。 This is what people usually
    think about what architects do。 They think。 about a guy drawing on a board， coming
    up with ideas， being artistic， which is a big， part of it。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '实际上，两个群体之间有大量共享知识和交集，所以已经有很多共同之处。谈到建筑时，人们通常会想到建筑师的工作。他们想到一个人在板子上画画，提出创意，充满艺术感，这确实是一个重要的部分。  '
- en: But these days， that would be more of a design sketch。 Whereas back in the，
    day。 they would just spend all day drawing。 They only need to do like 20 drawing
    sheets。 to get the whole building across a couple of sides， a couple of plans，
    and you're good， to go。 These days need a couple thousand drawings to get anything
    done。 So we moved on from this。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 但如今，这更像是一个设计草图。而在以前，他们会整天画图。他们只需要做大约20张图纸，就能在几面、几种方案中传达整个建筑，而现在完成任何事情需要几千张图纸。所以我们已经从这种方式发展了。
- en: to something like this。 This is kind of how we work today。 It's not just a two-dimensional，
    image。 Our buildings are fully 3D realized。 And not just in the plain 3D geometry。
    It includes。 the elevation of buildings， the geometry， every single account of
    the doors， windows， cross。 square footage， volumes of the walls， so forth。 So
    a lot of data is embedded into how we work。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们今天的工作方式。这不仅仅是一个二维图像。我们的建筑完全以3D实现。不仅仅是简单的3D几何，它还包括建筑的高度、几何、每个门、窗的数量、面积、墙体的体积等等。因此，大量数据嵌入在我们的工作中。
- en: today。 So it's not just an image or an example。 It's the real data。 And now
    that we have this。 data-rich format， we can have an easier time accessing it。
    It was before it was literally。 just sketching and drawing and just not very useful
    data。 And this system for reference。 is called building information modeling。
    It takes the design intent， geometry and data。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 今天。因此这不仅仅是一个图像或示例。这是真实的数据。现在我们有了这种数据丰富的格式，可以更容易地访问它。之前，字面意思上只是草图和绘图，并不是很有用的数据。这个系统称为建筑信息建模。它提取设计意图、几何和数据。
- en: and put it together into a common data environment where we can have access
    to all this at once。 and not have to have different ways of storing the information。
    And it's just basically a。 relational database。 All you saw there is just tables
    connecting to each other。 And this。 is how it works in the world today。 We use
    some software。 I'll just use the one that's。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 并将其整合到一个通用数据环境中，以便我们能够同时访问所有这些信息，而不必以不同的方式存储信息。基本上，这就是一个关系数据库。你看到的只是相互连接的表格。这就是当今世界的运作方式。我们使用一些软件。我将以在建筑信息建模（BIM）领域非常常见的Revit作为参考。
- en: very common just as a reference in this world of building information modeling，
    BIM， Revit。 It's like billions of people use it。 So there's other ones， but we'll
    just use this as reference。 today， which itself has the 3D modeling capability
    and databases， which can give you something。 like an elevation。 It'll just create
    drawings。 You probably， if you had been in a building。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 像数十亿人使用的这个软件。因此还有其他的选择，但我们今天就以这个为参考，它本身具有3D建模能力和数据库，能够提供诸如高度图等功能。它会生成图纸。如果你曾经在一座建筑中。
- en: of any kind that's either been renovated or built around up in the last 10 years，
    that's。 probably how they put it together。 So it's a lot more data-rich and accessible
    than it's。 ever been before。 But in order to access that， we need some special
    tools。 And this。 plaid-looking thing here is called Dynamo。 It's a low-code solution
    that connects the。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 任何在过去10年内被翻新或新建的建筑，可能就是这样组合起来的。因此，这比以往任何时候都更丰富和可获取。但为了访问这些，我们需要一些特殊工具。这种看起来像格子布的东西叫做Dynamo。这是一个低代码解决方案，可以连接到类似这样的东西。
- en: data and geometry from these BIM solutions so we can manipulate it and get some
    custom。 workflows out of it。 And it's as simple as this。 You might have seen something
    like this， before。 Node-grad， for example， is the one that's pretty popular out
    there。 It's just。 a graph of nodes connecting each other with wires。 And it's
    basically your inputs， process， outputs。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 从这些BIM解决方案中提取数据和几何形状，以便我们可以操作它并获得一些自定义工作流程。简单来说，你可能见过类似的东西。比如，Node-grad是一个在外面相当受欢迎的例子。它只是一个节点图，通过线连接在一起。基本上是你的输入、处理和输出。
- en: low-code or no-code solutions。 And that's what Dynamo looks like。 And you can。
    use it to connect to the Revit API。 And you could do anything like do arithmetic
    operations。 You could put two numbers together and get a result。 But you can go
    further with it。 You。 can actually use it for working with geometry。 So you can
    draw a line in your model， select。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 低代码或无代码解决方案。这就是Dynamo的样子。你可以用它连接到Revit API。你可以进行算术操作。你可以将两个数字相加并得到结果。但你可以进一步操作。你实际上可以用它来处理几何。因此你可以在模型中绘制一条线，选择。
- en: it here and actually figure out things like how do any points I need on the
    line， especially。 something like this with a curve。 You can just put the integers
    in there as a slider。 have a code block， space amount， and you get a result and
    you can input that in your model。 Which is really neat because you don't have
    to like sit there and try to figure out yourself。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上弄清楚像在这条线上需要多少个点，特别是像这样的曲线。你可以把整数放在那里作为滑块。有一个代码块，空间量，然后你会得到一个结果，你可以将其输入到你的模型中。这非常方便，因为你不必坐在那里自己去弄明白。
- en: and draw it out or it takes forever。 So this is a really cool automation technology。
    It's。 visual on spot and you can see the results。 And we go further with it。 I
    can create something。 like a floor plan。 I say a rectangular floor plan and I
    left there like 30 feet and 60 feet。 And I just tie in my XYZ coordinates for
    four corners。 And on the bottom there I have my。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将其绘制出来，或者会花费很长时间。因此，这是一项非常酷的自动化技术。它是实时可视化的，你可以看到结果。我们进一步扩展。我可以创建一些像平面图的东西。我说是一个矩形平面图，我设定长
    30 英尺和 60 英尺。我只需将四个角的 XYZ 坐标绑定在一起。在底部我有我的。
- en: different kinds of materials。 Curtain wall and levels， how many levels I want
    and a concrete。 slab at six inches。 I connect the dots on that rectangular corded
    set to create my shape and。 then I embed the types of equipment I want on there
    and materials to get some output of。 floors and walls and levels。 And we go from
    this geometry preview to this result。 That's。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 不同种类的材料。幕墙和楼层，我想要多少层，以及六英寸的混凝土。 我连接这些矩形有线集上的点来创建我的形状，然后我嵌入我想要的设备类型和材料，以得到一些地板、墙壁和层数的输出。我们从这个几何预览到这个结果。这是。
- en: about 70 stories of a tower。 So we just built our skyscraper in like two seconds。
    It's that， quick。 If I did that manually it would take me an hour maybe two。 So
    it's pretty cool。 results you can do with Dynamo。 And you can also do some unconventional
    things。 You can。 take these kind of coblocks， you can just come up with a wavy
    pattern on your wall。 It could。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 大约 70 层的塔楼。因此我们只用了大约两秒钟就建好了我们的摩天大楼。就是这么快。如果我手动去做，可能需要一个小时，甚至两个小时。因此，使用 Dynamo
    可以得到非常酷的结果。你也可以做一些非常规的事情。你可以。利用这些组合块，随意在墙上设计一个波浪图案。它可能。
- en: put some art on it。 If you want to do something a little unique and again you
    can be played。 all of it。 And you don't have to be an expert in coding to use
    it。 And also you can just。 preview geometry。 You want to play around with， connect
    things， you know just see how things。 play out。 Which is really neat if you're
    kind of into that whole touchy feely kind of molding。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面放一些艺术。如果你想做一些独特的事情，再次你可以进行所有操作。你不必是编程专家就能使用它。此外，你可以预览几何图形。你想玩弄的，连接事物，你知道，看看事情是如何发展的。如果你喜欢那种动手做的感觉，这真是太好了。
- en: clay idea which a lot of designers are。 Not too comfortable with just visual
    textual code。 But you might be asking this is all cool。 Great。 What was happening
    with Python？ Somebody， there。 It also has a Python script node。 Within it。 This
    was my kind of gateway into the world。 Python years ago。 But I was really wanting
    to use it but I had no way using it。 It works。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 粘土概念，很多设计师对此不太熟悉，仅仅依靠可视化文本代码。但是你可能会问，这一切都很酷。太好了。那 Python 又是怎么回事？某人那里。它里面也有一个
    Python 脚本节点。这是我多年前进入 Python 世界的入口。但我真的想用它，但我没有办法使用它。它在这里工作。
- en: You can do anything with Python from those parts but Dynamo did have one。 It
    has a little。 IDE in it。 You just import the runtime。 You import the geometry
    library that comes with。 Dynamo software。 And you have an input node。 So you have
    to have a wire coming in。 And you。 have an output node。 It's a little different
    from your typical Python script。 Otherwise。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用 Python 完成那些部分的任何事情，但 Dynamo 确实有一个。它内置了一个小型 IDE。你只需导入运行时。你导入随 Dynamo 软件附带的几何库。然后你有一个输入节点。所以你必须有一根电线连接进来。然后你有一个输出节点。这与典型的
    Python 脚本有点不同。否则。
- en: very similar concept。 And what's great about it， you don't have to use the API。
    You don't。 have to know anything about the SDK。 You could just use this Python
    script plus the Dynamo。 script to get things into your database。 And that API
    for Revit is a beast。 It's not user， friendly。 And it's nice to get around it。
    So instead of using all that， you can just。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 是一个非常相似的概念。最棒的是，你不需要使用 API。你不需要了解 SDK 的任何内容。你只需使用这个 Python 脚本加上 Dynamo 脚本，就可以将数据放入数据库。而
    Revit 的 API 是一个庞然大物。它并不友好。能够绕过它真不错。因此，与你使用的所有这些相比，你可以。
- en: run it with a Python script in Dynamo。 And it uses iron Python or seed Python
    at this point。 as for implementation。 So I can give you an example。 We can just
    do a loop to make a bunch。 of stuff。 And in this case， this happens all the time。
    It's a keystroke。 You can get things。 into your model real quick， whatever you're
    trying to build。 So even with a low-code script。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在Dynamo中使用Python脚本运行它。此时它使用的是Iron Python或Seed Python。关于实现，我可以给你一个示例。我们可以做一个循环来制造一堆东西。在这种情况下，这种情况时常发生。只需一个按键，就可以快速将东西放入你的模型中，无论你想构建什么。因此，即使是低代码脚本。
- en: it will take me a little bit of time to create a loop。 Because I'm saying， okay，
    how can。 I get some coordinates going on？ There's an example of a little script
    we have here。 where we just import our runtime environments， the geometry。 And
    then also want to write into。 Revit。 So I have to import the Revit stuff in here。
    And all I'm doing is saying， whatever。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个循环需要我花一点时间。因为我在想，好的，我该如何获取一些坐标呢？这里有一个我们的小脚本示例。在这里，我们只是导入我们的运行环境，几何形状。然后还想写入Revit。因此，我必须在这里导入Revit的内容。我所做的就是无论是什么。
- en: family I want to put in there， family being just the object you want to put
    in there， create。 some coordinates。 X， Y， Z， Z， Z， Z， Z， Z， Z， and give me an
    output list。 So it's a X range。 at 0 to 100 feet in 20 foot increments， destined
    the for loop for Y and that X range， same thing。 0 to 120。 And then Z in that
    range。 So I get my X， Y， Zs at however many intervals and。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我想放进去的族，族只是你想放进去的对象，创建一些坐标。X，Y，Z，Z，Z，Z，Z，Z，Z，并给我一个输出列表。所以这是一个X范围，范围是从0到100英尺，间隔20英尺，Y的循环也是如此，X范围同样是从0到120。而Z也在那个范围内。所以我得到了我的X，Y，Z，按照所需的间隔。
- en: however many steps。 And then I spit out a value of point by coordinates and
    X， Y， Z。 And I say。 okay， the column is going to be the family instance times
    the， at the point。 by coordinates and then append a column to that。 That's it。
    So that's the entirety of， the effort。 So I could take something like that， put
    it into the ID for the script and， I push out all that。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 设定任意步骤。然后我输出一个点的坐标值，X，Y，Z。我说，好吧，柱子将是族实例乘以这个，按坐标点，并将一个柱子附加到那。就是这样。所以这就是所有的努力。因此我可以拿一些这样的东西，放入脚本的ID中，然后输出所有内容。
- en: So I get without using a bunch of like nodes and wires and all that。 I have
    the entire geometry listed right there in front of me。 Which is really neat because。
    I can handle this off to just about anybody， if they don't know anything about
    coding or， Python。 just change those numbers。 They're good enough。 It's like，
    yes， just use the numbers。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我在不使用大量节点和电缆的情况下，整个几何形状就列在我面前。这真的很酷，因为我可以将这件事交给任何人，如果他们对编码或Python一无所知，只需更改那些数字。他们就可以了。没错，只需使用那些数字。
- en: change them and you can figure out the rest there。 So that's really easy to
    read。 It's。 compact and it's just nice because you can take that and actually
    push that into your， model。 And recently I've done this where I had to do this
    exact same thing like I don't， know， 6，000 times。 And I did not want to manually
    do that 6，000 times or any other way。 This is， just a quick like。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以更改它们，并且可以在那里解决其余问题。所以这真的很容易阅读。它紧凑而且很好，因为你可以将其推送到你的模型中。最近我做过这件事，我不得不做相同的事情大约6,000次。我不想手动做这6,000次或其他任何方式。这只是一个快速的方式。
- en: as long as you know your range， it will spit out everything pretty cleanly。
    So it's kind of things you can do here with some basic scripting and examples
    that we。 can't easily attain even with those low code nodes。 And you can take
    it further。 You can。 put everything in the script。 If you know what you want，
    you can just assign say with and。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 只要你知道你的范围，它就会相当干净地输出所有内容。这是一些你可以通过基本脚本和示例做到的事情，甚至连那些低代码节点也无法轻易实现。你可以进一步操作。如果你知道自己想要什么，你可以直接分配说与。
- en: length parameters and have an origin point， have an axis and tell to turn the
    axis and。 you get this cool twisting tower effect。 So this skyscraper I had before，
    which is like。 what are semi levels。 If I were to use those nodes that will string，
    that will take a minute。 But I can use this to just say twist it and twist it
    does。 And you can have a lot of fun， with this。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 长度参数并有一个原点，设定一个轴并告诉它转动轴，你会得到这个很酷的扭转塔效果。之前的这个摩天大楼，像是。什么是半层？如果我使用那些节点来连接，这会花费一段时间。但是我可以使用这个来直接说扭转它，扭转它就行。你可以在这个过程中获得很多乐趣。
- en: And again， it's pretty easy to read。 There's nothing really crazy about that。
    They can get longer of course， but these are just compact examples。 This is an
    example of。 just very easy accessible use of Python in the design world。 And you
    can take it further。 You can use examples of how you can do something as complicated
    as having these array of steel。
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这非常容易阅读。其实没什么疯狂的。它们当然可以更长，但这些只是紧凑的示例。这是一个关于在设计领域轻松使用Python的示例。你可以进一步使用它。你可以参考一些复杂的示例，比如如何处理这些钢材数组。
- en: curters and beams aligned in a weird way。 You can use the script to help you
    to create。 that as well。 Otherwise， it would be a bit of an effort。 Some of our
    software is not very。 friendly to change。 So this is great to have something like
    this between the low code solution。 and the code solution to create geometry that
    we can use for some cool projects。 And you can。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 梁和柱以奇怪的方式对齐。你也可以使用脚本来帮助你创建这个。否则，这将需要一些努力。我们的一些软件对变化并不太友好。因此，在低代码解决方案和代码解决方案之间拥有这样的东西来创建几何形状是非常好的，我们可以用它来进行一些酷炫的项目。你也可以。
- en: take it even further。 This example here， I don't have to link it。 It's this
    whole sample。 of how you make a train station canopy with these kind of tools
    very quickly。 So you can。 manipulate all the diamond shapes you see here without
    having to spend literally like， a month。 a month， not the old fashioned way。 So
    these are kind of possibilities we have。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 更进一步。这个示例我不需要链接。这是一个如何使用这些工具快速制作火车站天篷的完整示例。所以你可以操控所有你在这里看到的菱形，而不必花费一个月，真的是一个月，而不是老式的方式。因此，这些是我们现在拥有的可能性。
- en: now with Python and all these other solutions that we didn't have even ten years
    ago。 And。 that encouraged me to make my own course about it。 This was a couple
    years ago and that I。 made my own course。 I learned about it。 I studied it and
    I created my own course about。 how you can do all this stuff in with Python， with
    Dynamo in this environment。 So I can show。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Python和这些其他解决方案，这在十年前甚至是不存在的。这促使我创建了自己的课程。这是几年前的事，我制作了自己的课程。我学习了它，研究了它，并创建了关于如何在这个环境中使用Python和Dynamo做所有这些事情的课程。所以我可以展示。
- en: other people in design industry how they can use it for all sorts of different
    purposes。 And of course， like anything else with code， you do have to debug it。
    That's what happens。 when things don't work when you have errors and warnings，
    get those yell boxes。 So you're。 not free from errors and all that。 It's part
    of the reality of any coding。 But it's a pretty。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 向设计行业的其他人展示他们如何将其用于各种不同的用途。当然，像其他任何代码一样，你确实需要进行调试。当事情不工作时，就会发生这种情况，出现错误和警告，弹出那些黄色框。因此，你并不是完全免于错误。这是任何编码的现实之一。但这其实是相当。
- en: fun learning experience with this because you see your results。 Either you have
    some crazy。 shapes that shouldn't happen or you have way too many objects or not
    enough。 So it's。 kind of fun to see those results pop up from you。 It's very encouraging。
    It's a very good。 experience for first-term learners。 And you might ask， what
    about other things？ What。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个学习体验非常有趣，因为你可以看到你的结果。要么你会得到一些不应该出现的奇怪形状，要么你会得到太多的对象或不够的对象。因此，看到这些结果从你面前浮现出来是挺有趣的。这非常鼓舞人心。对于初学者来说，这是一次非常好的体验。你可能会问，其他事情呢？什么。
- en: about drawings？ Well， here's the thing。 Everything we just saw was just the
    Dynamo solution which。 comes with the right software。 There's a whole community
    working with Python to create their。 own solutions。 This， for example， is called
    Pyrebit。 It's a rapid application prototyping， solution。 The idea here is that
    you can， if you really want to， you can skip all that。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 关于绘图？好吧，事情是这样的。我们刚才看到的一切只是Dynamo解决方案，它附带了正确的软件。整个社区正在利用Python创建他们自己的解决方案。比如，这个叫做Pyrebit。它是一个快速应用原型解决方案。这里的想法是，如果你真的想，你可以跳过所有这些。
- en: stuff with low code and Dynamo just have this sit on top of the software and
    you instead。 have to worry about C# and the SDK and all that。 You just run with
    this Pyrebit solution。 which is built on another open source solution called a
    Python wrapper。 So the whole community。 out there， nobody really wants to use
    the SDK for Rebit。 That's how badly you want to。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 低代码和Dynamo的东西，只需将其放置在软件之上，你就不必担心C#和SDK等等。你只需使用这个基于另一种开源解决方案（称为Python封装器）的Pyrebit解决方案。因此，整个社区，没有人真的想使用Rebit的SDK。就是这么迫切。
- en: get around is。 It's very painful。 So everybody just kind of made their own solutions。
    So Pyrebit。 was on project， the RPW， the Python wrapper was another project and
    they just put their。 heads together and made this。 And what's cool is there's
    a whole tool bar that does a lot。 of automation for you out of the box and you
    can make your own tools。 And people have been。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 绕过它是非常痛苦的。所以大家基本上都做了自己的解决方案。Pyrebit是一个项目，RPW，Python封装是另一个项目，他们把头凑到一起做了这个。酷的是，还有一个工具栏，可以为你自动化很多事情，开箱即用，你可以制作自己的工具。人们一直在。
- en: doing this using these solutions for a couple of years now。 It's been great
    because you。 can take like inside of your software。 You don't have to use the
    low code environments。 directly there。 You can share it with your coworkers as
    an application。 It's all kind。 of prepackage and batteries included for you。 And，
    you know， it looks like this。 That's。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经使用这些解决方案做了几年。这真的很棒，因为你可以在你的软件内部操作。你不必直接使用低代码环境。你可以将它作为应用程序与同事分享。这一切都是预先打包好的，电池也包含在内。而且，你知道，它看起来是这样的。这就是。
- en: the monstrous API nobody wants to use。 You still have to learn how to use it。
    A fun， story。 This website here is actually another open source project called
    Rebit API docs that。 somebody else made because the API documentation that the
    developers released was really bad。 So this guy basically put it online and the
    developers then use it themselves to get out。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 那个没人愿意使用的可怕API。你仍然需要学习如何使用它。有趣的故事。这个网站实际上是另一个开源项目，叫做Rebit API文档，某人做的，因为开发者发布的API文档真的很糟糕。所以这个家伙基本上把它放到了网上，开发者们随后自己也使用它来获取信息。
- en: their own documentation for different versions of the software。 So that's an
    open source solution。 to figure out all the code samples。 And then you can use
    it。 It's kind of hard to read。 That's Python based， not C# that you can use to
    create your own applications to do cool。 things like edit unconventional shapes
    or weird shapes and things you can't do out of the。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 他们为不同版本的软件提供了自己的文档。所以这是一个开源解决方案，可以了解所有的代码示例。然后你可以使用它。阅读起来有点困难。这是基于Python的，而不是C#，你可以用它来创建自己的应用程序，做一些很酷的事情，比如编辑非常规形状或奇怪的形状，以及一些你无法直接做到的事情。
- en: box or you have to spend a lot of money on a third party solution。 So now you
    can just。 directly edit with Python into the model which is great。 And if I say
    I created it， it works。 I can share with anybody else all for free。 And we also，
    stepping out of all this other。 BIM software， we have Blender， the very popular
    software general modeling。 There's a lot of。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要么是使用开箱即用的工具，要么就是必须花很多钱在第三方解决方案上。所以现在你可以直接用Python编辑模型，这真是太棒了。如果我说我创建了它，它就能工作。我可以免费分享给任何人。而且我们也跳出了所有其他的BIM软件，我们有Blender，这是一款非常受欢迎的通用建模软件。这里有很多。
- en: cool things。 And everybody， it's like one of the most popular three modeling
    software， out there。 You can use it for animation， industrial design， you need
    it。 And it's written in C and。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 很酷的事情。每个人，它是目前最受欢迎的三维建模软件之一。你可以用它进行动画、工业设计等。
- en: '![](img/9bc27498caebbe4a1cec728f064dce63_4.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9bc27498caebbe4a1cec728f064dce63_4.png)'
- en: '![](img/9bc27498caebbe4a1cec728f064dce63_5.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9bc27498caebbe4a1cec728f064dce63_5.png)'
- en: C++ but has a lot of support for Python with scripting。 And this image has nothing
    to do。 with my talk。 I just thought it was really cool。 It's kind of what you
    can do in Blender。 It's like animations and shading。 It's really cool。 It's a
    really awesome software。 It's。 pretty user friendly too。 And it's open source。
    Totally free。 Just grab it。 And the way it。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: C++有很多对Python的支持，特别是在脚本方面。这个图像与我的演讲没有关系。我只是觉得它真的很酷。这就是你在Blender中可以做的事情。它像是动画和阴影处理。真的很酷。这是一款非常棒的软件。使用起来也相当友好。而且它是开源的，完全免费。赶快去拿吧。它的工作方式就是这样。
- en: works is these things called meshes to primitive meshes to create geometry。
    It's pretty easy。 to play around with。 As you see at the bottom there， it too
    has a low code solution。 So it's。 game -- these kind of solutions are pretty popular。
    You can use a low code， you can use。 Python scripting， you can use keystrokes
    in UI。 It's a pretty easy to play around with。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 它的工作原理是这些叫做网格的东西，用原始网格创建几何形状。玩起来相当简单。正如你在底部看到的，它也有一个低代码解决方案。所以这类解决方案相当受欢迎。你可以使用低代码，可以使用Python脚本，也可以在UI中使用按键。这很容易上手。
- en: But you can't use them immediately for architecture design。 That's where the
    Blender Brimad comes。 in。 It's an open source software that was like， hey， it's
    really cool if we just use。 Blender to model our building information modeling。
    Right now Blender just meshes and。 geometries doesn't do the whole database side
    of things。 But if we took the geometry and。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 但你不能立即用它们进行建筑设计。这就是Blender Brimad的用武之地。这是一个开源软件，它的理念是，如果我们仅仅使用Blender来建模我们的建筑信息建模，那就太酷了。现在Blender仅处理网状和几何形状，并没有处理数据库的整个侧面。但如果我们取了几何形状并。
- en: meshes and push to the database。 So this is the middleman here that can quickly
    take。 your model ideas into a software and continue working on the database side。
    And that's what。 happens when you have the geometry and meshes from a Blender
    solution and scale it up for。 a building。 And all you're doing here is just taking
    those meshes， making those shapes。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 网状结构并推送到数据库。这就是中介，可以快速将你的模型想法转移到软件中，并继续处理数据库侧面。这就是当你拥有Blender解决方案中的几何形状和网状结构，并将其放大用于建筑时发生的事情。你所做的只是把这些网状结构变成这些形状。
- en: the shapes that have solids， the solids and become loaded with walls and doors，
    architectural。 helmets。 And then you can at the end see that section of a floor
    plan and they can put on， a sheet。 Very， very fast， very cool。 This is kind of
    like everybody's dream。 So just。 quickly do something in the software。 And I think
    this is kind of where things are going。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这些形状包含固体，固体装载了墙壁和门，建筑的。盔甲。然后你可以在最后看到那部分楼层平面图，并且可以放在一张图纸上。非常，非常快，非常酷。这有点像每个人的梦想。因此，只需快速在软件中完成一些事情。我认为这就是事情的发展方向。
- en: They don't want to eat it to get to their awesome ideas。 A lot of architects
    and people。 in engineering construction， they have to eat it to get to anything
    nice and this cuts。 out a lot of that。 And what's really cool is you can combine
    Blender bin head in with， the IFC。 IFC is like the JSON of the BIM world。 It's
    an industry foundation classes。 So it's。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 他们不想为了获得很棒的创意而去“吃”它。很多建筑师和工程建设人员，他们必须经历这一切才能得到任何美好的东西，而这则省去了很多过程。最酷的是，你可以将Blender与IFC结合。IFC就像是BIM世界的JSON。这是一个行业基础类。
- en: like a non-proprietary。 And you can use that to then take the Blender stuff，
    use this IFC。 format to then through Blender into these other softwares。 Then
    you can then load as an。 exchangeable file。 Then you can start editing those in
    your proprietary BIM software， which。 is there's a bunch of them。 Not just Revit，
    there's a whole gang of them。 And you can do。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 像是一个非专有的。你可以用它来将Blender的内容，使用这个IFC格式，然后通过Blender导入其他软件。然后你可以作为可交换文件加载。然后你可以开始在你的专有BIM软件中编辑这些，有很多种。不仅仅是Revit，还有一大堆。
- en: cool stuff like this。 You can take your ideas as a giant mesh or a series of
    meshes， create。 generative options of a loft of a tower like this where the base
    is a bigger shape and the。 top is a smaller shape。 You loft that up so the top
    and bottom connect。 You give it a。 twist and before you know it you get architecture。
    And this is a amazingly fast way of doing it。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 像这样的酷东西。你可以把你的想法看作一个巨大的网状结构或一系列网状结构，创建。类似这样塔楼的生成选项，其中底部是一个较大的形状，而顶部是一个较小的形状。你把它提升起来，让顶部和底部连接。你给它一个扭转，没过多久你就得到了建筑。这是一种惊人快速的方法。
- en: on Blender。 They can push it to your other software and work with it。 It's very
    cool， stuff。 But we're not done yet。 There's also this cool ladybug。 And this
    is what's cool。 about ladybug tools。 It's for climate and weather analysis。 We're
    increasingly concerned。 about how the built environment of any kind is using energy。
    It's good for comfort。 And。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在Blender上。他们可以将其推送到其他软件并进行处理。这非常酷。但我们还没有完成。还有这个很酷的ladybug。这就是ladybug工具的魅力所在。它用于气候和天气分析。我们越来越关注任何类型的建筑环境如何使用能源。这对舒适度非常好。
- en: so there's been a whole spread of solutions and one of them is ladybug。 And
    it works。 with just about any popular geometry engine。 It's all written in Python。
    You just pip install。 LBT dash ladybug if you want to try it out。 It's all free。
    And what it does is stuff， like this。 It can help you do solar path analysis。
    A big old arch tube thing like at the top， there。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 所以有一系列的解决方案，其中之一是ladybug。它几乎可以与任何流行的几何引擎兼容。它全是用Python编写的。如果你想尝试，可以使用pip安装LBT-ladybug。它都是免费的。它的功能是这样的。它可以帮助你进行太阳路径分析。像顶部那样的大弧形管道。
- en: That's just every position the sun would travel throughout the year。 And it
    gives a， latitude。 So you can just study a building and figure out what the solar
    properties were。 What it looks like when the sun pops in through your window。
    What parts of the room they give。 time a year are getting sunlight。 What are it？
    What's a good way to make it a comfortable， space。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是太阳在一年中每个位置的轨迹。它提供了一个纬度。因此你可以研究一座建筑，找出其太阳能特性。当阳光透过窗户照进来时，房间的哪些部分在一年中的某些时间获得阳光。怎样才能让它成为一个舒适的空间。
- en: Not too much heat。 Not too cold。 So you have to run the heater。 You know， just，
    make it efficient。 These are the kind of tools and solutions coming around to
    help people。 study that and make a better design， a better building， a lower energy
    building that has。 a better carbon footprint for the environment。 And this is
    just an example of running in。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 不要太热，也不要太冷。所以你需要开启加热器。你知道，尽量让它高效运作。这些是帮助人们的工具和解决方案。研究这些并做出更好的设计，建造更好的建筑，降低能耗，使其对环境的碳足迹更好。这只是动态本地平台的一个例子。
- en: that dynamo local platform。 But it's a lot of other things。 So that's what's
    nice about， it。 It's very versatile。 And it has its friend， honeybee。 Which also
    does similar things。 In。 this case it does visualization for data energy analysis。
    So you can figure out， you know。 size and lows throughout the year， throughout
    the day， 24 hour period， a six month period， whatever。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 但这还有很多其他的东西。所以这就是它的好处，非常多功能。它还有一个朋友，蜜蜂（honeybee），也做类似的事情。在这种情况下，它进行数据能量分析的可视化。所以你可以了解，全年、每天、24小时内，甚至六个月期间的大小和波动。
- en: It gives you some visualizations。 They have a whole tool set here。 Now you can。
    do this all with the tool sets。 They can also do some cool stuff with generative
    design and。 option areas that they call it。 Where you can just， you know， use
    the AI machine learning。 tools to your advantage to figure out every possible
    scenario。 Like different sizes of， your room。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 它给你一些可视化效果。他们在这里有一整套工具。现在你可以用这些工具来完成这一切。它们还可以在生成设计和所谓的选项区域上做一些酷炫的事情。在这些地方，你可以利用AI机器学习工具来帮助你找出每一种可能的场景，比如房间的不同大小。
- en: windows， alignments， what have you， get a bunch of different results and help。
    you kind of determine what is a better set of parameters you can use to move forward
    with。 and narrow down your selection。 So you don't have to do that manually。 These
    are the kind。 of tools people are using right now for just working on buildings
    and structures and making。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 窗户、排列等等，获取一系列不同的结果，帮助你确定可以向前推进的更好参数设置，从而缩小你的选择范围。因此你不必手动完成这些。这些是人们目前用于建筑和结构工作的工具。
- en: sure we have really sound ideas and sounds design solutions。 And again， all
    done through。 tools that you would use from either built on Python or from Python
    libraries。 And that's。 what's great about the future is just going a direction
    where Python is going to be a great。 exchange of data between all these different
    sets。 So you can feed data from all sorts of。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 确保我们有真正合理的想法和合理的设计解决方案。而且，这一切都是通过你将使用的工具来完成的，这些工具要么是基于Python构建的，要么来自Python库。这就是未来的美好之处，它将朝着Python的方向发展，成为不同数据集之间良好的数据交换平台。这样你就可以从各种来源获取数据。
- en: different model formats and databases， SQL， integrate them through open exchanges
    to Python。 And then for Python， use your different libraries like pandas， we're
    going to have you to get。 some analysis out of it so that it's not stuck。 That's
    been kind of the issue with the world。 I'm in in the built environment。 Things
    get stuck in one place or another。 They look great。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的模型格式和数据库，SQL，通过开放交换将它们集成到Python中。然后在Python中，使用不同的库，比如pandas，我们将帮助你从中提取一些分析结果，以便不会被卡住。这一直是我所在的建筑环境中的问题。事物会卡在某个地方，看起来很不错。
- en: until you want to extract data。 But this is one way to at least that data is
    to do these。 open standards， accessible coding solutions for people at every stage
    and use Python to。 create some data analysis。 And the future will be more data
    science because there's more。 interest in how you can use data and things like
    machine learning to help us understand。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 直到你想提取数据。但至少有一种方法来做到这些开放标准、可访问的编码解决方案，供每个阶段的人使用Python进行一些数据分析。未来将更多地涉及数据科学，因为人们对如何使用数据和机器学习等事物来帮助我们理解更感兴趣。
- en: what's going on in our buildings。 They're very complex。 You only see the facade
    but there's。 a whole engine of stuff happening in the hood that needs to be studied
    building something。 depending on how you look at the reference。 It was like 20-25%
    of our carbon friction。 comes from buildings。 So how do we better design buildings
    that have a lower carbon impact？ IoT。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建筑中的事情非常复杂。你只看到外表，但在背后有一整套需要研究的引擎。根据参考资料来看，约20-25%的碳排放来自建筑。那么我们如何更好地设计碳影响较低的建筑呢？物联网（IoT）。
- en: Things like a micro-prathon that can help us develop IoT solutions and digital
    twin。 solutions to help us monitor our buildings。 Just about everything is moving
    in a direction。 of visual twins for structures small and big。 Everything in the
    building industry is also。 10 years behind the times。 If everything was already
    IoT kicking off 10 years ago as a， big wave。
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 像微型黑客松这样的事情可以帮助我们开发物联网解决方案和数字双胞胎解决方案，以帮助我们监控建筑。几乎所有的东西都在朝着视觉双胞胎的方向发展，无论是大建筑还是小建筑。建筑行业的一切也落后了10年。如果一切在10年前已经启动了物联网的浪潮。
- en: this watch is an IoT device of my heart。 So we try to see how can we do something。
    like that for the entire structure and get some real good data of a reason to
    much energy。 Spaces people aren't going to because it's inconvenient。 Maybe this
    room。 Some applications。 Of course， I saw the demo this morning by Peter Wang
    of all the cool stuff， we do with Python。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这款手表是我心中的物联网设备。所以我们试着看看如何为整个结构做类似的事情，并获取一些真实的能源消耗数据。人们不愿意去的空间，因为不方便。也许这个房间。有一些应用程序。当然，我今天早上看到Peter
    Wang展示的所有酷炫的Python项目。
- en: PyScript with WebAssembly and Michael。 There you go。 There's also the， cool
    custom applications。 I mentioned Pyrebit would have you earlier。 If you don't
    want。 to buy a real or a bus solution because you don't need it or you don't know
    what to do。 with the other tools out there， you can at least try to make your
    own tools or a lot。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: PyScript与WebAssembly以及Michael。好吧。还有我之前提到的酷炫自定义应用程序。如果你不想购买一个真实或总线解决方案，因为你不需要它或者不知道如何使用其他工具，至少你可以尝试自己制作工具。
- en: more compact or use somebody else's tool set to the point and direct solutions
    for what， you want。 This is all the fields that Python can feed into。 Shout out
    to all the open source maintainers out there。 Everything I just talked about，
    here was an open source project。 Dynamo。 even though it's based on a corporate，
    from， ourselves as an open source。 I could make my own copy。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 更加紧凑或使用别人工具集的程度，以及为你想要的内容提供直接的解决方案。这些都是Python可以涉足的领域。向所有开源维护者致敬。我刚刚谈到的所有内容，都是一个开源项目。Dynamo。尽管它是基于一个企业项目，但我们自己是一个开源项目。我可以制作自己的副本。
- en: they're great team。 I didn't， show you grass over this time。 but that's a similar
    looking thing by another corporate， sponsor。 Blender， of course。 completely open
    source。 One of the best examples open source。 Pyre Revit and all the other tools
    I showed you。 These guys are great。 I would not be able。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 他们是一个出色的团队。我没有在这段时间内向你展示草图，但这是另一家企业赞助商的相似产品。当然，Blender是完全开源的。它是开源的最佳示例之一。Pyre
    Revit和我向你展示的所有其他工具，这些家伙都很出色。我本来无法做到。
- en: to speak to you guys today if it wasn't for these kind of tools。 I always like
    to show。 my appreciation。 Of course， the Python software foundation they're all
    sent to。 Programners should be fun。 That's why I picked Python。 JavaScript's great。
    C#'s great。 They're。 all great， but Python really made me enjoy what I'm doing
    with architecture and design。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有这些工具，我今天无法和大家交流。我总是想表达我的感激之情。当然，Python软件基金会的所有人都很出色。程序员应该享受乐趣。这就是我选择Python的原因。JavaScript也很棒，C#也很棒。它们都很出色，但Python让我真正享受建筑和设计的工作。
- en: They feel like I was hitting a wall of pain， trying to figure out how to debug
    something。 It was way more accessible。 That's why I like this program language。
    I just prepared Python makes it possible。 This is the beauty of Python。 It does
    so many things。 great。 You find interest in any of these things， any of the solutions
    I showed you today。 Consider。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得自己像是在撞墙，努力去调试一些东西。这变得更加易于接触。这就是我喜欢这门编程语言的原因。我准备了Python，它使一切成为可能。这就是Python的魅力。它能做很多事情，太棒了。如果你对我今天展示的任何解决方案感兴趣，请考虑一下。
- en: getting involved in any of these things。 Those tools are very interesting in
    any of these。 things that can reach out to me about them。 Really， at the end，
    they want more people to。 be aware of what Python could do。 Not just in its traditional
    features， but also the， built world。 I think if we all kind of put eyes on what
    we could do for the built environment， with automation。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 参与这些事情。这些工具在任何方面都非常有趣。如果你想了解更多，可以联系我。实际上，最终他们希望更多的人意识到 Python 能做什么，不仅限于其传统功能，还包括构建的世界。我认为如果我们都关注我们在构建环境中能够做什么，以及自动化。
- en: coding， data， it would be a better built environment。 At this point。 it's like
    every eyeballs and uses their intuition to design。 If we had more robust processes
    and。 better tools， we get a better version of the future。 It's kind of spreading
    where it's。 like to get more involvement in Python。 This is all the resources
    for all the stuff I showed。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 编码和数据，将会是一个更好的构建环境。在这一点上，就像每个人都用直觉来设计。如果我们有更健全的流程和更好的工具，我们能得到一个更好的未来版本。这种情况正在传播，像是希望在
    Python 中获得更多的参与。这是我展示的所有资源。
- en: you today。 On the right is all the links to the different repos and learning
    libraries。 for the different software。 I left there a special thanks to all the
    contributors。 He。 did that for the API site。 It's on for Pyrebit， Deon， D'Mon，
    for BlenderBim， stuff like Valadybug。 Dynamo team and Grasshopper team at their
    companies。 I always give a shout-out to them because I'm。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 今天。右侧是不同软件的各种仓库和学习库的链接。我特别感谢所有的贡献者。他为 API 网站做了这一切。这是关于 Pyrebit、Deon、D'Mon 和
    BlenderBim 的，还有 Valadybug、Dynamo 团队和 Grasshopper 团队的内容。我总是想感谢他们，因为我。
- en: really dependent on them。 Thanks to them。 Thank you so much， guys， for attending
    my talk。 I really appreciate it。 I got the QR code right there if you want to
    tell that link。 I guess。 it will be in the video。 If you want to reach out， it's
    not hard to find。 That's it。 I can。 open up questions or I can hear down the hall。
    Thank you。 [Applause]， [Music]。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 真的很依赖他们。感谢他们。谢谢大家参加我的演讲。我真的很感激。如果你想要扫描二维码，那就在这里。我想这会在视频中。如果你想联系，不难找到。就是这样。我可以开始提问，或者我可以走到走廊里。谢谢。[掌声]，[音乐]。
- en: Does anyone have any questions that would like to otherwise we can meet the
    speaker here。 later and he can answer any questions any doubt that you have about
    the presentation？
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 有人有什么问题吗？如果没有，我们可以在这里见到发言人，他可以回答你关于演讲的任何疑问。
- en: You want to mic？ Give me a sec。 I just wanted to ask you where you think computing
    for design architecture is going to go because。 Revit and all the many of the
    open source tools that you mentioned are hitting Revit， which。 is a proprietary
    infrastructure。 You also mentioned IFC， which is the open standard for buildings。
    I was wondering what you think about IFC or which direction is going to go。 We
    remain。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你想要麦克风吗？给我一秒钟。我只是想问你，认为计算设计架构将走向何方，因为 Revit 和你提到的许多开源工具都在影响 Revit，而这是一种专有基础设施。你还提到了
    IFC，这是建筑的开放标准。我想知道你对 IFC 的看法，或者它将走向哪个方向。
- en: proprietary or do you think this will go fully open source？
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你认为这是专有的，还是会完全开源？
- en: My hopes and dreams will go very open source。 The point where the proprietary
    software is， optional。 You can use it。 Maybe it will give you the better version
    of the workflows。 You。 can use the IFC and all that to get your work done at a
    pretty high level。 I think the way I would say is the more interest and uses of
    these open source solutions people。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我的希望和梦想将会非常开源。专有软件将是可选的。你可以使用它。也许它会给你更好的工作流程版本。你可以使用 IFC 等等，以较高的水平完成你的工作。我认为我想说的是，越多的人对这些开源解决方案感兴趣并使用它们。
- en: are pursuing at the grassroots level。 The more the proprietary software solutions
    have。 to respond to that。 They have to lose the customer demand。 They fight each
    other all the time。 always different companies that are like the locky end to
    their thing and that's like。 okay you have to use this。 Even between the different
    bin solutions from the companies。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 正在基层层面进行追求。越多的专有软件解决方案必须对此做出反应。他们必须失去客户需求。他们总是在互相竞争，总有不同的公司就像锁住了他们的东西，像是，你必须使用这个。即使在不同的公司的
    BIM 解决方案之间。
- en: they don't like to share anyway。 You are locked into their format。 If we had
    something like， an IFC。 like a real robust one， which people are getting towards
    and people want more of。 that would accelerate it。 I think it's totally possible
    but it's got to be like people have。 to be aware of the companies they work at
    who access the software， who work on these。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 他们反正不喜欢分享。你被锁定在他们的格式中。如果我们有像IFC那样的东西，真正强大的IFC，大家正在朝这个方向发展，并且人们希望更多地使用它，那将会加速进程。我认为这是完全可能的，但人们必须意识到他们所工作的公司是如何访问这些软件的，谁在这些软件上工作。
- en: kind of solutions that they do want more of that open source that are locked
    in to a vendor。 I think it's just a matter of spreading the word， spreading the
    knowledge and the more， you spread。 Just show these examples of what's possible。
    It's pretty accessible。 The more。 it will gain traction。 It's a matter of grassroots
    movement in that direction。 I do really think。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这种解决方案确实希望有更多开源的，而不是被锁定在某个供应商中。我认为这只是一个传播信息、传播知识的问题。你传播得越多，就越能展示这些可能性。这是相当容易接触的。传播得越广，它就会获得更多关注。这是一个朝那个方向的草根运动。我真的这么认为。
- en: that so long as the people want it， the users want it， the vendors will respond
    and make。 a lot more IFC friendly。 I'm not sure if it will be IFC as like we call
    it a desktop。 version of it versus the web。 That's more I'm not sure what would
    all be going through。 the web because everything's easier on the web exchanges。
    It's a little more open there。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 只要人们想要，用户想要，供应商就会回应并做出更多友好的IFC。我不确定这是否会像我们所称的桌面版本的IFC，而不是网络版。关于这一点我不太确定，因为在网络上交换一切都更容易。那里的开放性稍微强一点。
- en: versus like exporting a file， manipulating that。 It's a little moral fashion。
    A lot of， friction。 So it might be a marriage between the IFC solutions。 I believe
    there is an IFC。js， that it can help。 So it might move in different directions
    but I think it will move eventually。 in the direction of a better version of IFC
    if the people want it。 I'm optimistic。 Any。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 与导出文件、对其进行操作相比，后者稍显繁琐，存在不少摩擦。因此，这可能是IFC解决方案之间的结合。我相信有一个IFC.js，可以帮助实现这一点。所以它可能会朝着不同的方向发展，但我认为如果人们希望它，它最终会朝着更好的IFC版本发展。我对此持乐观态度。任何。
- en: other questions please。 Today we will be more than glad to continue this discussion。
    I'm。 sorry we ran out of time but as I said he will be more than glad to continue
    this discussion。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他问题吗？今天我们很高兴能继续这个讨论。抱歉我们时间不够，但正如我所说，他会很高兴继续这个讨论。
- en: '![](img/9bc27498caebbe4a1cec728f064dce63_7.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9bc27498caebbe4a1cec728f064dce63_7.png)'
- en: and thank you， Tadeh， for the great presentation。 Thank you。
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你，Tadeh，精彩的演示。谢谢。
- en: '![](img/9bc27498caebbe4a1cec728f064dce63_9.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9bc27498caebbe4a1cec728f064dce63_9.png)'
