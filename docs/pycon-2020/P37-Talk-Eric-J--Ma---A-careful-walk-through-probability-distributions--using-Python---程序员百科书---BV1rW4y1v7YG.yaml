- en: P37：Talk Eric J. Ma - A careful walk through probability distributions, using
    Python - 程序员百科书 - BV1rW4y1v7YG
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/65cc4b9cc2c997d488bfda4f7350e190_0.png)'
  prefs: []
  type: TYPE_IMG
- en: 大家好，我叫埃里克，我很高兴和你们分享关于概率分布的讨论，在我们继续之前，不过，让我先介绍一下我自己，我就是所谓的数据科学家，因为我在诺华生物医学研究所工作，我是个从事生物医学研究的计算科学家。然后一个数据科学家，尼尔是一个有趣的工作场所，如果你是那种，他想用数据科学的方法来揭示生物和化学世界的基本特性，在为制药服务时，我们现在是最好的地方之一，在尼伯尔之前，我是一个洞察健康数据的研究员。在那之前
    我在麻省理工学院生物工程学院读研究生，研究流感与进化，在我的日常工作中，我使用贝叶斯统计建模方法来帮助我的同事做出决定，利用不确定性，这些在我们的工作中非常重要。因为我们测量的生物和化学系统是非常嘈杂和非线性的，因此，量化不确定性肯定有助于一吨，当我们用贝叶斯方法，对概率分布有足够的把握，会很有帮助利用
    python数据科学堆栈，我想我们可以很好地掌握这个话题。
  prefs: []
  type: TYPE_NORMAL
- en: 让我们进入正题，提出这个话题，我将使用我开发并部署的交互式流媒体应用程序，在我个人的独库服务器上，如果你想接触它，一边听着谈话，请前往蟒蛇问题，Eric
    mjl dot com，在那里你可以跟随。当我们第一次考虑概率分布时，我们可以考虑正态分布或者高斯分布，因此，在整个演讲中，我将使用这个分布作为一个锚定的例子，而不是用纯粹的数学术语来接近正态分布，我将向你们介绍，作为一个蟒蛇物体。让我们先定义一个类，我们知道正态分布由两个参数定义，μ和
    sigma，Mu正典地代表了高斯人的中心倾向，或者换句话说，概率分布的中心，西格玛控制着高斯人的传播，也不知道它有多宽或多窄。我们知道对于高斯人来说，μ{\displaystyle\mu}可以取负无穷大到正无穷大的任意值，而
    sigma必须是一个实数，每个概率分布都有相关的概率密度函数，我们一会儿就会看到跟我在一起。
  prefs: []
  type: TYPE_NORMAL
- en: 所以对于连续值分布 我们有概率密度函数，对于离散值分布 我们有概率质量函数，这个函数的作用是将可信度点分配给数字线，所以每个 pdfs或 pmf都有一个特殊的形状，在我们的情况下。因为我们面对的是一个高斯人，它的形状是钟形曲线，一件非常重要的事情，你必须记住这一点
    根据定义，pdf下的面积或 pmf质量之和必须等于1，如果没有这个定义，我们没有概率分布的定义。正如你在 python代码中看到的，我们利用科学派统计库，确保为概率分布实现了分布
    pdf和 log pdf，我们能做的最后一件事就是从中抽取数字，是的，概率分布是数生成器，更广泛地说。我们称之为生成模型，这似乎是当今机器学习界的流行术语，我们称它们为生成模型的原因是，是因为它们是如何生成数字的模型，所以我们可以继续从概率分布中画出尽可能多的数字，对于python类。
  prefs: []
  type: TYPE_NORMAL
- en: 我们需要一个draw方法，在引擎盖下面，我们要做的就是把房车的方法，这可以在 sci pi stats库的发行版中找到，好的，所以让我们从视觉上看看这一切，我要建立我自己的定制高斯琴，对。我要做一个高斯分布图，等于1。7，所以让我们把它拖过去，我要确保它是西格玛，等于2。4，把它拖过去，你会注意到右手边的情节，实时更新，这样你就可以看到发生了什么，瞧，我们有自己的定制高斯琴。你在这里看到的曲线是概率密度函数，在
    y轴上取任意值，曲线下的总面积乘以1，它的范围跨越了 x轴上有效值的支持范围，好吧，现在请记住高斯人，有效的，有效值的集合实际上来自负无穷，一直到正无穷好的。所以你要记住这点好吗，我们现在将首先探索，它是概率和可能性的孪生概念，正如我之前提到的，正态分布具有概率密度函数，为了分配，概率分布函数曲线下的面积给出了概率的度量，所以概率定义在曲线下的面积上。
  prefs: []
  type: TYPE_NORMAL
- en: 我们说曲线下的总面积等于1，即从负无穷到正无穷，总和等于一，我们得到的是一些非常有趣的东西，我们可以讨论曲线下一系列数值的概率，所以如果我们，如果我们想在曲线下切出一些区域，然后我们可以谈谈它。占曲线下总面积的百分比，它给出了一个概率度量，所以我们会在下一个演示中看到这个，如果我说我对一系列的价值观感兴趣，说负一点五七到正一点九一，我们会看到曲线下的总面积，这两个值之间的界限是点四五。如果我把价值提高到那边，那么这两个值之间的总面积是0，8，4，因此这个值范围的总概率是，好了，如果你看着这一切，开始想，哦，曲线下面积，积分和微积分之间一定有某种联系，你说得很对，我今天就跳过这一切。因为今天的重点是蟒蛇代码好吧，视觉上，这就是概率的意义所在，就像一个分数，可能发生的事情的一小部分，所以这里有个有趣的想法，单个值的概率是多少，好吧，一种方法，想想单一值的概率。
  prefs: []
  type: TYPE_NORMAL
- en: 确保我们感兴趣的价值范围从那个值开始，以这个值结束，所以让我们现在想象一下，如果我们运行它，你会注意到一点 曲线下的总面积是零，所以在连续分布中没有与单个值相关的概率，好吧，所以现在我有一个假设。你也许在想，不是概率，我们能不能谈谈连续分布上一个值的概率，不是真的，然而，我们可以讨论分布的另一个性质，哪种可能性，可能不是曲线下的区域，但是曲线在某一点的高度，就像可信度点与
    x轴上的数字相关。所以考虑到我们这里定制的高斯分布，在 x轴上最大可能的点是什么，好吧，我们来看看，如果我把滑块拖到右边五点六四，例如，我有可能，或者一堆与价值相关的可信度点，如果我想要最大的可能性。自然的做法是拖过滑块，直到你到了中间的某个地方，在那里的某个地方，基本上非常接近我们，定义了高斯的μ，当然是由于，因为我编程的局限性，我有个滑球打不到1。7分，但你明白了，好的，所以就在分布的中心。
  prefs: []
  type: TYPE_NORMAL
- en: 就在定义分发地点的地方，高斯的穆是，只要你记住，概率定义在曲线下的面积上的一般原理，可能性定义为曲线的高度，您将能够使这两个想法在视觉上相互分离，好的，接下来我们要从分布中提取数字。当我们从这个高斯分布中抽取数字时，它将按曲线高度的比例绘制，例如，如果我在这里画一千个数字，注意到概率密度函数高度最高的区域，也有最高密度的点绘制，当概率密度函数的高度最低时，也是在哪里，反过来说。道具，那个，点的密度较低，好吧，所以我们可以做一些事情，比如从概率分布中提取数字，正如我之前提到的，概率分布是一个随机数生成器，它有关于如何生成数字的规则，这就是你如何考虑概率分布，好吧。所以现在你已经看到了我们如何与概率分布相互作用，从我所说的前瞻的角度来看，也就是说我们知道概率分布参数是什么，我们与分布中产生的数据进行交互，现在我想给你一个反向的视角，也就是说我们得到的数据。
  prefs: []
  type: TYPE_NORMAL
- en: 但我们不知道分布的参数是什么，这种情况让我们很自然地，估计或推断分布参数的行为，为了说明这一点，我们玩个游戏吧，我给你们5个值，屏幕，这些家伙结束了，这里有六个值，对不起，我不会数，所以考虑到这些数值。你能推断，产生这些数据点的高斯分布参数最有可能是什么，是一个巨大的暗示，我刚才用的术语是，很可能，所以要做到这一点，我们要做的是找到最好的，最好的西格玛，最好的解释数据，其中一个方法就是。以最大化所有数据的共同可能性，这包括计算这一点的可能性，然后这一点，接下来的一点，然后这一点，那个点那个点，如果你有更多的数据点，所有的要点，好的，计算所有数据点的总联合概率。我们做总计算或联合计算的方式，不是通过可能性的总和，我们实际上把这个，乘以这个值，根据这个值，根据这个值，等等，等等，当然，因为我们处理的是可能很小的浮点数，分数，而不是做的总和，而不是做可能的产品。
  prefs: []
  type: TYPE_NORMAL
- en: 这就是这个时代，那个时候，那个时候，时间，那个时候，那个时候，这将代替对数可能性的总和，就是这个圆木，像这样记录，再加上记录，加上日志，加上日志，等等，等等，当你看到我的时候
    点击屏幕，你会看到如何。我们试图优化这里的对数可能性，所以我要把这个，当然，我知道我知道最终的答案，所以让我们稍微运行一下应用程序，我要继续点击，在我尝试最大化对数可能性之前，我们试试，我们先沿着木轴试试，嗯。这看起来很有道理，五减六，那是那是，在我看来很合理，然后让我们看看会发生什么，如果我们不这样做，日志的可能性变得更糟了，所以我们要减少
    sigma，记住，这里的高度一直在变好吧，所以即使分数似乎在下降。它们实际上可能是它们的总数可能会增加，如你所见，如果我们继续走四点三，三点八，这看起来相当不错，三点三减三点三，那就更好了，那可能更好，好的，所以我们找到了能最大化，可能会最大化。
  prefs: []
  type: TYPE_NORMAL
- en: 就像让我们尝试最后一点，否，那就没那么好了，所以我们有了最终的配置，一个高斯人，最大限度地提高与这些数据点相关的可信度点，对，好的，所以现在，如果我们不仅仅对μ和
    sigma的单点值感兴趣。但我们想在这些方面得到一些不确定性，然后我们自然地降落在贝叶斯统计的空间里，但这是另一个话题，如果你真的很好奇，我有一篇文章链接在下面，你可以去看看，你可以去看看，好的。让我们回顾一下我们今天所经历的一切，我想确保你在结束谈话时提出以下几点，首先，所有概率分布都有相关的概率密度函数，这是这里的曲线，概率密度函数定义了形式的可信度，曲线下面积形式的概率，它给了我们可信度。曲线高度形式的点或可能性，我向你们展示了如何定义概率分布，以蟒蛇物体的形式，如果你把它们想象成蟒蛇状物体，你可以与之互动，就可以制造出混凝土，你可能会在数据科学文献中的概率中看到一些抽象的概念。
  prefs: []
  type: TYPE_NORMAL
- en: 好的 第三，我希望你有什么味道，最大似然估计，任何时候，你可以看到某种形式的最大似然估计在引擎盖下进行，保证你会在工作中找到概率分布好的，我们要做的就是尽最大可能，在任何估计任务中找到一个或多个值。如果你是分布参数的贝叶斯主义者，最好地解释了数据，由似然函数定义的可信度点给出，这些是你可以用概率分布做的事情，如果你想知道你还能如何与它们互动，然后前往科学派统计图书馆，如果你选择任何分销，说，例如。我们今天讲的正态分布，您可以看到在这里定义的所有其他类方法，向你展示了如何与概率分布相互作用，以我们没有涵盖的方式，在今天的谈话中，谢谢收听，如果你喜欢这次谈话，请点击下面的喜欢按钮，与你的朋友分享。如果你想收到一份精心策划的面向程序员的数据科学材料列表，我每个月都发了一份包含这种内容的时事通讯，你可以在
    tinyletter dot com slash eric mjl找到，所以去报名吧。
  prefs: []
  type: TYPE_NORMAL
- en: 如果你也想收到的话，我的任务是为每个人建立面向编程的数据科学材料，我希望你能在 Patreon网站上支持我，Slash eric mjl，谢谢。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/65cc4b9cc2c997d488bfda4f7350e190_2.png)'
  prefs: []
  type: TYPE_IMG
