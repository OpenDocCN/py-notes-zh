- en: P88：Tutorial Sergio Sanchez - Geospatial Public Policy Analysis with GeoPandas
    - 程序员百科书 - BV1rW4y1v7YG
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P88：教程塞尔吉奥·桑切斯 - 使用GeoPandas进行地理空间公共政策分析 - 程序员百科书 - BV1rW4y1v7YG
- en: '[BLANK_AUDIO]。'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '[BLANK_AUDIO]。'
- en: '![](img/3d542d062784efc24cd1e1e82252239d_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_1.png)'
- en: Hi everyone， my name is Eshisant Savala。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 大家好，我叫Eshisant Savala。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_3.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_3.png)'
- en: This is a tutorial for Geospatial Public Policy Analysis with GeoPenders。 I'm
    gonna have a quick presentation at the beginning， and。 then we're gonna go over
    some of the tools and the data sources that we'll be using。 for the tutorial。
    Then I'm gonna show you how you can access the code and， how you can run the code。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个关于使用GeoPandas进行地理空间公共政策分析的教程。我将首先进行简短的介绍，然后我们将讨论一些工具和数据来源，这些将在教程中使用。接下来我会展示你如何访问代码，以及如何运行代码。
- en: And then we will get started doing some Geospatial Public Policy Analysis。 All
    right。 so where my name is Eshisant Savala， like I mentioned。 I'm a research associate。
    I was a research associate at the Higher Ed Center at PPIC。 the Public Policy
    Institute of California when it first admitted the talk。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将开始进行一些地理空间公共政策分析。好吧，我的名字是Eshisant Savala，正如我提到的。我是研究助理。我曾在PPIC的高等教育中心担任研究助理，当时它首次进行此类讨论。
- en: I was doing a lot of public policy analysis of California， higher education
    policy， obviously。 And it focused mostly on developmental education in the community
    college system， who transfers。 who doesn't transfer to a four year institution。
    I was doing some migration policy to an economic mobility。 And now I am a data
    visualization analyst at Aluma。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我做了大量关于加利福尼亚州公共政策的分析，显然是关于高等教育政策。主要集中在社区大学系统中的发展教育，谁能转学，谁不能转学到四年制院校。我还研究了一些移民政策与经济流动性相关的内容。现在我在Aluma担任数据可视化分析师。
- en: social enterprise in the healthcare and social services space。 I also have this
    personal project called Tacos Ettos， and， it's a place online。 it's a community
    online where you can share your best。 practices and kind of knowledge in the field
    of data analysis and visualization。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在医疗和社会服务领域的社会企业。我还有一个个人项目叫Tacos Ettos，这是一个在线平台，是一个社区，您可以在这里分享您在数据分析和可视化领域的最佳实践和知识。
- en: in Spanish so that all this knowledge that we have， all these advancements in
    tech。 that we keep seeing every day happen， don't stay in the English speaking
    world only。 Well。 that's the goal， right？ So you can find me on github。com/checkos，
    C-H-E-K-O-S。 as you can see in the screen。 On Twitter， checkos。wh。 And if you're
    interested。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 用西班牙语表达，使我们所拥有的所有知识和技术进步，能被更多人获取，而不仅仅局限于英语世界。这就是目标，对吧？你可以在github.com/checkos找到我，C-H-E-K-O-S。正如你在屏幕上看到的。在Twitter上，checkos.wh。如果你感兴趣。
- en: you can follow Tacos Ettos too on github。com/tacos-the-tacos。 So what do I do？
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在github.com/tacos-the-tacos上关注Tacos Ettos。那么我该做些什么呢？
- en: They were watching the theme of what I try to do in my professional life。 and
    everything that I do work related。 It's to facilitate knowledge transfer。 How
    can I get an idea from mine or my colleagues brains into yours？ The fastest way。
    the easiest way。 So it's making complex topics easier to understand。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 他们在关注我在专业生活中所做的主题，以及我所有的工作相关事宜。我的目标是促进知识的转移。我如何将我的想法或同事的想法传递给你？最快、最简单的方式。所以让复杂话题变得更容易理解。
- en: And I think that's a great thing to do。 And it's fairly obvious how that plays
    out in a research institute。 right？ We would look at numbers， we would find trends。
    we would explain those trends to the legislature， and hopefully they would make
    an informed decision。 And they would make a much more informed decision after
    that， right？
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这是一个很棒的事情。而且在研究机构中，这一点显而易见，对吧？我们会查看数字，寻找趋势。我们会向立法机关解释这些趋势，希望他们能够做出明智的决定。这样他们能做出更明智的决定，对吧？
- en: In the data visualization world， it's still more or less how can I make this
    easy for you to understand。 right？ How can I make， how can I present complex information
    so that you get that？
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据可视化领域，关键在于如何让你更容易理解，对吧？我该如何呈现复杂的信息，使你能够理解？
- en: You understand that the fastest way possible。 And in general。 it's just making
    research more transparent or reducible and accessible。 which I hope this tutorial
    helps you do。 This has many implications。 but one of the main reasons that I do
    this is that。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你会理解这是最快的方法。总的来说，这只是让研究更透明、可简化和可访问，我希望这个教程能帮助你做到这一点。这有很多影响，但我这样做的主要原因之一是。
- en: so that anyone who wants to do this can do it if they want to。 They don't need
    anything else if they have the will and they have access to a computer and Python。
    They should be able to do what you're doing with Python， right？ So because of
    that。 we'll be using certain tools in this tutorial。 And hopefully you take some
    of these practices and implement them in your everyday work。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，任何想要这样做的人只要有意愿并且可以访问电脑和Python，就可以做到。他们不需要其他任何东西，对吧？因此，我们将在本教程中使用某些工具。希望你能将这些实践融入到你的日常工作中。
- en: So what will this tutorial cover？ It's essentially a step-by-step from start
    to finish。 How would a researcher go about answering a research question that
    entails some geospatial analysis？
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 那么这个教程将涵盖什么内容呢？它基本上是从头到尾的逐步流程。研究人员如何去回答一个涉及一些地理空间分析的研究问题？
- en: So we're going to be looking at how I organize my projects in general。 The workflow
    from start to finish data cleaning， then doing this and doing this and doing this。
    And how do you use pandas and geo pandas for this type of analysis。 which is probably
    what most people are here for。 What can you do with geo pandas？
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看看我如何总体上组织我的项目。从开始到结束的数据清理工作流程，然后做这个、做这个、再做这个。以及如何使用pandas和geo pandas进行这种类型的分析，这可能是大多数人来这里的原因。你可以用geo
    pandas做些什么？
- en: Panda sounds awesome。 Adding geography to it。 That sounds cool。 What can we
    do with that？
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Panda听起来很棒。将地理信息加入其中，听起来很酷。我们可以用它做些什么呢？
- en: So we'll be going over that。 And more specifically， too。 we're going to learn
    how to manipulate geographies and shapes， shape files using geo pandas。 Who is
    this tutorial for？ Beginners will be using my binder。 so you don't even need to
    install anything。 There is some expectation of Python knowledge。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们将会讨论这些。更具体地说，我们将学习如何使用geo pandas操作地理和形状、形状文件。这个教程适合谁呢？初学者将使用我的binder，因此你甚至不需要安装任何东西。但对Python知识有一定的期待。
- en: I'm not going to teach you Python from scratch。 We'll be using Jupyter。 We'll
    be using pandas and geo pandas。 So if you have had some experience with it。 it's
    obviously going to be a big advantage。 But we're not going to be touching on complex
    or more advanced topics。 I don't think we even do-- we won't even write any functions。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我不会从头开始教你Python。我们将使用Jupyter，使用pandas和geo pandas。如果你有一些经验，那显然会是一个很大的优势。但我们不会触及复杂或更高级的主题。我认为我们甚至不会写任何函数。
- en: It's going to be very much scripting step by step。 First， you do this。 Then
    you do this。 So beginners， people just getting started should be able to follow。
    If not。 I'll be happy to help you out。 And you can go on GitHub for the repository，
    submit an issue。 or reach out on Twitter。 And we'll set up a way to answer any
    questions that you have。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这将非常逐步脚本化。首先，你做这个。然后你做这个。所以初学者、刚刚入门的人应该能够跟得上。如果不行，我会很乐意帮助你。你可以在GitHub上查看代码库，提交问题，或在Twitter上联系我。我们会设置一个方式来回答你有的任何问题。
- en: If you want to learn a bit more about pandas before this tutorial， you can go
    to my other。 tutorial that I did last year at PyCon。 2019 is on GitHub under github。com/checkos/analyzingcensusdata。
    It's a tutorial on analyzing census data with pandas。 That one goes more into
    detail step by step what can pandas do。 So it'll be very helpful。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在本教程之前多了解一些关于pandas的知识，可以查看我去年在PyCon上做的另一个教程。2019年的教程在GitHub上，网址是github.com/checkos/analyzingcensusdata。这是一个关于使用pandas分析人口普查数据的教程。这个教程更详细地逐步讲解了pandas能做什么，所以会非常有帮助。
- en: The link for YouTube is on it too。 And I'm sure you can just Google it。 So what
    tools will we be using？ We're going to be using JupyterLab for analysis。 This
    is where we're going to have all our Jupyter notebooks and the work。 And just
    everything is going to be in JupyterLab。 We're going to be using obviously geopandas
    and pandas to manipulate data。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: YouTube的链接也在里面。我相信你可以在网上搜索。那么我们将使用什么工具呢？我们将使用JupyterLab进行分析。在这里，我们将有所有的Jupyter笔记本和工作内容。所有的工作都将在JupyterLab中进行。我们将显然使用geopandas和pandas来处理数据。
- en: This helps you analyze data， geopandas plus the ability to manipulate geographies
    and。 to implement geographies in your data analysis。 We're going to be using geoplot
    which is if you've heard of seaborn which makes maplet。 visualizations kind of
    like pretty by default， that's what geoplot is for maps。 It's kind of seaborn
    for maps。 And we will be using command line interface。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这有助于你分析数据，结合geopandas以及操控地理的能力，来实施地理分析。我们将使用geoplot，如果你听说过seaborn，它使地图可视化默认变得更好看，这就是geoplot的作用。它就像地图的seaborn。我们还将使用命令行界面。
- en: command line tool by the LA Times data desk。 It's called census data downloader。
    And this is just going to be so that we can automate。 It just facilitates us getting
    the data into our computer。 And it's good practice。 It's a really cool tool。 The
    LA Times is doing some really cool things。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这是LA时报数据小组的命令行工具。它叫做普查数据下载器。这将使我们能够自动化。它方便我们将数据导入计算机。这是个好习惯。它是一个非常酷的工具，LA时报在做一些很酷的事情。
- en: You should check them out if you're interested in this type of stuff。 So what
    data sources we'll be using？ We're going to be using iPads which is from the National
    Center of Education Statistics。 is the integrated post secondary education data
    system。 Integrated。 I don't think anyone knows what iPads stands for but everyone
    in the education space， research。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对这些内容感兴趣，应该去查看一下。那么我们将使用哪些数据来源？我们将使用来自国家教育统计中心的iPads，即综合高等教育数据系统。整合。我认为没有人知道iPads代表什么，但在教育领域，研究人员都知道。
- en: space knows iPads。 And we'll go on the browser and check explore more about
    it in a bit。 We're also going to be using American Community Survey data from
    the census。 That's the yearly survey。 The census conducts。 That's what the census
    data downloader tool is for。 And we're also going to be using Tiger shape files
    by the census。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 空间知道iPads。我们会在浏览器上查看，稍后会深入了解。我们还将使用来自普查的美国社区调查数据。这是普查每年进行的调查。数据下载工具就是为了这个目的。我们还将使用普查提供的Tiger形状文件。
- en: These are the "official" shape files that the census provides for us。 Next。
    So what questions will we be answering？ Like I mentioned at the beginning。 we're
    going to be going step by step how would a， researcher go about answering a question
    that has a geospatial component？
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是普查为我们提供的“官方”形状文件。接下来。那么我们将回答哪些问题？正如我在开始时提到的，我们将逐步探讨研究人员如何回答一个具有地理空间组件的问题？
- en: So what are those questions？ They have essentially three questions。 Two main
    questions plus the map。 The first main question， the first research question is
    how many higher education institutions。 are found in counties with majority underrepresented
    groups？ So these are groups。 these are black and Latino folks， Native Americans，
    places who have been。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 那么这些问题是什么？它们本质上有三个问题。两个主要问题加上地图。第一个主要问题，第一个研究问题是，在多数代表性不足群体的县中，有多少高等教育机构？这些群体包括黑人和拉丁裔，土著居民，曾经受到排斥的地方。
- en: historically underrepresented in higher education。 So how many higher education
    institutions are there in these counties that are majority。 underrepresented？
    Right？ And what are the characteristics of those institutions？
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在高等教育中历史上代表性不足。那么，在这些多数代表性不足的县中，有多少高等教育机构？对吗？这些机构的特征是什么？
- en: Do they vary from institutions in more affluent or more on those other counties？
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这些问题是否因更富裕的机构或其他县而有所不同？
- en: Second main question， are there any counties that don't have any higher education
    institutions？
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个主要问题是，是否有任何县没有高等教育机构？
- en: These educational deserts， education deserts。 Do you find yourself in a county
    that doesn't have any higher education institutions？
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这些教育沙漠，教育荒漠。你是否发现自己处于一个没有高等教育机构的县？
- en: What if you wanted to go to a higher education institution， you'd have to leave。
    Or maybe you don't even think about going to a higher education institution since
    there's。 none around you， you haven't seen one， et cetera， et cetera。 These are
    obviously assumptions。 but are there any education deserts here in the United，
    States？
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想去高等教育机构，你就得离开。或者，也许你甚至不考虑去高等教育机构，因为周围没有，你从未见过等。这显然是假设，但美国这里是否存在教育沙漠？
- en: And what are some of the demographic characteristics of those counties？
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 那些县的人口特征是什么？
- en: So if there's no higher education institutions in that county， how is this county
    different。 from other counties in the United States？ And what we're using county
    is an arbitrary geographical level。 We could go up to a state， but obviously every
    state has higher education institutions。 We could go down to a census tract， which
    is a very small unit。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在那个县没有高等教育机构，那这个县与美国其他县有何不同？我们使用“县”是一个任意的地理层级。我们可以上升到州，但显然每个州都有高等教育机构。我们也可以降到普查区，这是一种非常小的单位。
- en: But then you lose some of the demographic data that goes with it because that's
    not publicly。 available at that granular level。 And then we're going to make some
    maps。 So what parts of the country are left out if you create a 10， a 25， 50-mile
    radius around。 higher education institutions？ There's some research here in California
    that shows that most people。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 但是你会失去一些与之相关的人口统计数据，因为在那种细化级别上并不公开可用。然后我们将制作一些地图。那么如果你在高等教育机构周围创建10、25或50英里的半径，哪些地区会被排除在外？加州的一些研究表明，大多数人……
- en: the typical student， goes to a high one day go to college。 If it's a state school。
    I think around 25 miles， if it's a UC because this was in California， it's 50
    miles。 that's the average， the median distance between the college and the home，
    of the student。 And if it's a community college， they don't go further than 10
    miles， mostly。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 普通学生一般上大学时，距离家大约25英里，如果是加州大学的话，大约是50英里。这是大学与学生家庭之间的平均和中位距离。如果是社区大学，通常不超过10英里。
- en: So those are the questions we'll be using and we're going to be creating some
    maps along， the way。 And with that， let's get started on going over the tools
    and the data sources that I mentioned。 So this is the NCES website， it's nces。ed。gov/ipids。
    This is what we're going to be using for our data。 As you can see。
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这些就是我们将使用的问题，我们将沿着这个过程创建一些地图。那么现在，让我们开始介绍我提到的工具和数据来源。这是NCES网站，网址是nces.ed.gov/ipids。这就是我们将用于数据的地方。如你所见。
- en: it's the primary source of information on US college and universities。 If we
    go here。 give me a second， sorry， we go join in。 What we're going to be using
    is， not joining， sorry， my bad。 use the data。 We're going to be using this tool。
    This has already been downloaded for you and I cleaned it up a little bit because
    the variable。 title， the column names are horrible。 But as you can see。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这是美国大学和学院的主要信息来源。如果我们在这里，给我一秒钟，抱歉，我们去加入。我们将使用的是，不是加入，抱歉，我错了。使用数据。我们将使用这个工具。这已经为你下载，我稍微清理了一下，因为变量标题，列名很糟糕。但如你所见。
- en: you can create groups and you can look up institutions by whether， they grant
    a degree。 what sector they found， what are the public or the private。 Are they
    in a specific state？
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以创建小组，并根据是否授予学位、创办行业、是公立还是私立，以及它们所在的特定州来查找机构。
- en: And for each institution， you can find a lot of information。 You can find how
    many people go there。 full enrollment， how many people stay throughout， the year，
    what degrees。 how many degrees do they give out， what are the graduation rates，
    what's the average price。 sort of financial aid。 It's a lot of information， it's
    really interesting if you're interested in that type of information。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个机构，你可以找到很多信息。你可以找到有多少人去那里，完整注册情况，有多少人全年留在那里，授予什么学位，授予多少学位，毕业率是多少，平均价格，财务援助情况。这有很多信息，如果你对这类信息感兴趣，真的很有趣。
- en: We're also going to be using the census data。 We're using American Community
    Survey data through the Census Data Downloader tool。 But you can also go to data。census。gov
    and look up information。 They have tables for everyone and they have a lot of
    information。 So check it out if you're interested in census data。 Pretty cool
    if you ask me。
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将使用普查数据。我们通过普查数据下载工具使用美国社区调查数据。但是你也可以去data.census.gov查找信息。他们为每个人提供表格，信息量很大。如果你对普查数据感兴趣，快去看看，挺酷的。
- en: We're going to be using Jipit or Lab， like I mentioned。 If you haven't heard
    about it。 it's a web based interactive development environment for， Jipit and
    notebooks。 You have code and data and rich text in the same file， which is pretty
    cool。 We're going to be using MyBinder to run our code。 So that you don't have
    to install anything。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Jipit或Lab，正如我提到的。如果你还没听说过，它是一个基于网络的交互式开发环境，用于Jipit和笔记本。代码、数据和丰富的文本可以放在同一个文件中，这很酷。我们将使用MyBinder来运行我们的代码，这样你就不必安装任何东西。
- en: It's all going to be in your browser。 I'll show you this later。 You're going
    to have the GitHub repository and the link。 And all it does。 all this does is
    spin up an instance of Jipit or Lab on your browser。 with all the dependencies
    already installed。 We're going to be using Pandas obviously for data analysis。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的内容都会在你的浏览器中。我稍后会给你展示。你将拥有GitHub存储库和链接。所有这些都只是让你的浏览器上运行一个Jupyter或Lab的实例，所有依赖项已经安装好。我们显然会使用Pandas进行数据分析。
- en: We're going to be using Geopandas for the geospatial analysis aspect of our
    research。 To make working with geospatial data and play them easier。 That's where
    we're looking for。 This Geopandas is what allows you to read in ship files and
    geometries into a data from。 like your wood with a regular CSV for example。 We're
    going to be using Geoplock for maps for geospatial data visualization。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Geopandas进行我们研究的地理空间分析。为了让处理地理空间数据变得更简单、更轻松。这正是我们所寻找的。Geopandas使你能够将 shp
    文件和几何图形读入数据框，就像用普通的 CSV 一样。我们将使用Geoplot进行地理空间数据可视化的地图。
- en: It's a high level geospatial planning library。 It's an extension of cartopi
    and map。lib which makes map easy like seaboard for geospatial。 It just makes everything
    a little bit easier。 Map， make it a little bit easier。 And like I mentioned。 we're
    going to be using the Census Data Downloader tool by the LA Times。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个高级地理空间规划库。它是 cartopi 和 map.lib 的扩展，使地理空间映射变得像海岸线一样简单。它只是让一切变得稍微容易一些。地图，让它变得稍微容易一些。正如我提到的，我们将使用洛杉矶时报的普查数据下载工具。
- en: What this does is it allows you to create， to run this from your terminal。 Census
    Data Downloader。 give me the median age for all the states or median age for counties，
    if you want to change that。 So， or for year 2010 or 2011 or 2018 median age states
    or counties or divisions etc。 etc。 And you can create some really cool maps with
    the data that I use that from here。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这项功能允许你从终端创建并运行普查数据下载器。给我所有州的中位年龄，或者如果你想更改的话，也可以是县的中位年龄。所以，可以是2010年、2011年或2018年的中位年龄，州或县或区域等等。你可以用我在这里使用的数据创建一些非常酷的地图。
- en: They've used it for somewhere there。 Own data journalism。 It's a really great
    tool。 It's a really great tool。 But to use it， you're going to need a Census API
    key which is very easy to do。 You just go， you're going to click， you're going
    to go to the Census Data Downloader repository。 github。com/datadesk/censusdata。loader
    and in the read me， you're going to get to this， part。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 他们在某些地方使用过这个工具。它是一个非常好的工具。为了使用它，你需要一个普查API密钥，这非常简单。你只需点击，访问普查数据下载器的存储库 github.com/datadesk/censusdata.loader，在说明文件中，你将找到这一部分。
- en: You're going to click on this link。 And you're going to request the key。 This
    one， this takes。 this takes like two minutes actually， it's really quick。 So you
    should get on that right now so we're going to use literally the video。 And while
    I have you here， I just want to take a second to remind you if you're in the。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要点击这个链接。然后你要申请密钥。这个过程，这个过程实际上只需要大约两分钟，非常快速。所以你现在就应该去做这个，我们将字面上使用视频。与此同时，我想提醒你，如果你在美国。
- en: United States， please go out and if it's still 2020， please go out and fill
    out the census。 It's very important。 And it is going on right now。 You can go
    to census2020。gov and respond。 Even if you haven't gotten anything on the mail，
    even if you lost the letter on the mail。 you can answer this online。 And it's
    just， I can't emphasize this enough。 This is really。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 美国的朋友们，请务必填写普查。如果仍然是2020年，请务必填写普查。这非常重要。现在正在进行中。你可以访问 census2020.gov 并进行回应。即使你没有收到任何邮件，甚至如果你丢失了邮件上的信件，你也可以在线回答。而且，我无法强调这一点，这真的非常重要。
- en: really important for everything here in the United States。 So please。 if you're
    in the United States， if you live here regardless of anything else。 if you're
    living in the United States， please go to 2020census。gov and answer it and fill。
    out the census if you haven't already。 And with that， we're going to get to working
    on the code。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这对美国的每一件事情都非常重要。所以请，如果你在美国，无论其他情况如何，如果你生活在美国，请访问2020census.gov并填写普查问卷，如果你还没有填写的话。这样，我们就开始着手处理代码。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_5.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_5.png)'
- en: '![](img/3d542d062784efc24cd1e1e82252239d_6.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_6.png)'
- en: All right。
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 好的。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_8.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_8.png)'
- en: So let's get started with the tutorial， with the actual code。 You're going to
    want to go to github/github。com/checkos/chiospecial-public-policy-analysis-gopandas。
    I know it's a long name， but I was trying to be as， you know， as far as possible。
    You can also just go to github。com/checkos and it's going to be right there。 The
    second pinned item。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们开始这个教程，使用实际的代码。你需要访问 [github/github.com/checkos/chiospecial-public-policy-analysis-gopandas](https://github.com/checkos/chiospecial-public-policy-analysis-gopandas)。我知道这个名字很长，但我尽量做到尽可能详细。你也可以直接访问
    [github.com/checkos](https://github.com/checkos)，它就在那里，是第二个固定项目。
- en: So that's way faster。 And what you're going to want to do is we're going to
    click here。 We're going to be using MyBinder。 I'm going to add instructions for。
    there will be instructions for how to run this locally。 If that's what you want。
    And in the MyBinder folder， there's the environment file with all the dependencies。
    So it would be。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这样会快得多。你需要做的是点击这里。我们将使用 MyBinder。我将添加在本地运行的说明。如果这是你想要的。在 MyBinder 文件夹中，有一个环境文件，里面包含所有依赖项。
- en: you can run this locally。 It's just for simplicity。 We're going to be using
    MyBinder to follow along on the tutorial。 And you're going to click on the badge。
    It's going to take you to this page。 And if you click on the show， it's going
    to show up。 It's going to show you the logs。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在本地运行这个。为了简化，我们将使用 MyBinder 来跟随教程。你会点击徽章，它将带你到这个页面。如果你点击显示，它会显示出来。它会向你展示日志。
- en: And because I already ran this once， they have a Docker image already built
    for this。 github repository。 So it'll be fine。 But if this is， if it doesn't say
    found built image。 it probably means that I just changed， something in the repository。
    So they're creating the image。 That's going to take a little bit。 So you're just
    going to have to wait， but it will get。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我已经运行过一次，所以他们为这个 GitHub 仓库已经构建了 Docker 镜像，所以不会有问题。但是如果它没有显示找到构建的镜像，这可能意味着我刚刚更改了仓库中的某些内容。因此他们正在创建镜像。这将需要一些时间，所以你只需等待，但它会完成。
- en: it will get there to you。 And from here， you just got to wait。 It usually takes
    less than a minute for large repositories or repositories with a lot of。 dependencies。
    It takes a little bit longer。 From my experience。 So what you're going to see
    here is it takes you directly to JupyterLab。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 它会传送到你那里。从这里开始，你只需等待。对于大型仓库或依赖项较多的仓库，通常不超过一分钟。根据我的经验，这可能需要更长时间。因此你看到的将直接进入 JupyterLab。
- en: If you prefer the notebook environment， you can change this in the URL， the
    last part。 the LAB or you can just delete that for the classic Jupyter notebook
    view or in help。 You just click launch classic notebook。 I don't recommend it。
    We're not going to be using that。 So this is the basic structure of the folder。
    We have a authors MD， which we， a license。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你更喜欢笔记本环境，可以在 URL 的最后部分更改 LAB，或者你可以删除它以获得经典的 Jupyter 笔记本视图，或者在帮助中点击启动经典笔记本。我不推荐这样，我们不会使用这个。所以这是文件夹的基本结构。我们有一个
    authors MD，一个许可证。
- en: The root mu file， which is this and it will be updated to show the installation
    steps， et， cetera。 et cetera。 There's a data folder with four sub folders， external，
    interim， process and raw data。 And here's the definitions for each of those。 There's
    a docs folder where you can drop any documentation。 PDFs or any other type of
    documentation， that you use during your workflow。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 根文件 mu，这个文件将会更新以显示安装步骤等。还有一个数据文件夹，其中有四个子文件夹：external、interim、process 和 raw data。这里是每个文件夹的定义。还有一个
    docs 文件夹，你可以在这里放置任何文档，包括 PDF 或其他类型的文档，这些文档是在工作流程中使用的。
- en: The notebooks folder where we're going to be working on。 Then there's a reports
    folder for whatever markdown or the manuscript if you're writing， a report。 Within
    that， there's a figures folder。 So if you want， if you produce any images。 which
    we will be doing with， we're going to， be creating some maps。
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 notebooks 文件夹中工作。然后有一个 reports 文件夹，用于存放任何 markdown 或手稿，如果你在写报告。在里面还有一个
    figures 文件夹。如果你产生了任何图像，我们将创建一些地图。
- en: they're going to go directly on figures。 And then there's a source folder for
    whenever。 whatever code you produce that you don't， want on your notebooks， any
    scripts。 any helpful code that you even get from somewhere else， or models that
    you create。 Anything that produces the visualization that you want to do。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 代码将直接放在 figures 中。然后有一个源文件夹，用于存放你产生的任何代码，如果你不想放在笔记本中，可以存放任何脚本、任何你从其他地方获得的有用代码或你创建的模型。任何产生你想要的可视化的内容都可以放在这里。
- en: Anything that you want to extract from the notebook， you can just throw it on
    source。 with this so that it's in once organized space。 This is based on the cookie
    cutter template for data science。 which I changed a little。
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 任何你想从笔记本中提取的内容，都可以直接放到源代码中。这样就能将其放在一个有序的空间里。这是基于数据科学的模板，我稍微修改了一下。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_10.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_10.png)'
- en: '![](img/3d542d062784efc24cd1e1e82252239d_11.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_11.png)'
- en: bit is based on the reproducible science cookie cutter by MKRAPP。 Essentially
    this。 I just changed it a tiny bit。 I don't have the opinion。 I don't have the
    config。 This is what I use for all my projects just so that it's standardized
    and I can， I know。 exactly where each， I know exactly where the notebooks are
    going to be。
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这个部分基于MKRAPP的可重复科学模板。我只是稍微修改了一下。我没有意见，也没有配置。这是我所有项目中使用的标准化方式，我知道每个笔记本的位置。
- en: I know exactly where the scripts to， for data analysis。 I know where the scripts
    to create visualizations are going to go on。 So standardizing your workflow is
    very useful in the long run， especially if you keep， if。 you have an ID and then
    you want to try something and then you forget about it and in six months。
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我确切知道数据分析的脚本在哪里。我知道创建可视化的脚本会在哪里放。所以标准化你的工作流程在长期内非常有用，尤其是当你有一个ID，想尝试一些事情，结果忘记了，六个月后又想起来。
- en: you want to go back and look， I have that one ID。 Alrighty， so we're going to
    go on notebooks。 You might have noticed we have a solutions folder which is not
    here in the project organization。 This is for this repository。 For the tutorial，
    this is where I'm going to have the solutions。 the notebooks that we， create today。
    And those are going to be。
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想回头查看，我有那个ID。好了，我们将进入笔记本部分。你可能注意到我们有一个解决方案文件夹，而在项目组织中没有这个。这是为了这个库。在教程中，我将放置解决方案，就是我们今天创建的笔记本。
- en: I'm going to add more explanations to everything that we do。 in step by step
    and links so that you can follow along and learn more about whatever we're， doing。
    So you can check those out。 I recommend looking at them right away。 You want to
    try to do all this on your own and then we can check the solutions。 Alrighty。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我将为我们所做的每一步添加更多解释和链接，以便你可以跟着学习更多内容。建议你立即查看这些内容。你可以尝试自己完成这些，然后我们可以检查解决方案。好的。
- en: one last thing before we get started because my binder is an instance on the
    cloud， somewhere。 It will go to sleep， it will turn off after 15 minutes of an
    activity。 So you should be running something every 10 minutes， every 10 to 15
    minutes at least。 so that your instance doesn't die。 And you might see me code
    for more than 15 minutes but you should pause for 15 minutes。
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前还有最后一件事，因为我的Binder实例在云端某处。它会在15分钟没有活动后进入休眠状态。因此，你应该每10到15分钟运行一些东西，确保实例不会关闭。你可能会看到我编码超过15分钟，但你应该暂停15分钟。
- en: at a time so you should pause the video every step and then write the code along
    or put it。 on the side and start running your code。 Okay， so we're going to go
    into notebooks folder and first things we're going to create a mark。 down file
    with the steps that we're going to be using。 So we're going to be doing it。 So
    the very first thing in every research project is data cleaning。 Getting the data。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 每一步你都应该暂停视频，然后跟着写代码，或者把它放在一边，开始运行你的代码。好的，我们将进入笔记本文件夹，首先我们要创建一个包含步骤的Markdown文件。每个研究项目的第一件事是数据清理，获取数据。
- en: cleaning that data， getting ready for analysis is like 90% of the work。 that
    I used to do day to day as a researcher。 So let's write this down。 Instructions。
    Step one。 data preparation。 We already acquired some data for you and so that
    is ready to go and then I'll show you。 in a bit。 So in the next step one， we're
    going to be preparing the institution data。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 清洗数据，准备分析大约占工作量的90%。这是我作为研究人员日常所做的事情。所以我们来写下这些步骤。第一步，数据准备。我们已经为你获取了一些数据，准备就绪，稍后我会展示给你看。接下来的第一步，我们将准备机构数据。
- en: These two institutions data then county level data from census and then we're
    going to keep。 it simple than data analysis， right？ And obviously this is quote
    unquote a living document。 We're going to go back and add any other steps that
    we want to do between the analysis。 Research question one， research questions
    two， research question three。 Let's take this。 We call it。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个机构的数据以及来自人口普查的县级数据，我们将保持简单的数据分析，对吧？显然，这是一份“活文档”。我们将回去添加我们在分析之间想要做的其他步骤。研究问题一，研究问题二，研究问题三。让我们称之为这样。
- en: We just got to call it read me so that one would throw that back and get it
    up is ready， to go。 Right？ It will show up as the default。 So because we're going
    to be working on data preparation。 we should explore what type of， data we have
    already。 If we go on the data folder and external。 you'll see that I have included
    two zip files。 This one is from iPads。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要称之为“读我”，这样人们就会把它扔回来并准备好使用，对吗？它会显示为默认设置。因为我们将进行数据准备，所以我们应该探索一下已经拥有的数据类型。如果我们进入数据文件夹和外部，你会看到我包含了两个压缩文件。这一个来自iPads。
- en: This is the institution's data and TL is the tiger lines， those us census county
    shape， files。 I'm going to go on data。 I have already in the process file。 I have
    included a script on the on the GitHub repository on source data。 There's a data
    cleaning that pie that you have to worry about this， but it's essentially。
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这是机构的数据，TL是老虎线，那个是美国人口普查县形状文件。我会在我已经处理的文件中的数据上。我在GitHub存储库的源数据上包含了一个脚本。你必须担心这个数据清理，但本质上。
- en: going through that zip file and processing it a little bit。 It deletes an empty
    column that comes with with iPads。 A lot of the time you for some reason it always
    comes with a with an unnamed column and then。 the number varies depending on the
    number of columns， variables that you get。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 是通过那个压缩文件进行处理。它会删除一个随iPads而来的空列。通常情况下，不知为何，它总是带有一个未命名的列，然后数字会根据你获得的列数和变量的不同而变化。
- en: And then it's just cleaning up the names of the columns just a little bit because
    it's。 on you don't need to worry about that for this tutorial。 So I just included
    that for you。 And then the geo data cleaning as well is not even it's not really
    cleaning is just opening。 up that zip file and then creating essentially just
    extracting it。
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 然后只是稍微清理一下列的名称，因为对于这个教程你不需要担心这个。所以我只是为你包括了这一点。然后地理数据清理其实并不是清理，只是打开那个压缩文件，然后基本上提取出来。
- en: It's not it's not cleaning the data。 And those were already run for you when
    you open up your your when you go to my binder。 But if you're running this locally，
    you're going to have to run those yourself and you。 can do that by and by just
    on your terminal tapping Python and the script。 So on process file。 you see the
    process there for the institutions。 Kind of looks like this has some institutional
    names。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 它并不是清理数据。当你打开你的笔记本时，这些已经为你运行过了。但是如果你在本地运行，你将需要自己运行它们。你可以通过在终端中输入Python和脚本来做到这一点。在处理文件中，你可以看到机构的处理情况。看起来像是有一些机构名称。
- en: the state they're in whether they're， public and at two or four years。 whether
    they're mostly they should all be degree granting。 but whether they're mostly
    bachelor's degree or not mostly bachelor's degree。 Their address。 Want you to
    lead it to whether I travel college or a historically black college or university。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 它们的状态是公开的，是否是两年或四年，是否大多数都授予学位，但它们是否大多数是学士学位或不是大多数学士学位。它们的地址。希望你能引导它是我旅行的大学或历史上黑人大学或大学。
- en: some some more statistics about this right world's board and in their first
    notebook and then。 geo data is just shape file， right？ And that one can be read
    onto geo pandas directly。 So on the notebooks， let's create our first notebook。
    And first things first。 you should always rename it to whatever you're going to
    be calling， it。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这一点的一些统计数据，世界的板子和他们的第一个笔记本，然后地理数据只是形状文件，对吗？可以直接读取到地理熊猫中。因此，在笔记本上，让我们创建我们的第一个笔记本。首先，你应该始终将其重命名为你将要称呼的名称。
- en: I'm going to call it data prep institutions。 And the first thing you're going
    to do is import pandas。 obviously， because that's what， we're going to be using
    for analysis。 We're going to be using pathlib for paths so that it works both
    on Windows and the next。 based systems。 You may have noticed that I included this
    little script is just it just has a function。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我将其称为数据准备机构。首先，你将导入pandas。显然，因为这就是我们将用于分析的工具。我们将使用pathlib来处理路径，以便在Windows和类Unix系统上都能工作。你可能注意到我包含了这个小脚本，它只是有一个函数。
- en: called tree that displays the tree， the directory's tree。 I call it tools。py。
    You might see other people use utils。 Pie is I just happen to do this because
    this is what how I learn。 I don't come from software development。 I'm come from
    social design。 So I don't have。 That's just how I learn。 So we're going to import
    that function so that we can use it。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这个名为tree的函数显示目录树。我称之为tools.py。你可能会看到其他人使用utils.py，我恰好这样做，因为这就是我的学习方式。我并不来自软件开发，而是来自社会设计。这就是我的学习方式。因此，我们将导入这个函数以便使用。
- en: And then we're going to import this date time function because you might not
    for whoever。 doesn't have experience with version control。 If you're following
    this along。 you might have experience with GitHub and you might already。 know
    Git and you may know version control。 But a lot of people coming to tech from
    academia and from social sciences。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将导入这个日期时间函数，因为对于没有版本控制经验的人来说，如果你跟着这个步骤，你可能有GitHub的经验，并且可能知道Git和版本控制。但是很多从学术界和社会科学进入科技领域的人并不具备这些经验。
- en: we don't really， use version control for just generally。 And so our way of version
    control is just tagging a date at the end or adding like underscore。 final underscore
    final underscore final。 It's not the best way to do it。 but it's one way to do
    it at least to have at least some， sort of version control。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们实际上并没有普遍使用版本控制。因此，我们的版本控制方式只是将日期标记在末尾，或者添加下划线。最终的下划线最终下划线。这并不是最佳的方法，但至少这是一个有版本控制的方式。
- en: So what we're going to do is use the today function so that it will create a
    day thing。 Today's string string F time。 And we're going to do a model。 We're
    going to use B which is letters。 Why？ And we're going to call it so to make sure
    that it worked。 Okay。 so today's the 24th of April 2020。 And then what we can
    do is just tag this at the end of any CSV file that we produce。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用today函数以创建日期。今天的字符串是`string F time`。我们将使用B，作为字母。为什么？为了确保它有效。好的。今天是2020年4月24日。然后，我们可以将其标记在我们生成的任何CSV文件末尾。
- en: Again， this is not the best way to do it。 You may already know version control
    if that's how you do it。 If you already know that you should do it that way。 But
    if you don't have any experience with version control， at least throw that in
    there。 to differentiate between same versions of the same file。 Okay。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这不是最佳的方法。如果你已经知道版本控制，那你应该这样做。但如果你没有版本控制的经验，至少要在这里加上以区分同一文件的不同版本。好的。
- en: so we're going to create the paths for our data folder。 So we have raw data。
    Path data。 Right。 And what this is doing is just saving us the so we don't have
    it's just make we're just。 doing this so that we don't have to explicitly type
    dot dot slash data slash raw slash whatever。 the file name is every time we have
    we want to call something we're going to get read something。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为数据文件夹创建路径。因此，我们有原始数据路径。对吧？这只是为我们节省时间，以便我们不需要每次调用某个文件时都显式输入`.. /data/raw/`等内容。
- en: from the raw data file。 And because it's path， live and then the path class
    will be it works both again on Windows。 and Linux based system。 So you don't have
    to worry about which way that the slash certain。 So we're going to do one for
    entering data。 I like to do this for all the data folders that we have。 So even
    if we're not going to use all of them right now process data。 And the final and
    the extra。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 来自原始数据文件。由于它是路径，path类在Windows和Linux系统上都能工作。因此，你无需担心斜杠的方向。我们将为输入数据做一个。我喜欢对所有数据文件夹这样做。即使我们现在不使用所有这些，处理数据以及额外的数据。
- en: Right。 No problem。 All right。 So excuse me， I'm reading my notes to make sure
    that we get we're going to use this tree。 function to see what we have on our
    external data for that you can do click tab for auto， complete。 And we see that
    we have the zip files that I just showed you right。 If we go to process。 You can
    see this again。 You can see that we have the process data from institutions。
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 对的。没问题。好的。抱歉，我在看我的笔记，以确保我们要使用这个树形函数来查看我们在外部数据上的内容，你可以点击tab进行自动完成。我们看到我们有刚才给你展示的压缩文件。如果我们去处理。你可以再看看。你可以看到我们有来自机构的处理数据。
- en: which is what we want here and， the shape files for our counties。 And this checkpoint
    was just created right now when we opened it and Jupiter lab。 Okay。 So we're going
    to read into a data frame using pandas pandas read。 If you do tab。 you can see
    all the options。 So a lot of options。 I love pandas。
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们在这里想要的，以及我们县的形状文件。这个检查点是在我们打开它和Jupiter Lab时刚刚创建的。好了。所以我们将使用pandas读取到一个数据框。如果你按下tab，你可以看到所有选项。有很多选项。我喜欢pandas。
- en: What we're going to be using is CSV because it's CSV file。 Now this is a cool
    thing about path。 And Patrick， we can do processed and then slash and then processed
    data that seals me。 And that just works data that had。 So here we have a data
    frame from we read， we read that。 We read that CSV file and we have a data frame
    so we can actually manipulate it and play around。
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的是CSV，因为它是CSV文件。现在关于路径的这一点很酷。还有Patrick，我们可以做处理，然后斜杠，然后处理过的数据封闭我。它就是有效的数据。这里我们有一个数据框，我们读取了那个CSV文件，所以我们可以实际操作它并玩弄。
- en: with it in pandas。 Another way to do that， I'll just show you a real quick process
    data。 Another way to create these paths。 You can do join path。 Processed data
    that CSV and I'm just going to run so you see what happens。 And it just works。
    And if you're running this in windows， it would， it would be showing you the other，
    slash。
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在pandas中还有另一种方法，我只是给你展示一个快速处理的数据。创建这些路径的另一种方法。你可以做连接路径。处理过的数据，CSV，我只是要运行一下，这样你就能看到会发生什么。它就是有效的。如果你在Windows上运行这个，它会显示其他的斜杠。
- en: So you can do that join path or you can do the slash。 I like the slash。 It's
    just kind of cool。 Okay。 Now that we have our data frame， it's a little bit hard
    to read all the columns that we have。 It skips them。 These are really long names。
    So one thing that I like to do is transpose it。 So data。 that that T and you're
    not actually transforming the data。 All you're doing is getting a transpose。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你可以做那个连接路径，或者你可以用斜杠。我喜欢斜杠。就是感觉很酷。好了。现在我们有了数据框，所有的列读起来有点困难。它会跳过它们。这些都是非常长的名称。所以我喜欢做的一件事是转置它。所以数据。那T，你实际上并没有在转换数据。你所做的只是获取转置。
- en: a transpose view of it。 Right。 So instead of the columns。 go and left to right
    and the rows top to bottom， you switch， them around。 And this way we can read
    the names of the columns right here。 And it's just a little bit easier to read，
    especially for these really long ones， right？ Grad rate。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一个转置视图。对的。所以不再是列，从左到右和行，从上到下，你交换它们。这样我们就可以在这里读取列的名称。而且这读起来稍微容易一点，特别是对于这些非常长的名称，对吧？毕业率。
- en: bachelor degree， six years， native Hawaiian or other Pacific Island。 That one
    over here would have been。 This is it， right？ It's just a little harder to read。
    So you'll see that we have the unit ID， the institution name， the state therein，
    the sector。 which includes whether they're public or private and whether they're
    two year or four year， or more。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 本科学位，六年，土著夏威夷人或其他太平洋岛屿。这边的那个会是。这就是它，对吧？只是读起来有点困难。所以你会看到我们有单位ID，机构名称，州，部门。这包括它们是公立还是私立，以及是两年制还是四年制，或更多。
- en: The institutional category， which we talked about a little bit， interstitial
    free address。 institution name alias。 So if they're known as something else， this
    is， this ratio is up。 Institution name， it seems that we have a duplicate column
    and pandas does this automatically。 We'll just add a that one to differentiate。
    An attitude， latitude。
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前谈到的机构类别，间隙自由地址。机构名称别名。如果它们被称为其他名称，这个比例就会上升。机构名称，似乎我们有一列重复，pandas会自动处理这个。我们只是添加一个来区分。态度，纬度。
- en: some characteristics of the institution， whether they're a historically。 black
    college or university， a tribal college， the percent admitted， the percent admitted。
    for women， the percent admitted for men， the percent of total enrollment that
    are American。 Indian or Alaska native， they're Hispanic， Latino， there's， there's
    a lot of statistics。
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 一些机构的特征，无论是历史上的黑人大学，还是部落学院，录取百分比，女性的录取百分比，男性的录取百分比，注册总人数中美国印第安人或阿拉斯加原住民的比例，他们是西班牙裔，拉丁裔，有很多统计数据。
- en: that we have included for you to play around with。 We're going to choose what
    characteristics we want from this large data set。 And we're going to create a
    analytical data file， a subset from this master file so that。 we don't mess around
    with it。 This one's already prepared。 It's good to go。
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经为您提供了可以玩弄的数据。我们将选择从这个大数据集中我们想要的特征。并且我们将创建一个分析数据文件，从这个主文件中提取一个子集，以免干扰它。这个文件已经准备好了，可以使用。
- en: It works for what it exists for。 So what we want is to create a subset that's
    the working file for our process for a specific。 project， right？ So what we're
    going to do is create a list of variables of interest。 And I'm just going to call
    it VUI for variables of interest。 And we're going to create a list out of these
    columns， what we're interested in， right？
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 它适用于其存在的目的。所以我们想创建一个子集，作为我们特定项目处理的工作文件，对吧？所以我们要创建一个感兴趣变量的列表。我将其称为感兴趣变量（VUI）。我们将从这些列中创建一个列表，表示我们感兴趣的内容，对吧？
- en: So we want the institution name， the logic to and the latitude。 And this one。
    I think we're going to just space your policy analysis。 We want the fifth state
    code。 which is where the state is and the value for the state is， then the sector。
    which we'll talk about a little bit。 We want the total enrollment and we want
    the full time moment and the part time moment columns。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们需要机构名称，逻辑以及纬度。我认为我们只需空间您的政策分析。我们想要第五个州代码，也就是州的位置，州的值，以及部门，稍后我们会讨论一下。我们需要总注册人数，和全职、兼职的瞬时列。
- en: right？ These are right here。 So this college has 150 people and 108 of them
    are full time and 42 of them are part。 time。 So this is for me， Nakoda College，
    in Montana。 So these are the columns that we want for this specific analysis for
    what we're going to。 be doing today。 You can choose to add， and this is why I
    included all these other variables。
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 对吧？这些数据在这里。这所学院有150人，其中108人是全职，42人是兼职。所以这是我在蒙大拿的纳科达学院。我们今天要做的特定分析所需的列就是这些。你可以选择添加，这就是我包含其他所有变量的原因。
- en: If you want to do some other analysis， if you want to see， for example， what's
    the graduation。 rate for men to get a bachelor's degree within six years？ You
    get this here， right？ So this school。 64% of men that are getting a bachelor's
    degree， get it within six years， right？ 64。 that means what？ 36% of men that come
    to this school don't get a bachelor's degree within six years。
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想做其他分析，比如，想看看男生在六年内获得学士学位的毕业率是多少？你可以在这里得到，对吧？所以这所学校，64%的男生在六年内获得学士学位，对吧？64。这意味着什么？36%的男生在这所学校六年内没有获得学士学位。
- en: That might be the dropout or it takes them seven years， right？ Or it takes them
    eight or more years。 So we're going to run this。 Now we have this list of columns，
    we can grab that subset， we do data。 This how you will grab a subset and pass
    it a list of columns in the square brackets。 And now we have this。 Now we have
    a subset of this。 We could have done square bracket。
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是辍学，或者需要七年，或者需要八年或更长时间。所以我们要运行这个。现在我们有了这个列的列表，我们可以抓取那个子集，进行数据处理。您将通过方括号传递一个列的列表来抓取子集。现在我们得到了这个。我们现在有了这个子集。我们本可以用方括号来处理。
- en: square bracket again， institution， main sector。 We could have passed it directly，
    but it's easier。 You should take that out and make it a list itself。 And I chose
    to do it the long way， the long way。 Because maybe I don't want this anymore。
    I just come to that， right？
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 再次使用方括号，机构，主要部门。我们可以直接传递它，但这样更简单。您应该把它移出去，单独做一个列表。我选择了长方式，因为也许我不想再使用这个了，我可以直接去掉，对吧？
- en: Or maybe I wanted another one and then I wanted it in this specific order so
    I could just drop。 it here。 So it's just easier to manipulate。 So now that we
    know that this is what we want。 we don't want only the first five， we're going，
    to create a copy of this data frame。 We're going to call it working the F so we're
    going to send something else。
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 或者我可能想要另一个，然后我希望它按照这个特定的顺序排列，所以我可以直接丢弃。这样操作更简单。所以现在我们知道这是我们想要的。我们不想只有前五个，我们要创建这个数据框的副本。我们将称其为工作数据框，所以我们将发送其他内容。
- en: It's going to be the data data frame， but we're only going to grab the variables
    of interest。 And what we're going to do is make a copy。 And we do this because
    if we， if we don't do this。 if we just say， okay， it's a data frame， and these
    columns of the data frame and then we do something to the working data frame。
    If we manipulate the data， we change it somehow。 We're going to get a warning
    from Panda saying that you are manipulating essentially kind。
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这将是数据框，但我们只会抓取感兴趣的变量。我们要做的是创建一个副本。这样做的原因是，如果我们不这样做。如果我们只是说，好吧，这是一个数据框，这些是数据框的列，然后我们对正在处理的数据框做一些操作。如果我们操纵数据，我们以某种方式改变它。我们将会收到
    Panda 的警告，告诉我们你在本质上操纵了一种类型。
- en: of a window into the other data frame。 And that's not what we want to take copy
    of a whole other data frame。 So we're copying that and you can always do that
    head just to check that everything is。 running smoothly in Panda。 So what we have
    here is the sector variable is essentially two variables。 right？ It's whether
    an institution is public or private and whether an institution is two years or。
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一个窗口到另一个数据框。这不是我们想要的，复制整个其他数据框。所以我们在复制它，你可以随时使用 head 来检查一切是否在 Panda 中顺利运行。所以我们在这里的
    sector 变量本质上是两个变量。对吧？它表示一个机构是公立还是私立，以及一个机构是两年制还是。
- en: four year above。 So what we want is to split that into two columns。 And the
    way you do that is in the F first， this is how you would grab a column from Panda。
    You do the square brackets like we just did for multiple variables。 What if you
    pass， if you don't。 if you don't pass a list， you pass at the name of a column，
    sector， it returns it as a Panda series。
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 四年前。所以我们想把它分成两列。做到这一点的方法是在 F 首先，这就是你如何从 Panda 抓取一列。你用方括号，就像我们刚才为多个变量所做的那样。如果你传递，如果你不传递一个列表，而是传递一列的名称，sector，它会将其作为
    Panda 系列返回。
- en: right？ And then you can tell， you can see that it's， it looks a little different
    than the data。 frame。 So what you want is， so these are all strings。 And we know
    that in Python。 you can split a string with the split method， right？ Split on
    the column。 So you get used to。 so you have these。 So what we want is to be able
    to apply this string methods to this series to each element。
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 对吧？然后你可以看到，它看起来与数据框有些不同。所以你想要的是，这些都是字符串。我们知道在 Python 中，你可以使用 split 方法来分割字符串，对吧？在列上进行分割。所以你习惯于。你有这些。所以我们想要的是能够将这个字符串方法应用于这个系列的每个元素。
- en: here。 And the way you do that in Panda is you use the string access。 So you
    got to do that SDR。 let's pandas know that you're going to do a string method
    on， a series。 What we're going to do is split， split on the comment and space，
    because we'll just take。 care of that right here。 And let's see what happens。
    So now you have a list， a list， right？
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这里。你在 Panda 中做到这一点的方式是使用字符串访问。所以你得做 SDR。让 Panda 知道你要对一个系列执行字符串方法。我们要做的是分割，在注释和空格上分割，因为我们就在这里处理这个。让我们看看会发生什么。所以现在你有一个列表，对吧？
- en: So it's splitting two elements， but it's still reaching a one series。 And instead
    of each row having a string， you have a list and that's not what we want in， pandas。
    You can pass that and expand。 It's true。 Bam。 It creates。 Now you can see that
    the format change。 it creates a data frame with two columns， one， for each of
    those elements in that list。
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 所以它正在分割两个元素，但它仍然是一个系列。每一行都有一个字符串，而你拥有的是一个列表，这在 Pandas 中并不是我们想要的。你可以传递它并展开。是真的。砰。它创建。现在你可以看到格式变化。它创建了一个有两列的数据框，每个元素对应那个列表中的一个。
- en: And what we want is just like we did this here with the square brackets， I say
    grab a series。 and you do it。 You want to grab a series。 You pass it's name out
    zero。 Now we get this one。 That's one。 We get the other。 And what we want to do
    is just be lazy and copy it， paste it。 What we're going to do is assign it to
    a series， another series。
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要的就像我们在这里用方括号做的那样，我说抓取一个系列。你就这么做。你想抓取一个系列。你传递它的名称零。现在我们得到了这个。那是一个。我们得到另一个。我们想要做的就是懒惰地复制它，粘贴它。我们将把它赋值给一个系列，另一个系列。
- en: We can call it what we want to call it。 We're going to call it control。 So whether
    it's public or private， then the other one is going to be level。 Whether it's
    two years or four years。 And then run this。 Bam。 We're going to knit this so we're
    going to delete it。
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以随意命名。我们将其命名为 control。无论是公共还是私有，另一个将是 level。无论是两年还是四年。然后运行这个。好吧。我们要删除它。
- en: So we do working the F and again just check that everything's working。 And you
    see that we have two new columns。 Control and level。 And these are based on the
    sector column that we split。 Okay。 So now that we have this。 we don't really need
    the sector column。 And how would you drop a column is with the drop method。
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们进行工作 F，再次检查一切是否正常。你会看到我们有两个新列：Control 和 Level。这些是基于我们拆分的 Sector 列。好吧。既然我们有了这个，我们其实不需要
    Sector 列。删除一列的方法是使用 drop 方法。
- en: Drop column sector。 Let's run it。 You see now it dropped it。 And we have a pandas
    data frame with 3。751 rows， nine columns。 So this is returning a pandas data frame。
    So if we save it to the same。 it's going to overwrite itself and it just deletes
    the， this， password data frame。 You could do also working with columns sector
    in place equals true。
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 删除列 sector。让我们运行它。你会看到它现在被删除了。我们有一个 pandas 数据框，包含 3751 行，9 列。这返回一个 pandas 数据框。因此，如果我们将其保存到同一个位置，它将覆盖自身并删除这个密码数据框。你也可以使用
    in place 设置为 true 处理列 sector。
- en: And that instead of returning a data frame as， if they're returning the data
    frame， it would。 just save on itself。 A while ago I saw a talk by Mark Garcia
    from pandas who was suggesting that maybe you shouldn't。 do that。 There's some
    internal stuff going on with the in place。 So ever since then I've just been doing
    it this way， just being explicit of overriding， itself。
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，如果它们返回的是数据框，返回的数据框就会自动保存。前一段时间我看了 Mark Garcia 的一次讲座，他建议也许你不应该这样做。内部有一些与 in
    place 相关的事情。因此，从那以后我就一直这样做，明确覆盖自身。
- en: But it works with in place too。 If that's how you want to do it。 Okay。 And that
    was pretty much it for this。 We started with a master data set。 We grabbed the
    columns that we were interested in。 We dropped the columns that we didn't even
    want anymore， like sector。
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 但它也可以在 in place 中工作。如果你想这样做的话。好的，这几乎就是全部内容。我们从主数据集开始，抓取了我们感兴趣的列，删除了我们不再需要的列，比如
    sector。
- en: And now we have a analytical file， a working data frame that we're going to
    be using for。 the rest of our analysis。 So now that we have this， this do in markdown，
    and you can。 you can see that I didn't change， it over here。 I clicked escape
    so that I was selecting the cell and not inside the cell。 And then I clicked M
    that changes it to a markdown cell。
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个分析文件，一个我们将用于其余分析的工作数据框。既然我们有了这个，我们可以在 markdown 中进行操作，你可以看到我没有在这里更改它。我点击了
    escape，以便选择单元格，而不是在单元格内部。然后我点击了 M，这将其更改为 markdown 单元格。
- en: And I'm just going to make checkpoint and now I'm saying checkpoint。 And the
    way we're going to do this is working to see a CSV。 We're still going to want
    to save it to process data。 And let's do it the other way。 And we're going to
    name it institutions data that CSV。
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我现在要做个检查点。我们要以 CSV 形式进行操作。我们仍然想将其保存为处理数据。让我们用另一种方式做。我们将其命名为 institutions_data.csv。
- en: And we don't it by default pandas do shift tab to see the options。 You see that
    pandas uses index as true by default。 So it would save a column that name it index
    and it would save it and it would save this， over here。 We don't want that。 So
    index equals false。 Let's see what else encoding says none。
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们默认情况下不这样做，pandas 会使用 shift + tab 查看选项。你会看到 pandas 默认将 index 设置为 true。所以它会保存一列并命名为
    index，它会在这里保存。我们不想要这样。因此，index 设置为 false。让我们看看编码还说了什么，没有。
- en: I like to encode use UTF-8 to make sure that we don't lose any special characters。
    My last name hasn't an accent until down it and it always gets lost the viewer
    use UTF-8。 or if you use something else to mess。 And some of these colleges might
    have some special characters。 So it doesn't hurt to be explicit。 Are we going
    to run this？ For we got the first notebook done。
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢使用 UTF-8 编码，以确保我们不会丢失任何特殊字符。我的姓氏没有重音符号，但它总是会在查看器使用 UTF-8 时丢失，或者如果你使用其他东西就会搞乱。而且这些学院可能有一些特殊字符。所以明确一下是没有坏处的。我们要运行这个吗？因为我们已经完成了第一个笔记本。
- en: So now we have in our data you see that it was last month or seconds ago because
    we。 just saved it and processed。 Now we have institutions there。 This is what
    we're going to be using in our other notebooks。 So we have the institution flow
    data。 Now we have county level data from census。 So how are we going to do that
    is using census data download。
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在数据中，你会看到它是上个月或几秒前，因为我们刚刚保存并处理了它。现在我们有机构的数据。这就是我们在其他笔记本中要使用的内容。我们有机构流量数据。现在我们有来自人口普查的县级数据。那么我们将如何做到这一点呢？使用人口普查数据下载。
- en: We don't have， I didn't include the data here。 It's not an external。 It's not
    an interim。 It's not a process data which is not anywhere else。 What we need to
    do is use the census data download tool which is already installed in。 your environment
    to acquire the data from the census。
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们没有，我没有在这里包含数据。它不是外部的。它不是临时的。它不是任何其他地方的处理数据。我们需要做的是使用已经安装的种族数据下载工具，从人口普查获取数据。
- en: We can go to GitHub data desk census data downloader to see how one would do
    this。 So what's available？ A lot of these tables。 We have already installed it
    and if you run the installation instructions and you're running。 this locally。
    It's in our dependencies file in the environment file so you should have it。 And
    the way it works is first you need to export and you don't have to but it's just。
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以去 GitHub 数据桌人口普查数据下载器查看如何操作。那么有什么可用的呢？很多这些表格。我们已经安装了它，如果你运行安装说明并且在本地运行。这在我们的依赖文件和环境文件中，所以你应该有它。它的工作方式是你首先需要导出，虽然你不必这样做，但这只是。
- en: going to make things easier。 Your census API key。 This API key like I mentioned
    earlier in the video you can get from the census you've。 got to sign up。 Give
    them your email。 They're going to send you one right away。 And after that we can
    start using the census data downloader past the year you want to use。 what you're
    asking for and at what level of the other states count as we want county， data。
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使事情变得更容易。你的人口普查 API 密钥。正如我在视频中提到的，这个 API 密钥你可以从人口普查获得。你需要注册。给他们你的电子邮件。他们会立刻发送给你一个。之后我们可以开始使用人口普查数据下载器，传递你想使用的年份，你所要求的内容，以及其他州的数据级别，我们想要的是县级数据。
- en: And what we're going to be looking at is demographics。 Race of necessity。 So
    we're going to use race for here。 And the way we do this we go over here。 Next
    step。 Export census API key and pass your API key。 I already received mine。 We're
    going to get an email like this。 Let's say thank you for your interest。 Here's
    your API key。
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要关注的是人口统计。种族是必要的。所以我们将在这里使用种族。我们这样做的方式是过来这里。下一步。导出人口普查 API 密钥并传递你的 API 密钥。我已经收到了我的。我们会收到一封这样的电子邮件。谢谢你的关注。这是你的
    API 密钥。
- en: We're going to grab that command C。 I'm going to copy it。 And we're here。 I'm
    going to do export。 Census API key equals back。 So now it's right here。 So what
    we're going to do is we're going to do this。 And you saw that how I launched this
    you can click on this plus button over here。
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要抓取那个命令 C。我将复制它。我们在这里。我将进行导出。人口普查 API 密钥等于返回。所以现在它就在这里。我们要做的是这样做。你看到我如何启动这个，你可以点击这里的加号按钮。
- en: This how you would launch another notebook， a console， a Python console， create
    some other， files。 You can launch a terminal from the interpreter lab。 So the
    way this works is census data downloader year equals 2018， which is the latest。
    Data。 Third。 It's going to be because we're at the top level directory is going
    to be on data。 External。
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是你如何启动另一个笔记本、控制台、Python 控制台，创建一些其他文件。你可以从解释器实验室启动终端。它的工作方式是人口普查数据下载器年份等于 2018，这是最新的数据。第三。这将是因为我们处于顶级目录，它将在数据外部。
- en: And what we want is the race tables for race， ethnicity， demographics。 And we
    want it at the county level。 And it one states one on trains。 The county is what
    we're going to work in。 And we'll click enter。 Oh， it's not counting。 Oh yeah。
    count T's。 Click enter。 This is going to take a little bit。 There you go。
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要的是关于种族、民族和人口统计的种族表格。我们希望在县级别获取这些数据。而且一个州在火车上。县是我们要处理的内容。我们将点击输入。哦，它没有计数。哦，是的，县。点击输入。这将花一点时间。好了。
- en: So this is downloading all these variables for each county， right？
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这是为每个县下载所有这些变量，对吧？
- en: So the universe is all of the people in that county universe annotation， whether
    there's。 an annotation universe margin of error and the margin of error annotation。
    The numbers for people who will identify as white people will identify as black
    American， Indian。 Alaska native Asian native Hawaiian Pacific Islander。 Similar
    to a more racist or Latino。 It's done。
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 宇宙是指该县中所有人的宇宙注释，无论是否有注释宇宙的误差范围和误差范围注释。将会有人识别为白人、黑人、美国印第安人、阿拉斯加土著、亚洲人、夏威夷土著和太平洋岛民。类似于更多的拉丁裔或西班牙裔。已完成。
- en: Okay， so we can go check in data。 This was an external and you'll see that it
    created a processed in a raw folder。 The raw folder is it has the names from the
    table。 It has this is from table B zero three zero zero two。 And all these home
    names。 they don't make sense to any human that this work out of the， census。 But
    if you go to processed。
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我们可以去检查数据。这是一个外部文件，你会看到它在一个原始文件夹中创建了一个处理文件。原始文件夹里有表格中的名称。这是来自表B030002的。这些家庭名称对任何人来说都没有意义，这是人口普查的结果。但是如果你去处理过的数据。
- en: they made it easier for us to work with， right？ They created the white alone，
    black alone。 but Indian and American Indian and Alaska native， alone numbers。
    So that was it。 Now we have used this command line tool to get data straight from
    the census。 So what we need to do now is process that data。 Prepare it。 So we're
    going to create a notebook。
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 他们让我们更容易工作，对吗？他们创建了白人、黑人独立的分类，但印度人、美国印第安人和阿拉斯加土著独立的数字。所以就这样。现在我们使用这个命令行工具直接从人口普查中获取数据。现在我们需要做的是处理这些数据。准备它。因此我们将创建一个笔记本。
- en: Let's call it it data prep。 Counting this。 And what we're going to do is we're
    going to put pandas as P。D。 and we do form pathway。 And if you， you may have noticed。
    I'm already doing exactly the same thing as I did on the， other one。 So what you
    can do is trick that you can do and Jupiter lab。
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 我们称之为数据准备。计算这个。我们要做的是将pandas作为P.D。并使用form pathway。如果你注意到了，我实际上在做的和之前的完全一样。所以你可以在Jupiter
    lab中进行的一个技巧。
- en: This is why I like Jupiter lab above the classic， uh， Jupiter notebook。 First。
    you can grab this one， put it on the side and you have to another side， right？
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我喜欢Jupiter lab而不是经典的Jupiter notebook的原因。首先，你可以抓住这个，把它放在一边，然后你有另一边，对吧？
- en: And what you can do is grab this， click shift， highlight these cells。 You can
    click copy or you can just click the key C copy。 You can go over here。 You can
    do paste。 And I took the lead one and you can just， I use X to cut it to the first
    one。 So now we have these cells that we just grabbed from the other one。
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以抓住这个，按住Shift，突出显示这些单元格。你可以点击复制，也可以直接按C键复制。你可以到这里去。可以粘贴。我把第一个提取出来，然后我可以用X剪切到第一个。所以现在我们有了从另一个地方抓取的这些单元格。
- en: So I don't have to write this first cell。 Okay。 I can run it。 Um， I already
    have these。 Run it。 But now we're looking at external data， right？ And you see
    that has that processed and that raw folders and within those。 it has the CSV，
    that it just created。 And we have the checkpoints because we opened them here
    in Jupiter lab。 So first things， we create a data， data frame， PD， read， CSV，
    external。
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我不必写这个第一个单元格。好的。我可以运行它。嗯，我已经有了这些。运行它。但现在我们正在查看外部数据，对吧？你看到它有处理和原始文件夹，并且在这些文件夹中。它有刚刚创建的CSV文件。我们有检查点，因为我们在Jupiter
    lab中打开了它们。所以首先，我们创建一个数据框，PD，读取CSV，external。
- en: I'm going to use the slash again。 This， uh， prefer it。 We're going to go into
    another folder process within it。 So we're going to do another slash。 We're going
    to do ACS five underscore 2018， raise counties CSV data that I had。 And like we
    did before， I'm just going to transpose your radar just so you can see it。 Uh。
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我将再次使用斜杠。这个，呃，更喜欢这样。我们将进入另一个文件夹进行处理。因此我们要再做一个斜杠。我们将做ACS五个下划线2018，抬起县的CSV数据。像之前一样，我只是转置你的雷达，让你能看到它。呃。
- en: much more legible manner。 And we got the G O I D。 Got the name。 We got the universe
    for each of them。 The annotation， the universe， much of error。 And all these columns。
    And just like in institutions， we have this is what would be a master file。 This
    is something that we just got。 This works for what exists for。
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 以更易读的方式。我们得到了G O I D。得到了名称。我们为每一个都有宇宙。注释、宇宙、许多错误。还有这些列。就像在机构中一样，我们有一个主文件。这是我们刚刚得到的。这适用于现有的内容。
- en: but that's not exactly what we want for this project。 So we're going to create
    a subset from this for this project。 And this is going to be our working file
    and analytical file。 Do do do do do。 Okay。 So just like we did before， we're going
    to create a。 Therables of interest list。
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 但这并不是我们这个项目想要的。所以我们要从这个创建一个子集。这个将是我们的工作文件和分析文件。做做做做做。好的。所以就像我们之前做的那样，我们要创建一个感兴趣变量列表。
- en: but you may have seen that。 What we're interested in is these slat underscore
    alone columns， right？
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 但你可能已经看到了。我们感兴趣的是这些带下划线的单独列，对吧？
- en: We want universe and we want alone， alone。 So what we're going to do is instead
    of typing all those。 we can do a list comprehension。 This might be a little， a
    little advanced to beginners。 but these are really cool。 And I think it would
    be useful to go over it。 It's kind of simple in a sense。 And it's good practice。
    So this is how we're going to do this。
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要宇宙，我们想要独自，独自。所以我们要做的是，不是输入所有那些。我们可以使用列表推导式。这对初学者来说可能有点，稍微复杂，但这些真的很酷。我认为回顾一下会有用。从某种意义上说，这很简单。而且是个好练习。所以我们要这样做。
- en: So we're going to create， we're going to grab column for column and data columns。
    Actually。 this right now， if you click on a cell on the outside， and you click
    the key， B。 it creates a cell below the one you have。 So if we do this call for
    column and data columns。 it returns everything。 Right？ Because so we're saying，
    it's a list comprehension saying， okay。
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们要创建，我们要逐列抓取数据列。实际上，现在，如果你点击外面的一个单元格，然后按键B，它会在你当前单元格下面创建一个单元格。所以如果我们这样做列与列和数据列。它返回所有内容。对吧？因为我们在说，这是一个列表推导式，表示，好吧。
- en: grab a call or this could be， this could be anything， right？ For each element
    in this other thing。 So grab the column for each column in the data columns。 And
    what we want to do is， okay。 we have all these。 This is not what we want。 What
    we want is the ones that don't say， M。O。E。 because we want the margin of error。
    And the ones that don't say annotation because we don't need that。
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 抓取一个列，或者这可以是，任何东西，对吧？对于这个其他东西中的每个元素。所以为数据列中的每列抓取列。我们想做的是，好吧。我们有所有这些。这不是我们想要的。我们想要的是那些不显示M.O.E.的，因为我们想要误差范围。还有那些不显示注释的，因为我们不需要那个。
- en: You may have noticed actually， at first we thought， okay， we can do just underscore
    alone。 And then just get rid of this， the one that says annotation and the one
    that says M。O。E。 But universities have underscore alone and name doesn't have
    it and GOD doesn't have， it。 So a better way to filter out the columns that we
    don't want is by， by not including them。
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能注意到了，起初我们认为，好的，我们可以仅用下划线。而且可以去掉那个说注释的和那个说M.O.E.的。但大学有下划线，名字没有，而上帝也没有。所以过滤掉我们不想要的列的更好方法是，不包含它们。
- en: in this list comprehension。 Instead of grabbing the ones that just say underscore
    alone。 let's just get rid of the， ones that we don't want。 So let's do an if statement。
    So if M。O。E。 is not in call。 So we got rid of all the ones that don't have， if
    there's an M。O。E。 inside the call string， I want it。 Drop it。 So that's the first
    filter you get to do。
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个列表推导式中。我们不去抓取那些仅显示下划线的。让我们去掉那些我们不想要的。所以让我们做一个if语句。如果M.O.E.不在列中。所以我们去掉所有没有的，如果在列字符串中有M.O.E.，我想要它。去掉它。所以这是你要做的第一个过滤。
- en: And we don't want annotation either， right？ So and annotation not in call。 See，
    boom。 this is exactly what we wanted， right？ We have GOD， we have name， universe，
    all the white， black。 American， Indian， all that's， got native， Asian， Native
    Hawaiian， Pacific Islander， other to Latino。 all those that， are alone。 So we
    have those and we just have state county， Asian zone。
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也不想要注释，对吧？所以注释不在列中。看，碰。这正是我们想要的，对吧？我们有上帝，我们有名字，宇宙，所有的白人，黑人，美国人，印度人，所有的，本土的，亚洲人，土著夏威夷人，太平洋岛民，其他拉丁裔。所有那些，都是独自的。所以我们有这些，我们只是有州和县，亚洲区。
- en: all their home。 So this is the list comprehension， what we're going to do， command
    C。 and copy and paste， over here。 That's our list of variables of interest。 Just
    like we did the other one。 Now we're going to create a working data frame， working
    data。 You can be working， as you can call it， whatever you want， I call it working
    data or working。
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 所有他们的家。所以这是列表推导式，我们要做的是，命令C。复制并粘贴到这里。这是我们感兴趣的变量列表。就像我们之前做的那样。现在我们要创建一个工作数据框，工作数据。你可以称之为工作，随你喜欢，我称它为工作数据或工作。
- en: with the F， it depends。 And absolutely nothing is just complete or random。 They
    should be more standardized。 That copy， because we mentioned before it。 we want
    a copy of that data frame， we don't， want it to kind of like a window into it。
    Run that。 let's make sure that it's working。 That hit， boom。 This is what we got。
    This is what we wanted。
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 对于F，它取决于。而且绝对没有什么是完整或随机的。它们应该更标准化。那份副本，因为我们之前提到过。我们希望那份数据框的副本，而不是像一个窗口那样。运行一下。让我们确保它能正常工作。成功了。这就是我们得到了的。这就是我们想要的。
- en: Okay。 Now that we have created this subset， you can save it。 This is what we
    wanted。 I'm going to click ask the skip key。 I'm going to click the M key。 So
    it is now a markdown file。 I mean a markdown down cell。 That， let me just pound，
    not hashtag。 That's a good point。 We're going to save it。 Working data to CSV。
    This one's going to be a processed slash count T's。
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 好的。既然我们已经创建了这个子集，你可以保存它。这正是我们想要的。我将点击跳过键。我将点击M键。所以现在它是一个markdown文件。我是说，一个markdown单元格。那，让我只用`#`，不是井号。这是一个好点子。我们要保存它。工作数据导出为CSV。这将是一个处理过的斜杠计数T的文件。
- en: That's CSV。 Again， we don't want the index。 False。 And encoding。 This one is
    kind of redundant。 I'm pretty sure these will find coding。 You can check in our
    process data。 Now we have the county CSV and the institution's data CSV。 All right。
    So now we have these。 And we can start answering our research questions。 Awesome。
    Let's go to the book。 Let me create。
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这是CSV。再次强调，我们不需要索引。假。编码。这有点冗余。我敢肯定这些会找到编码。你可以在我们的处理数据中检查。现在我们有县的CSV和机构数据的CSV。好的。所以现在我们有这些。我们可以开始回答我们的研究问题。太好了。让我们去书里。让我创建。
- en: Let's call this research question one is where the fun starts。 We're going to
    use this。 I'm going to show you how to do it。 I'm going to call this and make
    this a markdown file。 Research question one。 How many higher education institutions
    are found in cities， counties， cities。 and majority， of the right， represented
    groups？ And then we have a sub-sub research question。
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们称这个研究问题为第一，乐趣从这里开始。我们将使用这个。我将向你展示如何做到这一点。我将称之并创建一个markdown文件。研究问题一。有多少高等教育机构位于城市、县和主要的，代表性群体？然后我们有一个子子研究问题。
- en: What are the statistics of those institutions？ Right？ Do they vary？ Are they
    the same？
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这些机构的统计数据是什么？对吗？它们有变化吗？它们是一样的吗？
- en: What's going on？ Let's run this。 Okay。 So first we're going to do the same thing
    in port。 We're going to import GOPANDUS as PD。 This one I'm going to do from scratch
    instead of copying it from the other ones because we're。 going to import some
    new ones。 We're going to import GOPANDUS as GPD。 We're going to import GOPOT as
    GPT。 It's going to be confusing， so make sure that you type right。
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 怎么回事？让我们运行这个。好的。所以首先我们将在端口做同样的事情。我们将导入GOPANDUS作为PD。我将从头开始，而不是从其他地方复制，因为我们要导入一些新的。我们将导入GOPANDUS作为GPD。我们将导入GOPOT作为GPT。这会让人困惑，所以确保你输入正确。
- en: The GPD I usually do GDP because social science import GOPOT that's CRS。 S，
    G， CRS。 And this is the CRS and GIS is the coordinate reference of systems。
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我通常将GPD写作GDP，因为社会科学导入GOPOT就是CRS。S，G，CRS。这是CRS和GIS，即坐标参考系统。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_13.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_13.png)'
- en: '![](img/3d542d062784efc24cd1e1e82252239d_14.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_14.png)'
- en: And this is about projections。 This is what tells us and it tells people how
    to display the coordinates and the shape。 files onto a two-dimensional plane。
    So you've seen the way that you have certain type of projections。 Alaska。 I mean，
    Greenland looks huge。 And then if you see it on the globe， it's not as big。 Those
    are different types of projections。 I'm not going to go too deep into this。
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这与投影有关。这告诉我们以及人们如何在二维平面上显示坐标和形状文件。所以你已经见过某些类型的投影。阿拉斯加。我是说，格林兰看起来很大。而如果你在地球仪上看到，它并没有那么大。这些是不同类型的投影。我不会深入探讨这个。
- en: but that's what it is。 And we're importing it because GOPLOT provides an easy
    way to change projections without。 you having to do all the math。 We're going
    to import MATPLOT LIBPIPLOT as POT because we're going to do anything with the。
    figures， map titles， et cetera， et cetera。 And we're going to do pathlib and port
    path， date time。 import date time as DT。 And I recommend doing the as DT because
    it gets confusing when you import date time from。
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 但这就是它的本质。我们导入它是因为 GOPLOT 提供了一种简单的方法来更改投影，而你无需做所有数学计算。我们将导入 MATPLOT LIBPIPLOT
    为 POT，因为我们将处理图形、地图标题等。我们还将导入 pathlib 和 port path，以及 date time。将 date time 导入为
    DT。我建议使用 DT，因为从中导入 date time 时会让人感到困惑。
- en: date time。 What you can do wherever it goes。 DT， we're using today。 That's the
    error of the time。 We're doing the day。 We're doing the mark of the time name
    with the letters， the two letters。 And doing only two over the year。 And we're
    running today to make sure that we got it。 Yay。 And if you're running this locally，
    of course， if you created the environment， it should， work。
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: date time。你可以在任何地方使用它。DT，我们使用今天。这是时间的误差。我们正在处理日期。我们正在标记时间名称的字母，两个字母。只处理年份的前两位。我们正在运行今天，以确保我们得到它。耶。如果你在本地运行这个，当然，如果你创建了环境，它应该可以工作。
- en: If you're running this on binder， it obviously is working。 If it doesn't run
    locally。 for some reason， I would just jump on my binder。 And if you're trying
    to run this locally and then you're running it and you're running。 to an issue
    now， I would just go on my binder and then run the first two， the data prep。 count
    is in the data prep solutions from-- I mean， data prep institutions from the solutions。
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在 binder 上运行这个，它显然是有效的。如果在本地无法运行，出于某种原因，我会跳到我的 binder。如果你试图在本地运行，然后遇到问题，我会直接去我的
    binder，然后运行前两个数据准备。县数据在数据准备解决方案中——我的意思是，数据准备机构在解决方案中。
- en: folder so you can get up to speed。 Working with geographical data and installing
    geo-plod。 geo-pandas， they have a lot of dependencies， that sometimes don't play
    nice locally。 They've been getting a lot better。 Shout out to the people in Condaforge
    that have been making this really great。 It's just way easier to work with these
    from what I remember when it first started and from。
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 文件夹，以便你能够迅速上手。处理地理数据和安装 geo-plod。geo-pandas，有很多依赖项，有时在本地不太兼容。它们已经变得好多了。向 Condaforge
    的人们致敬，他们让这一切变得非常出色。从我记得的情况来看，处理这些要容易得多。
- en: what I hear of people that started waiting for me。 Okay。 so I opened up this
    one because I want to be lazy and copy just these paths so I don't。 have to write
    them。 I'm going to cut this one out。 And that's for my job。 We're going to do
    three on processed data because that's where we just saved everything。 Okay。
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我听说有人开始等我。好的，所以我打开了这个文件，因为我想懒惰一下，只复制这些路径，这样我就不必手动输入。我将剪切这个。这是我的工作。我们将在处理后的数据上做三次，因为我们刚刚保存了一切。好的。
- en: so like we mentioned， you have the check once we can ignore those。 The geo data
    is here。 These are the shape files。 We have our county CSV that we just created
    on the Dataprep County notebook。 We have the institutions data， CSV from the data
    prep institutions notebook。 And what we want is to grab the shape files， the institution
    data files and then county level。
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们提到的，你需要检查一下，我们可以忽略那些。地理数据在这里。这些是形状文件。我们在 Dataprep County 笔记本中刚创建的县 CSV。我们有来自数据准备机构笔记本的机构数据
    CSV。我们想要的是获取形状文件、机构数据文件，然后是县级。
- en: data file read them all into data frames or geo data frames and play around
    with all， those。 So counties， institutions， shape files， counties and institutions
    are CSV files。 So the site works counties。 We're going to call it counties data
    because we also have the shape files for the council。 Counties data， PD read，
    CSV， processed data。 I do tab auto complete to make sure that I don't have any
    typos which usually happens。
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 数据文件读取将所有数据导入数据框或地理数据框，并对所有这些进行操作。因此，县、机构、形状文件、县和机构都是 CSV 文件。因此，该站点工作于县。我们将其称为
    counties data，因为我们也有委员会的形状文件。县数据，PD 读取，CSV，处理后的数据。我使用制表符自动完成，以确保没有拼写错误，这通常会发生。
- en: Process data， we're going to do counties that CSV。 We're going to do institutions
    data。 And county shapes。 This one's not going to be PD because it's not pandas
    is GPD。 And it's not read。 it's read file。 You can do read and then do tab to
    see what are the options。 You could read a CSV file post GIS。 But I do is read
    file for this。
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 处理数据时，我们将使用 counties.csv。我们将处理机构数据和县的形状。这个不会是 PD，因为它不是 pandas，而是 GPD。而且它不是读取，它是读取文件。你可以进行读取，然后按
    tab 键查看选项。你可以读取 CSV 文件或 post GIS。但是我为这个用的是读取文件。
- en: What's going on here in the geo data folder is going to be processed data that
    geo data。 because that's the set folder it's in and TL 2019 US county that shape
    that does the。 file that we want and geo panist is smart enough to know that when
    you point to that。 SHP file that it's in a folder with the DBF the CPG the PRJ。
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在 geo 数据文件夹中正在处理的数据是 geo 数据。这是它所在的文件夹，TL 2019 美国县的形状文件正是我们想要的。geo pandas 足够聪明，知道当你指向那个
    .SHP 文件时，它是在一个包含 DBF、CPG、PRJ 的文件夹中。
- en: So you just get a point to that one and it's going to read it all。 And we're
    going to run this。 Yay。 So let's counties data。 This is a transpose。 So this is
    what we just did。 Institutions data。 Same。 That's why it's just it。 Now this look
    at counties shape。 Oh， my God。 I'm not a change this。 Doesn't really matter。 I
    could have just gone with county shapes but for consistency counties shapes that
    I'm。
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你只需指向那个点，它会读取所有内容。我们将运行这个。耶。让我们来看县数据。这是一个转置。这就是我们刚刚做的。机构数据。同样。这就是它。现在来看县的形状。哦，我的天。我不想改变这个。其实无所谓。我本可以直接用县的形状，但为了保持一致性，我还是用县的形状。
- en: going to do T to transpose it from the end。 And you'll see that we have state
    FIBs code county FIBs code。 Oh， GAD name。 Let me refresh for each county area
    of land area of water。 And this is what geometry this is what geo panist brings
    into the pandas ecosystem。 It adds the ability to have a geometry series a geo
    series that can hold polygons multiple。
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将进行 T 转置操作。你会看到我们有状态 FIBs 代码县 FIBs 代码。哦，GAD 名称。让我为每个县刷新土地面积和水域面积。这就是几何学，这就是
    geo pandas 带入 pandas 生态系统的内容。它增加了处理多边形的几何系列能力。
- en: line streams points and it just knows what to do with that。 So if we do， for
    example。 institutions data that plot。 It just pandas knows that you want to plot
    something right。 It doesn't know what。 So it just adds all the variables。 But
    if we do counties shapes plot。 this is geo pandas and most of your graphical data。
    It's my take a while because it's big。 Oh。
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 行流点，它就知道该怎么处理。所以如果我们做，比如说，机构数据的绘图。它只是 pandas 知道你想绘制某个东西。它不知道是什么。所以它只会添加所有变量。但如果我们做县的形状绘图。这是
    geo pandas，大部分你的图形数据。这可能会花一些时间，因为数据量大。哦。
- en: it knows that you're trying to build these to map these to illustrate your polygons，
    right？
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 它知道你试图构建这些来映射和展示你的多边形，对吧？
- en: So what we want is you'll see that we have Alaska way。 Yeah， everything， right？
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们想要的，你会看到我们有阿拉斯加的方式。是的，一切都对吧？
- en: For simplicity purposes， we're only going to focus on the lower 48。 Apologies
    to everyone outside that is just to make the math more concise for this workshop。
    but you don't have to。 But this is what I'm going to do。 And also to illustrate
    this really cool package called us or us and you can find that on the。
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简单起见，我们只关注下 48 个州。对所有在外的人表示歉意，这只是为了让这次研讨会的数学更简洁。但你不必这样做。这就是我将要做的。同时也为了展示这个非常酷的包，叫做
    us 或者 usa，你可以在上面找到。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_16.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_16.png)'
- en: API。
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: API。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_18.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_18.png)'
- en: Pretty cool。 It's a package that it helps you work with us and us state metadata。
    It has all the states territories， postal abbreviations， FIMP codes， capitals，
    use of， statehood。 time zones。 It's just really cool。 We're not going to go too
    deep into this。 It's very useful anytime we're working with census data， every
    time we're working with。
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 相当酷！这是一个帮助你处理美国各州元数据的包。它包含所有州的领土、邮政缩写、FIMP 代码、首府、州际使用、州籍、时区。真的很棒。我们不会深入探讨这个内容。每当我们处理人口普查数据时，它都非常有用。
- en: geo graphical data in the US。 This is really useful。 So what we want is us state
    contiguous。 And this returns all the states the contiguous United States。 What
    we want is we're going to create this thing。 Let's grab the first one so you can
    see what it is。 So we have state Alabama， but this is not string。 This is a state
    class。
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 美国的地理数据。这真的很有用。所以我们想要的是美国州的连续状态。这返回所有连续的美国州。我们想要的是，我们将创建这个东西。让我们抓取第一个，这样你可以看看它是什么。所以我们有州阿拉巴马，但这不是字符串。这是一个州类。
- en: So you can access it's actually state fibs。 State name。 Yeah。 State that abbreviation。
    Yeah。 Okay。 So what we want is the fibs codes of the states and the contiguous
    United States。 So what we want。 we're going to grab the fibs for each of the states
    and the contiguous， United States。 And just like we did before， we can do that
    by starting on this comprehension。
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你可以访问它，实际上是州fib。州名。对。州的缩写。对。好的。所以我们想要的是州的fib代码和连续的美国。我们想要的。我们将抓取每个州和连续的美国的fib。就像我们之前做的那样，我们可以通过从这个理解开始来做到这一点。
- en: We're going to have grab state for state and us contiguous。 It returns all the
    states just like we did before。 But what we want is the fibs of each of those
    states， right？ For now。 Okay。 So contiguous fibs。 And what we want is great。 What's
    called the mask to the us。 Fips。
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要获取州的连续状态。它返回所有州，就像我们之前做的那样。但我们想要的是这些州的fib，没错吧？现在是这样。好的。连续的fib。而我们想要的是很棒的。所谓的对我们的掩码。Fips。
- en: which is what we're going to use to filter out the shapes that are not in。 So
    it's not in。 So grab that state of B is in contiguous fibs。 So this is saying。
    grab the state F P column of the county shapes data frame and check， each of those
    elements。 If each of those element is in the list， contiguous fibs， and that's
    going to return true or false。
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们要用来过滤不在其中的形状。所以它不在。所以抓取州B是否在连续fib中。所以这在说。抓取县形状数据框的州F P列，并检查每个元素。如果每个元素在列表中，连续fib，这将返回真或假。
- en: For each of those elements， right？ True， so what we can do is use this to filter
    out all the falsees。 So when you pass pandas， a list of truths and falses attached
    with the index， it's going。 to tell you whether or not it tells pandas whether
    or not you want to see that in your， data。 You want to filter out any rows that
    don't match any of these conditions and this way。
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个元素，没错？确实，所以我们可以用这个过滤掉所有的假值。所以当你传递pandas，一个附带索引的真值和假值列表时，它会告诉你是否想在你的数据中看到它。你想要过滤掉不匹配这些条件的任何行。
- en: you create the mask。 So what we're going to do is overwrite these counties shapes。
    So now it's only contiguous counties。 And we're going to want to do the same thing
    for the institution's data。 The institution's data is not using fibs code， it
    has fibs code here， but it's using state， names。 So what we want to create， we
    could do us has this mapping。 It has a capability to return。
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 你创建掩码。所以我们要做的是覆盖这些县形状。所以现在只有连续的县。我们还想对机构数据做同样的事情。机构数据没有使用fib代码，它这里有fib代码，但使用的是州名称。所以我们想创建的，我们可以做美国有这个映射。它有返回的能力。
- en: So we want name to fibs and it creates a dictionary that we can use to map and
    to appendices and。 create and transform state names into state fibs codes。 So
    we could do that and then reuse contiguous fibs。 And actually let's try that because
    it's a good practice。 Let's see。 We're going to use this。
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们想要名称到fib，并创建一个字典，我们可以用它来映射和附录，并将州名称转换为州fib代码。所以我们可以这样做，然后重用连续fib。实际上，让我们尝试一下，因为这是一个很好的练习。让我们看看。我们将使用这个。
- en: We're going to name it name to fibs map。 And the way you do that is institutions
    data。 we grab a series is the fibs state code and， we use map the new set of values。
    And we pass it as dictionary into fibs map。 And what？
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将其命名为名称到fib映射。这样做的方法是机构数据。我们抓取一个系列，这是fib州代码，并使用映射新的值集。我们将其作为字典传递到fib映射中。那么？
- en: It changes all those names into their corresponding fibs code。 And we can rewrite
    that same series。 call it instant to shins data。 Let's go back and get fibs state
    code。 It's the institutions。 And now if you look at institutions data， fibs code，
    we change it to this。 So we cannot use mask continuous fibs institutions because
    they have different indices， which。
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 它将所有那些名称转换为对应的fib代码。我们可以重写相同的系列。称其为即时到达数据。让我们回去获取fib州代码。它是机构的。现在如果你查看机构数据，fib代码，我们将其更改为此。所以我们无法使用掩码连续fib机构，因为它们具有不同的索引。
- en: is what it's also important here in pandas。 You could not use the same mask
    because the mask。 this mask is not a list of values。 It's this truth and false
    is， but it's a pandas series。 And so it's attached to this to an index and the
    index is supporting。 So we're going to create a new mask continuous fibs。
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 中，这也是重要的。你不能使用相同的掩码，因为这个掩码。这个掩码不是一个值的列表。它是这个真假值，但是它是一个 pandas 系列。因此它与一个索引关联，索引是支持的。所以我们将创建一个新的掩码连续的
    fibs。
- en: continuous fibs institutions equals institutions， data。 And then we can write
    the same text。 And then we can write the same text and the same message。 And then
    we can write the same message。 And then we can write the same message。 And then
    we can write the same message。 And then we can write the same message。 And then
    we can write the same message。
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 连续的 fibs 机构等于机构，数据。然后我们可以写相同的文本。然后我们可以写相同的文本和相同的信息。然后我们可以写相同的信息。然后我们可以写相同的信息。然后我们可以写相同的信息。然后我们可以写相同的信息。然后我们可以写相同的信息。
- en: And then we can write the same message。 And then we can write the same message。
    And then we can write the same message。 And then we can write the same message。
    And then we can write the same message。 And then we can write the same message。
    And then we can write the same message。 And then we can write the same message。
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以写相同的信息。然后我们可以写相同的信息。然后我们可以写相同的信息。然后我们可以写相同的信息。然后我们可以写相同的信息。然后我们可以写相同的信息。然后我们可以写相同的信息。然后我们可以写相同的信息。
- en: And then we can write the same message。 And then we can write the same message。
    So we have our working data。 We have the shapes and the counties and the institutions。
    But the question is how many institutions， higher education institutions are in
    the counties。 where there's a majority of underrepresented groups？
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以写相同的信息。然后我们可以写相同的信息。所以我们有我们的工作数据。我们有形状、县和机构。但问题是，县里有多少所高等教育机构是代表性不足的群体的多数？
- en: So we need to find what's majority underrepresented groups。 And one way to do
    that is with this county's data。 That's how we're going to find out which counties
    are majority underrepresented。 So the way to do that is we're going to write，
    we're going to create a new column， counties。
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们需要找出什么是代表性不足群体的多数。找到这一点的一种方法是使用这个县的数据。这就是我们要找出哪些县是代表性不足的多数的方式。所以做到这一点的方法是我们将写，我们将创建一个新的列，县。
- en: data share underrepresented。 And that's going to equal my local apprentice。
    It's going to be a bunch of other columns。 These data， black alone plus counties
    data。 Latino alone plus counties data， American Indian， and Alaska Natives， counties
    data。 native Hawaiian。 And actually we can break it down a little bit。
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分享代表性不足。这将等于我的本地学徒。它将包含许多其他列。这些数据，黑人单独加上县的数据。拉丁裔单独加上县的数据，美国印第安人和阿拉斯加土著，县的数据。夏威夷土著。实际上，我们可以稍微细分一下。
- en: Just to make sure that if we run in this in apprentices， it's just going to
    work。 So you have to worry about the potential。 Okay。 So we have black Latino，
    American， Indian。 and Native Hawaiian。 And I mean you can include two or more
    races or other。 But these are the major groups of historically underrepresented
    people in higher education。
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 只是为了确保如果我们在学徒中运行这个，它会正常工作。所以你必须担心潜在的问题。好的。所以我们有黑人、拉丁裔、美国人、印第安人和夏威夷土著。我的意思是你可以包含两个或更多种族或其他。但这些是高等教育中历史上代表性不足的主要群体。
- en: So we're going to add all those up and we're going to divide it by counties
    data， a universe。 which is all the people in their county。 Let's see if this works。
    I have counties data。 Let's see。 Let's do this， let's close it。 So we have created
    a share underrepresented。 And this is zero to one。 This is a percentage of people
    of underrepresented backgrounds or these four racial ethnic backgrounds。
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们将把所有这些加起来，并将其除以县的数据，即一个总体。这是该县所有人的数据。看看这是否有效。我有县的数据。让我们看看。让我们这样做，先关闭它。所以我们已经创建了一个代表性不足的分享。这是零到一。这是代表性不足背景的人，或这四个种族民族背景的百分比。
- en: in that county。 So， why we're counting Alabama， 52% underrepresented in the
    higher education system。 historic under， a percent in the higher education system。
    Baldwin County， Alabama， 15%。 And county。 11%。 So even around here， you already
    started seeing some variation， which is always interesting。 in the research context。
    So now we have the column that we're going to use to see or to answer our question。
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在那个县。因此，为什么我们在阿拉巴马州计算，高等教育系统中52%的人群被低估。历史上，在高等教育系统中不足一个百分点。阿拉巴马州鲍德温县，15%。而县，11%。所以即使在这里，你已经开始看到一些变化，这在研究背景中总是很有趣。因此，现在我们有了一个列，我们将用它来看看或回答我们的问题。
- en: So we're going to use just like we did the working files for the other， for
    our earlier， stuff。 We're going to create a subset of even a smaller subset of
    each of the data frames that we're。 working on。 Because now that we have this，
    we only want really GID to match the name。 maybe University， of Vermont， but it's
    mostly share underrepresented。 That's where we're after。
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将像之前处理其他工作文件时那样使用它。我们将创建一个每个数据框的更小的子集，因为现在我们拥有这些，我们只想让GID与名称匹配。也许是佛蒙特大学，但主要是共享的低估。那就是我们所追求的。
- en: So we're going to create subset count Ts data and it's going to be count Ts
    data。 And we're going to put our variables of interest， GID， one name。 And we
    want to share underrepresented。 That's one thing we want。 And we want to copy
    them。 We're going to do the same for our water shapes， so we don't want just everything
    we don't。
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们将创建子集县数据，它将是县数据。我们将放置我们感兴趣的变量，GID，一个名称。我们想要共享的低估。这是我们想要的一件事。我们也想复制它们。我们将对我们的水形状做同样的事情，因此我们不想要所有的内容。
- en: care about。 For example， the area that's land and the area that's water for
    each county， right？
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 关注。例如，每个县的陆地面积和水域面积，对吧？
- en: It might be interesting that we have that。 It might be another question。 Are
    there less institutions？ Are there less higher education institutions and counties
    without water？
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 我们拥有这些可能很有趣。这可能是另一个问题。是否有更少的机构？是否有更少的高等教育机构以及没有水的县？
- en: We're going to do some counties with shapes。 We're going to put a subset of
    variables of interest。 GID， we also want the name and the， geometry。 And this
    is something that you may not have noticed right away。 but if you've been working，
    it with census data before， if you know FIBs codes and GID codes。 you would know
    that， it's five digits。 It's two digits for the state in Alabama。
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将处理一些有形状的县。我们将放置一个感兴趣变量的子集。GID，我们还想要名称和几何图形。这是你可能一开始没有注意到的事情，但如果你之前处理过人口普查数据，如果你知道FIBs代码和GID代码，你就会知道，它是五位数字。阿拉巴马州是两位数字。
- en: zero one and three digits for the county。 So it should be a total of five digits。
    The problem here is that subset， counties， data， data types， that's why you check
    these。 Our GID is coded as an integer。 So the first zero is not。 it doesn't matter
    if you're working with actual numbers because， they're codes。
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 县的数字应该是零、一和三位。因此总共应该是五位数字。这里的问题是子集、县、数据、数据类型，这就是你检查这些的原因。我们的GID被编码为整数。所以第一个零不重要。如果你正在处理实际数字，因为它们是代码。
- en: So we need to change this first into a string and then add the zeros on the
    left。 And the way we do that is by using the Z-fill attribute， the Z-fill method
    on this string。 So subsets。 So how do you grab a series？ I call them from a geodata
    frame from a data frame。 square brackets。 We're going to grab GID。 So this is
    what we have。
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们需要先把这个转换为字符串，然后在左侧添加零。我们这样做的方法是使用Z-fill属性，即在这个字符串上的Z-fill方法。那么子集。那你如何抓取一个系列？我从地理数据框调用它们，从数据框。方括号。我们将抓取GID。这就是我们所拥有的。
- en: You can also see here that the text int 64。 So what we want is first transforming
    to a string。 So we're going to cast string as a type for generating。 We run it。
    Now it's the type object。 which is how pandas calls anything that's not an integer
    or a， float or boolean。 I think in pandas 1。0 now you have a string detect， but
    that's not what we want。 So as type。
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在这里看到文本是int 64。所以我们想要的是首先转换为字符串。我们将把字符串转换为生成的类型。我们运行它。现在它是对象类型。这是pandas对任何非整数、浮点数或布尔值的称呼。我想在pandas
    1.0中你有一个字符串检测，但这不是我们想要的。因此作为类型。
- en: I mean it doesn't matter， but not important。 So the way we apply string methods
    to a series。 just like we did earlier， is by the string， accessor。 We're going
    to do SDR and then we can actually call string methods onto it。 Z-fill and we're
    going to do five because we want five for it to fill up to five。
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 我的意思是这无关紧要，但不重要。我们对一个系列应用字符串方法的方式，就像我们之前做的，是通过字符串访问器。我们将做SDR，然后我们实际上可以调用字符串方法。Z-fill，我们要填充到五个，因为我们希望它填充到五个。
- en: Now you have this zero before， below before， which is important because in our
    county， shapes。 it actually， you can't see here， you can see counties shapes。
    We do sample。 it will grab five random sample。 It's going to grab at least one，
    but you can specify five。 It's going to grab five random rows instead of instead
    of the first five that you do ahead。
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你有这个零在之前，这很重要，因为在我们的县形状中。实际上，你在这里看不到，但你可以看到县形状。我们做采样。它会抓取五个随机样本。它会至少抓取一个，但你可以指定五个。它会抓取五个随机行，而不是你提前做的前五个。
- en: All perfect。 So here， gram county is 08049。 So GID here does have that zero
    at the beginning。 And for us to join the data onto the shape， we need them to
    match。 That's what we need to do all of this。 We need to add those zeros here。
    Now that we know that this works， we're just going to overwrite that series。
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 一切完美。所以这里，格拉姆县是08049。这里的GID确实在开头有那个零。为了将数据连接到形状，我们需要它们匹配。这就是我们需要做所有这些的原因。我们需要在这里添加那些零。现在我们知道这有效，我们将覆盖那个系列。
- en: So we're going to do the set count t's data GID equals BAM。 Okay， the way to
    do this now。 because we're going to join them is we're going to do subset， county
    data， set index count t's。 We want the GID to be the index， right？ To make sure
    that these are unique and to make sure that one we join them。 we're just， going
    to join on the index to make sure that the data frames know that that's what we
    want。
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们要做的是设置计数t的数据，GID等于BAM。好的，现在的做法是，因为我们要将它们连接起来，所以我们要做子集，县数据，设置索引计数t。我们希望GID作为索引，对吧？为了确保这些是唯一的，并确保我们连接它们时，数据框知道这就是我们想要的。
- en: Subset county's data， set G to index。 And we can do just like the area。 Subset
    county's data equals that。 This is returning that same data frame。 So we're just
    going to overwrite it。 Are we going to do the same with subset county's shapes。
    subset county's shapes， set index， geo-pand D。 BAM。 And let's join them。
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 子集县的数据，设置G为索引。我们可以像区域一样做。子集县的数据等于这个。这返回相同的数据框。所以我们只是要覆盖它。我们将对子集县的形状做同样的事情。子集县的形状，设置索引，geo-pand
    D。BAM。让我们连接它们。
- en: Now what we want is we have the statistics， we have the demographics and we
    want data frame。 the county's data data frame。 And we have the shapes onto another
    data frame。 And what we want is to be able to match those。 So we know this shape
    has these characteristics。 This county over here has X amount of X share of underrepresented
    people。 And that is the same。
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想要的是，我们有统计数据，有人口统计信息，我们想要数据框，县的数据框。我们还有形状在另一个数据框中。我们想要的是能够匹配这些。因此，我们知道这个形状有这些特征。这个县在这里有X数量的X份额的代表性不足的人。这是相同的。
- en: So when we create the maps， we can say， okay， this is the shape， color it based
    on this column。 on their share under represented attribute。 So we're going to
    join them by saying subset， counties。 shapes， join， we're going to join， the subset，
    counties data， see if this works。 Perfect。 And this is doing the matching automatically
    on the index。
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 所以当我们创建地图时，我们可以说，好的，这是形状，根据这一列着色。在它们的共享中，代表性不足的属性。所以我们要通过说子集，县。形状，连接，来连接它们，看看这是否有效。完美。这是在索引上自动匹配。
- en: That's why we make sure that that we set the indexes indices to be geoid and
    not the， zero one。 which meant nothing。 The values didn't add any information
    to it。 Okay。 so now we have each of these has a name from the geo data frame and
    a name from the， county's data。 which we got from from the census， both from census，
    but this from the， census data downloader。
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么我们确保将索引设置为geoid，而不是零一。这毫无意义。值没有添加任何信息。好的，所以现在每一个都有来自地理数据框的名称和来自县数据的名称。我们从普查中获得了这些，都是来自普查，但这是来自普查数据下载器。
- en: And you can see， I included the name， we didn't have to include the name， but
    I included the。 name as a way for us to check and make sure that we didn't do
    something wrong right away。 So we see a gilmer， we have Gilmer County， Georgia，
    that we're so we're so county Georgia。 So it's it's it's a quick reality check
    on our data。
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 而且你可以看到，我包括了名字，我们本来不需要包括名字，但我加上了名字，以便我们检查一下，确保我们没有立刻做错什么。所以我们看到Gilmer，我们有乔治亚州的Gilmer
    County，所以这是我们，乔治亚州的县。所以这是我们数据的一个快速现实检查。
- en: We're going to call this working GDF for working geo data frame， right？
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把这个叫做工作GDF，作为工作地理数据框，对吧？
- en: And you don't need to do the copy because it's a brand new data frame。 All righty。
    So now we have this let's see if let's see how we look in， let's do it。 I'm adding
    the semicolon because watch， if you don't do the semicolon， you get this。 Just
    kind of ugly。 This is one way to keep things a little bit cleaner。
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要复制，因为这是一个全新的数据框。好的。现在我们有了这个，让我们看看，我们来做吧。我添加分号是因为看，如果你不加分号，你就会得到这个。就有点丑。这是保持事情稍微整洁的一种方式。
- en: So this is the default illustration for for geo data frames。 And I think we
    can do column equals share under represented right？
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这是地理数据框的默认插图。我想我们可以做列等于分享代表性不足的人对吧？
- en: And we can start looking at how things how the country looks in terms of under
    represented， people。 historically under represented people in the and the higher
    education system in。 the United States seem to be around the south Texas here
    by the border。 And these areas over here。 which makes sense because this kind
    of looks how just a general。
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以开始看看这个国家在代表性不足的人群方面的情况。在美国的高等教育系统中，历史上代表性不足的人群似乎在德克萨斯州南部的边界附近。这些地区看起来合理，因为这就是一种普遍的情况。
- en: population distribution would look like。 These aren't those areas where there's
    more people in the United States。 But this is why we include it。 Geoplot， Geoplot
    makes things prettier by default。 So we're going to do is create a GPT， GOPlot
    and do a this what's called the core playoff。 And we're going to pass the C shift
    tab。 The DF is going to be working。 GDF。
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 人口分布看起来会是这样的。这些不是美国人更多的地方。但这就是我们包含它的原因。Geoplot，Geoplot默认让事情更美观。所以我们要做的是创建一个GPT，GOPlot并进行一个所谓的核心玩法。我们将传递C
    shift tab。DF将会工作。GDF。
- en: The projection is going to be G C R S and real geographers are going to hate
    me。 I went to NACES last year， the North American conference for information。
    North American cardographic information society， their conference last year presented
    on how。 to make maps with Python。 And right before my presentation， I went to
    the poster session。
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 投影将是GCRS，真正的地理学家会讨厌我。我去年参加了NACES，北美信息会议，北美制图信息学会，去年他们的会议上展示了如何用Python制作地图。在我演讲之前，我参加了海报会议。
- en: And there was this little area where you could leave post-it notes for other
    people to see。 those tips， tricks， whatever you felt like sharing。 And these are
    anonymous。 And someone wrote。 "Do not use a web mercator or stop using web mercator。"。
    And I had with my presentation that I was going to do later that day。
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个小区域，你可以在上面留下便条让其他人看到。这些提示、技巧，无论你想分享什么。这些都是匿名的。有人写道：“不要使用网络墨卡托或停止使用网络墨卡托。”我当时有一个演讲，要在当天稍晚进行。
- en: All the examples I was using was web mercator。 It just works。 especially when
    you're looking at one country， the US， specifically， which， works。 So it's fine。
    This one takes it a little bit longer。 But you'll see the difference。 So this
    is the default in Mapla Live。 It's already great， right？ You can still see the
    information。
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用的所有例子都是网络墨卡托。它就是好用。尤其是在看一个国家时，尤其是美国，这很好。所以没问题。这个稍微花点时间。但你会看到区别。所以这是Mapla
    Live的默认设置。已经很棒了，对吧？你仍然可以看到信息。
- en: If you don't know Mapla Live， you might have to， maybe， Google， "Oh， how do
    I get， rid of the axes？
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '如果你不知道Mapla Live，你可能需要，或许，谷歌一下，“哦，我该如何去掉坐标轴？” '
- en: How do I add a title？"， Blah， blah， blah。 But with GPLT Core Play， it just kind
    of works。 It's pretty nice。 Okay， well， this is working。 All this is going on。
    Let's do-- let's start working on our institutions。 So we have a data frame with
    our institution's data， right here， and it has a longitude and。
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: “我该如何添加标题？”等等。但是有了GPLT Core Play，它就是这样工作的，挺不错的。好的，这就可以了。所有这些都在进行中。让我们开始处理我们的机构。所以我们有一个包含我们机构数据的数据框，就在这里，它有经度和。
- en: a lot of-- this is still a tabular data。 This is still from a CSV。 But a longitude
    and a latitude are characteristics of a geography， of a point。 There's the X and
    the Y。 What we want is to change this from a regular Pandas data frame into a
    geo data frame and。 create that geometry column。 And the difference is that instead
    of polygon。
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 很多——这仍然是一个表格数据。这仍然来自CSV。但是经度和纬度是地理的特征，是一个点。有X和Y。我们想要的是将其从常规的Pandas数据框转换为地理数据框，并创建几何列。区别在于，它不是多边形。
- en: what we want is our points。 And these points are going to come from anish-tun-laritude。
    So let's see how we do that。 We're going to do GPD， geo data frame。 We're going
    to pass it the institutions data。 We're going to do G on the tree equals GPD。
    And we're going to call it the function point from X， X， Y。 That's what it's going。
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要的是我们的点。这些点将来自经纬度。所以让我们看看如何做到这一点。我们将使用GPD，地理数据框。我们将传递机构数据。我们将在树上做GPD。我们将调用函数点来自X，X，Y。这就是它要做的。
- en: And we're going to pass it the series institutions data longitude and the institutions
    data added。 to--， Just check that。 That's what it is。 Oh， look。 GPLT， geo blood。
    It worked。 Again。 it looks pretty much the same， but it's slightly nicer。 The
    default figure size is a little bit bigger。 There's no axes。 But the colors are
    the same。
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将传递系列机构数据的经度和机构数据的纬度。只需检查一下。这就是它。哦，看。GPLT，geo blood。它工作了。再次。它看起来差不多，但稍微好一点。默认图形大小大一点。没有坐标轴。但颜色是一样的。
- en: The lines are the same。 So I prefer to use GPLT because when things are slightly
    better to look at right from the。 top， it's just less cognitive work that I have
    to do。 I don't have to zoom in and I don't have to ignore the axes。 It just goes
    in。 It's pretty nice。 So let's try this。 We're creating a geo data frame from
    the institutions data and we're saying create the。
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 线是一样的。因此，我更喜欢使用GPLT，因为当事情稍微好看一点时，从顶部看起来会更轻松，我不需要放大，也不需要忽视坐标轴。它就进来了。这很不错。让我们尝试一下。我们正在从机构数据创建一个地理数据框，并且我们在说创建。
- en: geometry column from these points from the longitude and latitude。 Let's run
    this。 Good。 Also。 I'm checking that as a third。 It's points。 Now we have this
    and I have this geometry column and you can see that it's a point geometry。 So
    let's just work it。 Let's just save it as geo institutions。 Remember when I mentioned
    that there's CRS， the coordinate system。 So let's see。
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 从这些经纬度点创建几何列。让我们来运行这个。好。还有。我检查了作为第三个。这是点。现在我们有了这个几何列，你可以看到这是一个点几何。因此，让我们来处理一下。我们将其保存为geo
    institutions。记得我提到过有CRS，坐标系统。让我们看看。
- en: You'll notice that working GDF， CRS， the coordinate system for this one， it's
    set up。 It comes from the data。 That's one of those multiple files from the shape
    files。 This information comes from there and it tells you a lot about how to display
    this information。 this geographical information。 And if we do that for our geo
    institutions。
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到GDF，CRS，这个坐标系统已经设置好了。它来自数据。这是多个来自形状文件的文件之一。这些信息来自那里，并且告诉你如何显示这些信息。这些地理信息。如果我们为我们的geo
    institutions这样做。
- en: it doesn't have anything because we just created， from the longitude latitude
    but we didn't specify the bounds。 we didn't specify what， if it's using degrees
    or if it's using meters， et cetera， et cetera。 But we do know that it's using
    degrees because we can see it here。 These are not like under native meters from
    whatever point。
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 它没有任何内容，因为我们刚刚创建了经纬度，但我们没有指定边界。我们没有指定是否使用度数或米等。但我们知道它使用度数，因为我们在这里可以看到。这些不是从任何点的本地米。
- en: So what we can do is just copy that from the other one。 And now it just works。
    This is going to save you some warnings later on and the process is just， you
    might as well， get it。 And from right now， what you can do is， let's do a GPLT，
    a point plot using geo institutions。 Okay。 so we can see these are all the institutions
    in the country。 Obviously。
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们可以直接从另一个复制。现在它就可以工作了。这将为你节省一些警告，过程也更简单，你完全可以这样做。从现在开始，你可以做一个GPLT，使用geo institutions的点图。好吧。因此，我们可以看到这些都是全国的机构。显然。
- en: these are some houses and pallets a lot or more。 Maybe a way to combine this
    one with this one right here。 So we can see， our institutions are finding outcomes
    with majority under represented groups。 and why are characteristics out of those
    institutions。 So we can do first visually。 throw it on top of it and then say，
    oh， is the majority here。
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是一些房屋和托盘，很多或更多。也许将这个与这里的这个结合起来的方式。所以我们可以看到，我们的机构正在与大多数被代表性不足的群体找到结果。还有这些机构的特征是什么。所以我们可以先视觉上将它放在上面，然后说，哦，这里是大多数。
- en: I would assume this is probably the most populated areas in the United States
    and the little。 centers here。 So I would expect that the institutions are mostly
    like right here。 but you can see here， that there's a log line on here too。 Right？
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 我假设这可能是美国人口最多的地区，以及这里的小中心。所以我预计这些机构大多就在这里。但你可以看到，这里也有一个日志线，对吧？
- en: But we don't want to go up between two maps。 So what we're going to do is create
    an XC。 We're going to do a GPLT core plot。 We're going to copy this one。 We're
    going to do it。 Except。 let's get the last one。 So what we're going to do is fix
    size equals natural equilibrium。 And we're going to save this to an axis。 So what
    we want is to create。
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们不想在两张地图之间来回。所以我们要做的是创建一个XC。我们将做一个GPLT核心图。我们将复制这一张。我们将这样做。只是。让我们拿最后一个。所以我们要做的是修复大小等于自然平衡。我们将把它保存到一个轴上。所以我们想要的是创建。
- en: first make me a map and then throw the other one on top， of it。 We don't want
    two maps on the top of each other。 We're going to do X with this。 And then on
    the point plot， we're going to specify that we want to add that same axis。 on
    that same chart。 What we're going to do is GPT， that point plot， as I do right
    now。
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 首先给我做一张地图，然后把另一张放在上面。我们不想让两张地图重叠在一起。我们要用这个做X。然后在点图上，我们要指定要添加相同的轴。在同一张图上。我们要做的是GPT，就像我现在所做的那样。
- en: institutions except we're， going to specify that it's on that same chart。 We're
    going to do Z and Z order， so specify that we want it on top of everything else。
    We don't want to just cover everything， so we're going to make the circles a little
    bit。 transparent。 We're going to do 0。3。 We're going to do color red just to make
    it a little bit easier to read because this。
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 除了机构，我们要指定它在同一张图上。我们要做Z和Z顺序，所以指定我们希望它在所有其他内容之上。我们不想只覆盖所有内容，所以我们要让圆圈稍微透明一点。我们将设置为0.3。我们会用红色，让它更容易阅读，因为这。
- en: is blue and blue。 We're going to make the size two。 And these。 all this comes
    from me having worked with map file before and constant Googling。 because we do
    shift tab。 You're going to get some of these arguments that you can pass。 but
    color and size and， alpha and Z order。 Those come from these keyword arguments。
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 是蓝色和蓝色。我们将大小设为2。所有这些都来自我之前与地图文件的合作和不断的Google搜索。因为我们做Shift + Tab。你会得到一些可以传递的参数。但颜色、大小、alpha和Z顺序来自这些关键字参数。
- en: They pass to map logit behind the scenes， so you don't have to。 They're not
    going to show up right away and you're going to have to Google and you have。 to
    work with map logit before。 Two nullies。 We're going to see this。 Let's see if
    this works。 Let's see how fast this works because we notice that。 I don't know
    what's interesting。
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 它们在后台传递地图逻辑，所以你不必这样做。它们不会立即显示，你必须先Google一下，和地图逻辑一起工作。两个空值。我们来看看这个。看看这个工作得多快，因为我们注意到。我不知道有什么有趣的。
- en: We notice that these took a bit。 This is kind of slow and see how long that
    takes。 And in the meantime， oh。 Oh， there you are。 My mistake， color。 Where did
    it look？ Three。 Did I say red？ It's red。 We run the brand。 That was faster though。
    What do you notice？ There you go。 This doesn't answer the question directly。 We
    still don't know what this county is。
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 我们注意到这些花了一点时间。这有点慢，看看需要多长时间。在此期间，哦。哦，你在这儿。我错了，颜色。它看起来怎么样？三个。我说红色吗？是红色。我们进行品牌。这更快了。你注意到什么？好了。这并没有直接回答问题。我们仍然不知道这个县是什么。
- en: Or this county here。 We started to see something。 We started to see that even
    though this made me this whole area is populated in the United。 States。 But the
    majority on the representative groups are around the whole south of the United。
    States and the centers over here at the very top。 And here。 But the higher education
    institutions are equal to the distributor around this half of the。
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 或者这个县。我们开始看到一些东西。我们开始看到，尽管这个地区的人口分布在美国，但代表性群体主要集中在美国南部和顶部的中心地区。而高等教育机构的分布与这个区域的分布相等。
- en: United States。 So even these are mostly white and Asian populations， mostly
    white。 And there's a lot of higher education institutions around here。 So we started
    to see some answers。 And we started to think we could start to use this as an
    inspiration to start thinking。 about the equity implications of where these institutions
    are。
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 美国。所以这些地区大多数是白人和亚洲人口，大部分是白人。这里有很多高等教育机构。因此我们开始看到一些答案。我们开始认为可以以此为灵感，开始思考这些机构所处地点的公平性影响。
- en: It's not like we can fix everything right away。 It's not like you can just create
    a university in six months。 Like， OK， we're just going to throw those universities
    in the south。 But visually。 you're starting to see something。 OK， now let's do
    what we want to know is just like we filter out the counties before with。 the--
    that we're not。 And they continue as United States。 We can do the same thing。
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 不是说我们能立即解决所有问题。你不能在六个月内就创建一所大学。就像，我们只是把那些大学放到南方。但是从视觉上看，你开始看到一些东西。好吧，现在让我们做我们想要知道的事情，就像之前过滤掉那些县一样。——我们并不打算这样。它们继续作为美国的部分。我们可以做同样的事情。
- en: but we're going to-- the filter now is going to be that 50% threshold。 Did you--
    does the county have 50% or more other represented groups？ Has its population。
    So we're going to create a mask for pandas， mask。 And we're going to create a
    mask。 And we're going to create a mask。 And we're going to create a mask。
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们现在的过滤条件是50%的阈值。这个县是否有50%或更多的其他代表性群体？它的总人口。因此我们将为 pandas 创建一个掩码，掩码。我们将创建一个掩码。我们将创建一个掩码。我们将创建一个掩码。
- en: And we're going to create a mask。 And we can do-- so that's the mask。 We can
    do a quick plot of working GDF。 You pass this mask by turning。 Oh， my god。 They're
    presented。 So these are the-- this is already including the bat mask。 So you see
    there's only 294 counties with majority on their work percent。 It's population。
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个掩码。我们可以——所以这就是掩码。我们可以快速绘制工作 GDF。你通过转换传递这个掩码。哦，我的天，它们被表示出来了。所以这些是——这已经包含了
    bat 掩码。你会看到只有294个县的主要工作百分比是它们的人口。
- en: so we can do the plot。 And these are it。 Right？ And it makes sense。 You see
    the brighter colors here。 And the way pandas works and Python in general。 if you--
    as the speed line， that's the negative。 Right？
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们可以进行绘图。这就是结果。对吧？这很合理。你会看到这里更亮的颜色。还有 pandas 的工作方式以及 Python 的总体运作。如果你——作为速度线，那是负面的，对吧？
- en: That turns true and false and it falls into true。 And you should get the opposite。
    So now you're saying you're negating this。 So check for counties aware that the
    100%-- that is not true if that the share of 100%。 people in that county is over
    50%。 And that means we can do this。 representative of the value of the property
    and uses that property。 And what we can do is。
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 这变成了真和假，并且落入了真。你应该得到相反的结果。所以现在你在说你是否在否定这个。因此检查县是否存在，那100%——如果该县的人口中超过50%的人口比例并不成立。这意味着我们可以这样做。代表这一属性的价值并利用这个属性。而我们可以做的就是。
- en: these are the counties。 And we want to know is this institution in this county？
    Yes or no？
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是县。我们想知道这个机构是否在这个县？是还是不是？
- en: Let's find out the institutions that are found within this county。 And this
    is the first run of geospatial components into this。 We could do some string matching
    and see， okay， well。 what's a county this institution is and what's the state
    that we can create something like this and then try to match it on that。
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们找出这个县内的机构。这是地理空间组件的第一次应用。我们可以进行字符串匹配，看看，这个机构在哪个县，在哪个州，我们可以创建这样的东西，然后试着进行匹配。
- en: But， you know GIS， we can just check， is this point inside this area？
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，你知道 GIS，我们可以检查这个点是否在这个区域内？
- en: That's how we do it in real life， like is this point in this map here。 is it
    inside or is it not inside？ So that's what we're going to do with G-opendas and
    what that's called is G-opendas。 Instead of join， we're going to do S-join。 It's
    a spatial join。 And we're going to check geo-institutions in the majority underrepresented。
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们在现实生活中如何做的，比如说这个点在这张地图上，它是在里面还是不在里面？所以这就是我们要用G-opendas来做的，称为G-opendas。我们将进行空间连接，而不是普通连接。我们将检查在大多数代表不足中的地理机构。
- en: How we're going to do it？ We're going to do an inner join。 So only institutions
    that appear in both data sets in both data frames。 And the operation that you're
    going to be doing is check whether or not this point and this polygon intersect。
    And let's run this。 So what this is doing is grab the information。
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将如何进行？我们将做一个内连接。所以只有出现在两个数据集、两个数据框中的机构。你要做的操作是检查这个点和这个多边形是否相交。让我们运行这个。所以这就是在获取信息。
- en: do an inner join where they match， and how are you checking what's a match？
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 做一个内连接，看看他们是如何匹配的，你是如何检查匹配的？
- en: Check if this point and this polygon intersect。 That means this polygon overlaps。
    The point or this point is inside the polygon。 That's what the intersection is。
    And， okay。 so we have this and we could just assume that in the data right。 But
    here's the cool thing about your friend is plot。 Okay。
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 检查这个点和这个多边形是否相交。这意味着这个多边形重叠。点或这个点在多边形内。这就是交集的定义。好的，所以我们有这个，我们可以假设在数据中。但这里有一个你朋友的酷炫之处，就是图表。好的。
- en: so now you have the institutions because the geometry is the points。 And now
    you're only checking for points that appear within those polygons that we have
    chosen to be only the polygons of the counties where it's a majority underrepresented
    students。
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你有了机构，因为几何形状就是这些点。现在你只检查出现在我们选择的多边形中的点，这些多边形仅为大多数代表不足的学生所在的县。
- en: And you can see this matches this more or less。 So now that we have that。 we
    can save that as institutions in majority of the represented。 We don't want the
    plot。 we want the data frame saved。 And what we could do is recreate this copy，
    paste。 and instead of this， we're going to do institutions in the majority of
    the represent。 Bam。
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到这大致匹配。所以现在我们有了这个，我们可以将其保存为大多数代表中的机构。我们不想要图表，我们想要保存数据框。我们可以复制、粘贴，并且将其改为大多数代表中的机构。好吧。
- en: let's see how that looks。 And these are just reality checks。 I want to look
    at the institutions in the counties where I said they're majority under represented。
    Does it， if I plot them， do they show up in those counties？ And it looks like
    it does。 Cool， cool。 cool。 All right， but the real answer is not a map。 If this
    is a report that you're presenting。
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看它的样子。这些只是现实检查。我想看看在我所说的大多数代表不足的县中的机构。如果我将它们绘制出来，它们是否出现在这些县中？看起来是的。酷，酷，酷。好吧，但真正的答案不是地图。如果这是你要呈现的报告。
- en: you're not looking， you can't just throw on a map and you're like， here it is。
    I want to know the statistics。 What are these institutions like？ So we'll see。
    Majority under represented shape。 It seems like the majority of the represent
    counties like we said is 294 counties out of。 3，107 in the contiguous United States。
    It's all the institutions in the contiguous United States。
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 你不能仅仅把它放在地图上，然后说，“在这里”。我想知道统计数据。这些机构是什么样的？所以我们将查看。大多数下代表不足的形状。看起来大多数代表的县，如我们所说，有294个县，来自3,107个在连通的美国的县。所有的机构都在连通的美国。
- en: that's 3，714。 But institutions in majority under represented， it's only 659。
    So it's already like a fifth of the institutions。 So let's see。 let's do some
    pandas data analysis real quick。 We have。 we're going to graph these institutions
    in majority under represented。
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 这是3,714。但在大多数代表下的机构，仅有659。所以这已经是机构的五分之一了。我们来看一下，快速做一些Pandas数据分析。我们将绘制这些在大多数下代表不足的机构。
- en: Let's see what information we have。 So we have the name， latitude， fit， total
    enrollment part time。 full time control level。 These are interesting。 Are they
    mostly private un-profits？
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们有什么信息。我们有名字、纬度、适合度、总注册人数、兼职、全职控制水平。这些很有趣。它们大多数是私立非营利机构吗？
- en: Private for-profits？ Are they mostly public？ Are they mostly two year or four
    year？ Let's see。 Put back， put back， put back。 Let's look at institutions in majority
    under represented。 And these options show up if you click that by the way。 Let's
    look at sector。 Seven， four。 and value counts。 Oh， it's not sector。 We've got
    rid of that。 It's control。 Okay。
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 私营营利的？它们主要是公立的吗？它们主要是两年制还是四年制的？我们来看看。放回去，放回去，放回去。让我们看看在大多数被低估的情况下的机构。如果你点击的话，这些选项就会出现。让我们看看部门。七，四。还有价值计数。哦，不是部门。我们已经去掉了。是控制。好的。
- en: So we have out of 659， 2057 of our public institutions， so that's nice。 So one
    thing to do here is like these are the counts， right？ So this tells us something。
    It's mostly public， and then it's mostly private， not for profit。 One way to look
    at this， okay。 pass that normalize equals true。 That argument。 So we can see the
    shares。
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们在659个中，有2057个是我们的公立机构，这很好。所以这里要做的一件事是这些是计数，对吧？这告诉我们一些事情。大多数是公立的，然后大多数是私营非营利的。看这个的一个方法，好的。通过那个标准化等于真。那个参数。所以我们可以看到份额。
- en: So 39% of the institutions in the majority under-profits。 in counties that are
    50% or more under-represented groups， are in public institutions。 And 32% of them
    are not for profit， 29% are private for profit。 So that tells us something。 We
    see that still most of the public institutions， but how about in general？
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在大多数营利的机构中，39%是在公立机构中。在那些50%或更多被低估的群体的县中，32%是非营利的，29%是私营营利的。这告诉我们一些事情。我们看到仍然大多数是公立机构，但总体情况如何呢？
- en: How about all the institutions？ How do the institutions that are in these counties
    compare to the total。 the rest of the institutions to the whole university institutions
    and the contiguous United States。 So let's do value counts， normalize equals true。
    And you can see the differences now。 You can see that in the whole contiguous
    United States， 43% of the institutions are public。
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 所有机构如何？这些县中的机构与总的相比，其他机构与整个大学机构和整个美国的机构如何？所以我们来做价值计数，标准化等于真。现在你可以看到差异。你可以看到在整个美国，43%的机构是公立的。
- en: compared to 40， 239 in the counties where it's majority under-represented。 That's
    not too big of a deal。 I mean， 2%， still around 40%， right？ Private not for profit。
    it goes from 38% to 32%。 So that's a bigger gap。 That's 6% points。 This is what's
    interesting。 In counties where the majority， there's a majority of under-represented
    groups。
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 与40相比，在大多数被低估的县中为239。这没什么大不了的。我是说，2%，仍然大约40%，对吧？私营非营利。它从38%降到32%。所以这是一个更大的差距。那是6个百分点。这就是有趣的地方。在大多数被低估的群体的县中。
- en: of historical under-represented groups， in higher education。 there are 29% of
    the institutions in those counties are private for profits。 as compared to only
    19% of the institutions across the contiguous United States。 So that's a 10% difference。
    So now we know something。 There's a system like that。
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在高等教育中，历史上被低估的群体中，这些县中29%的机构是私营营利机构。而在整个美国，仅有19%的机构是私营营利的。所以这是一个10%的差异。现在我们知道一些事情。这样的系统是存在的。
- en: So counties where there's a majority of under-represented groups。 And the language，
    right。 can get a little bit confusing。 So counties， where there's a majority of
    under-represented groups。 29% of higher education institutions are private for
    profits， whereas across the United States。 there's a number， a number， perhaps
    to 19%。 That's 20%。 That's the answer。
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在大多数被低估的群体的县中，语言对吧，可能有点困惑。所以在这些县中，29%的高等教育机构是私营营利的，而在美国，只有19%。那是20%。这就是答案。
- en: That's one of the answers， right？ How many institutions I found in this？ We
    already answered this。 We have only 600。 There's a number of institutions in the
    United States。 There's a number of institutions in the United States。 There's
    a number of institutions in the United States。
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是一个答案，对吧？我在这找到了多少机构？我们已经回答了这个问题。我们只有600。在美国有一些机构。在美国有一些机构。在美国有一些机构。
- en: If this varies between the two and the four years。 Let's see。 institutions in
    the majority under a percentage。 Let's look at level-valued counts。 Normalizing
    those two。 And let's see this in for our changing institutions。 Now institutions
    in majority under-represented counties， counties 50% or more under-represented。
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这在两年和四年之间有所不同。让我们看看。在大多数被低估的情况下的机构。让我们看看水平值计数。对这两个进行标准化。让我们看看在我们的变动机构中。这些在大多数被低估的县中，县里50%或更多被低估的。
- en: Historical under-represented groups。 58% of those institutions are four years
    or above。 42% of them are two-year institutions， whereas in the United States
    and across the country。 64% of the institutions are four years or above。 And only
    36% of them are two-year institutions。 So the institutions in the majority under-represented
    are more two-year。
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 历史上被低估的群体。58%的这些机构是四年制或以上。42%是两年制机构，而在美国和全国范围内，64%的机构是四年制或以上，只有36%是两年制机构。因此，在大多数被低估的机构中，两年制的占比较多。
- en: than across the United States。 [， ]， [， ]， So that's research question one。
    We can also look at total enrollments。 We can look at part-time versus short part-time
    versus full-time。 and share。 And I leave that up to you。 You should pause the
    video right now and run through other statistics。 that you might find interesting
    and set them up over here。
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 比美国其他地方要多。 [， ]，[， ]， 所以这就是研究问题一。我们也可以查看总入学人数。我们可以看兼职与短期兼职与全日制的对比。我把这个留给你。你现在应该暂停视频，查看其他你可能觉得有趣的统计数据，并在这里设置它们。
- en: And once you've done with this one notebook， what I would recommend is go in
    bio， download。 which kind of goes away after you're done with it。 And I would
    do the same with the data prep notebook。 Download。 This one too。 Download。 And
    now you have them locally。 So if this， if you're my vendor and since dies。
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你完成了这个笔记本，我建议你进入生物部分，下载。这种状态在你完成后会消失。我也会对数据准备笔记本做同样的事。下载。这个也要下载。现在你在本地保存了它们。所以如果这，假如你是我的供应商，且它停止了工作。
- en: or you didn't run code for more than 10 minutes， it will die and then you have
    to refresh。 And it's going to spin up a brand new environment for you。 But if
    you download these。 you can drop them。 You can upload them here。 You can go up
    above and then just switch。 All right。 let's move on to research question number
    two。
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有运行代码超过10分钟，它将停止，然后你需要刷新。这将为你创建一个全新的环境。但如果你下载这些，你可以将它们删除。你可以在这里上传它们。你可以在上方切换。好了，让我们继续研究问题二。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_20.png)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_20.png)'
- en: Everyone will get started with research question number two。
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都将开始研究问题二。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_22.png)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_22.png)'
- en: You may notice the change of entire， I'm recording this on a different date。
    And there's a perfect opportunity to show you how you would jump back into the
    workshop。 after doing steps one， two， three。 And then you want to jump all the
    intro stuff and go back to research question two or three。 right？ Which I assume
    you would do if you don't want to sit down and do the whole workshop in one sitting。
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到整个环境的变化，我在不同的日期录制这个视频。这是一个很好的机会，向你展示如何在完成第一、二、三步后重新进入工作坊。然后你可能想跳过所有的介绍部分，回到研究问题二或三，对吧？我假设如果你不想一次性完成整个工作坊，你会这么做。
- en: If you want to， you know， if you do like the first part and then you don't want
    to sit down for two hours。 you step away and you only have 15 minutes worth of
    my binder to， for instance， to go away。 You just download your notebooks just
    like I did before。 You click on， go to the GitHub repository。 click on the budget
    again。 And you'll notice that you're not going to get a little bit of a break。
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想的话，比如说你完成了第一部分，然后不想坐下来两个小时，你可以休息一下，只花15分钟在我的材料上。例如，你只需像之前那样下载你的笔记本。你点击，进入GitHub仓库，再次点击预算。你会注意到，你会得到一点休息。
- en: And you'll notice that it should be that the images are already built。 So it
    shouldn't take too long。 But if it's not built， it's like a mission earlier。 It's
    going to build an image and then it's going to take a few more minutes。 And all
    you got to do really is upload the notebooks that you've already done。 So you
    go。
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到，图像应该已经构建完成。因此，不应该花太长时间。但如果没有构建，就像之前的任务一样。它将构建一个图像，然后需要多几分钟。你所需要做的就是上传你已经完成的笔记本。所以你可以去。
- en: we'll go to notebooks。 You can also go to solutions and then just run the data
    prep counties and the data prep institutions notebook。 and then research question
    one to do whatever you did， right？
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将去查看笔记本。你也可以去查看解决方案，然后运行数据准备的县和数据准备的机构笔记本，然后回到研究问题一，做你之前做的事情，对吧？
- en: To kind of catch up to what you were doing。 What you can do here is click on
    this button to upload any notebooks that you have already。 What I'm going to do
    is drag and drop my notebooks into that area。 I have research question one。 I
    have data prep institutions and they have data prep counties。 And we'll start
    with this。 Since we already know what it is， we wrote this code earlier。
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 以跟上你所做的事情。你可以在这里单击这个按钮上传你已有的任何笔记本。我将把我的笔记本拖放到那个区域。我有研究问题一。我有数据准备机构，还有数据准备县。我们将从这个开始。因为我们已经知道它是什么，我们早些时候写了这段代码。
- en: So we know that it works and we know it perfectly so we can just run all cells
    and it's going。 to create our institutions data C is V。 Another way to do this
    is， and this is with counties。 Another way to do this is go over here and this
    button in the drop down menu run， run。 run all cells。 And if we do this right
    now， you'll notice that this is from our last session。
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们知道它有效，我们知道它完美，因此我们可以直接运行所有单元，它将创建我们的机构数据C是V。另一种方法是这样做，这与县有关。另一种方法是到这里，在下拉菜单中的这个按钮运行，运行。运行所有单元。如果我们现在这样做，你会注意到这是我们上次会话的内容。
- en: this is， tree on external data and you'll notice that we have the zip file that's
    included。 The counties that the counties shape files。 But there's also this fold
    these two folders process then raw。 which is data that we got， to use since is
    data downloader tool。 So if I run this， run all cells。 I'm going to get an error。
    You see， in external data， we only have those included files。
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 这是关于外部数据的树状结构，你会注意到我们有包含的压缩文件。县的形状文件。但是还有这两个文件夹的处理和原始数据。我们使用的数据下载工具获取了这些数据。所以如果我运行这个，运行所有单元，我会得到一个错误。你看，在外部数据中，我们只有那些包含的文件。
- en: The files that I included earlier， and this is going to give us an error because
    there's， no ACS 5。 2018， raised county C is V because that's the one we did。 We
    got using census data downloader。 What we're going to do is have to run it again。
    We're going to change directory。 see the data external。 You can also do census
    data downloader data there。 There。
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 我之前包含的文件，这将给我们一个错误，因为没有ACS 5。2018，县C是V，因为这是我们做的。我们通过普查数据下载器获得了这个。我们要做的是重新运行它。我们将更改目录。查看外部数据。你也可以在那里的普查数据下载器数据。
- en: and then provide data external。 But I just to save us the long command， I'm
    going to go straight。 Because this is a brand new instance， we still need to export
    our census API key。 We need to export it again。 Command C。 Okay， so that should
    work。 Now we do census data downloader。 specify year。 You might not have to because
    it defaults to the latest year， 2018。 Since is data。
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 然后提供外部数据。但是为了节省我们长长的命令，我将直接进行。因为这是一个全新的实例，我们仍然需要导出我们的普查API密钥。我们需要再次导出它。命令C。好的，这应该可以。现在我们做普查数据下载器。指定年份。你可能不需要，因为它默认为最新年份，2018年。由于是数据。
- en: we asked for a race， counties， right？ Enter。 It takes a little bit and then
    it just downloads every single one。 Every table for every county， remember？ [Singing]，
    Come on。 Okay。 The Jupyter Lab interface also sometimes takes a little bit to
    catch up to what's actually in there。 It's not refreshing constantly。 You may
    notice when I uploaded the notebooks。
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 我们请求了种族和县，对吧？输入。它需要一点时间，然后下载每一个。每个县的每个表格，记得吗？[唱歌]，来吧。好的。Jupyter Lab界面有时也需要一点时间来跟上里面的实际内容。它不是持续刷新的。你可能会注意到我上传笔记本时。
- en: you can drop it and you're not going to see it right away。 You can go over here
    and refresh it。 And it's going to appear。 The interface is not upload updated
    constantly。 Okay。 now that this is working， let's see if we can load it。 Perfect。
    Checkpoint。 And the institutions data。 And we can run this。 Let's see if it's
    working。
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以放下它，但你不会立刻看到。你可以在这里刷新它。它将会出现。界面不会不断更新。好的。现在这一切正常，让我们看看是否可以加载它。完美。检查点。还有机构数据。我们可以运行这个。让我们看看它是否正常工作。
- en: Everything's running smoothly。 Let's see if we can。 These two take a while。
    Oh， that was just。 If we run everything， it should。 It should all work， right？
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 一切运行顺利。让我们看看是否可以。这两个需要一些时间。哦，那只是。如果我们运行所有内容，它应该。它应该都能工作，对吧？
- en: The core plug from Jupblood is what takes a while。 The first time。 I don't remember
    exactly why。 I wonder if it's downloading anything。 Core unit system。 Okay， so
    we just did this。 I'm not going to go over this。 It's just rerunning all the code。
    Because what I want to show you is we have a working GDF。 That's a geo data frame。
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 来自Jupblood的核心插件是需要一段时间的。第一次。我不太记得为什么。我在想是否在下载什么。核心单位系统。好的，我们刚刚完成这个。我不打算再讲这个了。这只是重新运行所有的代码。因为我想向你展示的是我们有一个工作中的GDF。这是一个地理数据框。
- en: This is something we didn't do at the end of the last section when we finish
    our Q1。 We have a working GDF that has。 。for it will make it。 Subset of county
    shapes。 Subset of county's data。 This is the contiguous United States。 It has
    the shape files and the data attached to those shapes。
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们在上一个部分结束Q1时没有做的事情。我们有一个工作中的GDF，它将使其成为一个县形状的子集。县数据的子集。这是美国本土。它有形状文件和附加到这些形状的数据。
- en: That is the state of the share under representing and the name of the G8。 This
    working GDF is what we really want for the rest of our analysis。 We're going to
    create an analytical file for the shapes。 We're going to save this geo data frame。
    We don't have to load the shapes， load the county data， merge it， and apply。 。
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 这是共享状态下的代表性及G8的名称。这个工作中的GDF正是我们想要用于其余分析的。我们将为形状创建一个分析文件。我们将保存这个地理数据框。我们不需要加载形状，加载县数据，合并这些，然后应用。
- en: do whatever else we need it to do。 This is just going to save us a couple steps。
    It makes it more reproducible because then anything I do。 if I need to change
    the underlying data set， if I don't want to look at just the contiguous United
    States。 I just come over here and change it in the first RQ1。
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 做任何我们需要它做的事情。这将为我们节省几个步骤。这使得它更具可重复性，因为如果我需要更改基础数据集，如果我不想仅仅查看美国本土，我只需在RQ1的第一个地方进行更改。
- en: I want all the research questions to be about the same data。 I modify it in
    one。 and this one question is saving it。 All the following analyses are going
    to have the same data。 Instead of in each research question loading the data shape
    file， loading the data。 doing the merging work， and then having to update that
    in every single notebook。
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望所有的研究问题都基于相同的数据。我在一个问题中修改它，而这个问题是保存数据。所有后续的分析都将使用相同的数据。与其在每个研究问题中加载数据形状文件，加载数据，进行合并工作，然后在每个笔记本中都需要更新这些，不如这样。
- en: It seems like everything is working on another core plan。 See， this is way faster。
    I think it is that it's downloading something。 I'm not sure。 Everything is looking
    good。 Okay。 so we're going to do just like we did in the other ones。 I'm going
    to do the research just to mark down。 And then checkpoint。 I just call them checkpoints。
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来一切都在另一个核心计划上运行。你看，这样快多了。我想可能是因为它正在下载东西。我不确定。一切看起来不错。好的。所以我们将像在其他情况下那样做。我将进行研究以进行记录。然后是检查点。我称之为检查点。
- en: but it's just saving your data， right， that's the last step。 So what we have
    is the working GDF。 Let's see what data has。 It has a name， it has the geometry。
    It has this just like a reality check。 This name comes from the census data download
    or data。 And the share under represented。 We also have geo institutions， which
    is essentially the same data set。
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 但这只是保存你的数据，对吧，那是最后一步。所以我们有的是工作中的GDF。让我们看看它有什么数据。它有一个名称，它有几何图形。它有一个现实检查。这名称来自于普查数据的下载或数据。而代表性也很低。我们还有地理机构，实际上是同一数据集。
- en: but with a geometry attached to it。 It's an institution's data set， but a geometry
    attached to it。 So what we want to do is just save these as geo data。 So we want
    to save it as those shape files that we already did earlier in this question。
    Especially because as you remember， we added the CRS to our geo institutions。
    Right。
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 但附带了几何图形。它是一个机构数据集，但附带了几何图形。所以我们想做的就是将这些保存为地理数据。因此我们希望将其保存为在这个问题中早先已经做好的那些形状文件。特别是因为你还记得，我们为我们的地理机构添加了CRS。对吧。
- en: So we are already attaching some extra metadata to it。 And I mean， we can again。
    it's just saving us some steps。 So the way to do this is working GDF to is the
    tab。 [inaudible]。 [inaudible]， [inaudible]， But it's giving me a bunch of pandas
    data frame options。 Okay。 Just so I wait， I'm making a mistake right now。 Another
    lesson geo pandas saving files。 Gupandas。
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们已经给它附加了一些额外的元数据。我是说，我们可以再次这样做，这只是为我们节省了一些步骤。因此，做到这一点的方法是将工作中的GDF设置为标签。[听不清]。[听不清]，[听不清]，但这给了我很多熊猫数据框的选项。好的。为了让我等一下，我现在犯了一个错误。另一个关于geo
    pandas保存文件的教训。Gupandas。
- en: org。 They have some pretty good box。 So it's because we do read file。 That's
    how you read something。 But then writing to file。 Yeah。 See， and it didn't come
    up。 And you can use different drivers。 So you can save it as a geo Jason or as
    a shapes file， which is really useful。 Especially if you're going to be working
    in the web and you're going to create a map with something like D3 or go to like
    data wrapper。
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 他们有一些非常不错的框。因此，我们确实会读取文件。这就是你如何读取某些内容。但然后写入文件。是的。看，这并没有出现。你可以使用不同的驱动程序。所以你可以将其保存为
    geo Jason 或者形状文件，这非常有用。特别是如果你要在网页上工作，并且要创建一个像 D3 这样的地图或使用数据包装器。
- en: You can upload your own geo Jason's。 And just have all this data test。 So first
    things we're going to do。 Process。 Data。 That's it。 Right。 So we have a geo data
    folder。 We have the county CSV， the institutions data and the process data。 What
    we want to do is using pathlib using this path。 We're going to process data。 Join
    path。
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以上传自己的 geo Jason，并测试所有这些数据。所以我们要做的第一件事是处理数据。就这样，对吧。我们有一个 geo 数据文件夹。我们有县的 CSV、机构数据和处理数据。我们想做的是使用
    pathlib 来处理数据，连接路径。
- en: We're going to create a a directory for this working geo data。 We can do processed。
    Data。 And if we do。 We're going to do the same process。 Data that show you tab。
    So it's a complete process。 Institutions。 That make their。 Run。 And I know how
    people hate。 That you go back to。 You go back up a cell and you're running the
    flow。
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将为这个工作 geo 数据创建一个目录。我们可以做处理数据。如果我们这样做，我们将进行相同的处理。展示你标签的处理数据。所以这是一个完整的过程。机构。它们的运行。我知道人们讨厌这样。你回到上面一个单元，运行流程。
- en: Like who knows how to do something like that。 So we're just going to do it over
    here again just to show the difference between two。 Now you can see that we have
    another two folders。 Process geo data and process institutions。 And you can also
    check it over here。 Processed。 Right。 He created those。 Those directories。 So
    working GDF we're going to go to file。 We're going to do process data。 Processed。
    Geo data。
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 谁知道如何做这样的事情。所以我们将再次在这里进行操作，仅仅是为了展示两者之间的区别。现在你可以看到我们有另外两个文件夹。处理 geo 数据和处理机构。你也可以在这里查看。处理过的。对。他创建了那些目录。所以工作
    GDF 我们将进入文件。我们将处理数据。处理过的。geo 数据。
- en: And we're going to name it。 I'm just going to continue this。 And we're going
    to do that shape。 Run。 I'm going to do the same for geo institutions。 To file。
    Process。 Data。 Processed。 Institutions。 And the way I created the reason why I
    created these directors is because shape files are not。 one file。 And just to
    keep things neat。 When you're saved something to a SHP file it creates all these。
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将命名。我将继续这个操作。我们将执行这个形状。运行。我将对 geo 机构做同样的事情。到文件。处理。数据。处理过的。机构。我创建这些目录的原因是因为形状文件不是一个文件。为了保持整洁，当你将某些内容保存到
    SHP 文件时，它会创建所有这些附加文件。
- en: complementary files that go with it。 And we could have all this here and then
    just have 15。 And it's like the same as where we have this。 We had like 15 shape
    files over here and then five of them。 Each group of five had the same name except
    just different ending。 That'd be too much。 Now that we have saved our data we
    can move on to research question two。
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 这些附加文件与之配合。我们可以把所有这些文件放在这里，然后仅仅有 15 个。这就像我们这里有的那样。我们大约有 15 个形状文件，然后其中五个。每组五个的名字相同，只是结尾不同。那就太多了。现在我们保存了数据，我们可以继续进行研究问题二。
- en: And it's going to save us a lot of time because we already did most of the work
    of the data。 preparation over here。 We don't need to merge all this data and clean
    it up。 So we're going to go notebook。 First things first。 You've got a rename
    and you don't want to untitled number 17。
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 这将为我们节省很多时间，因为我们在这里已经完成了大部分数据准备工作。我们不需要合并所有这些数据并清理它。所以我们将进行笔记本操作。首先，你得重命名，不想要“无标题
    17”。
- en: And we're going to be a little bit lazy and just copy the first three cells。
    Oh actually not the first one。 But we need this one。 And this one works。 So it's
    not research question two。 I mean our research question one is research question
    two。 Research question two are there any， so let me delete this。
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要稍微懒惰一点，只需复制前面三个单元。哦，实际上不是第一个。但我们需要这个。这个可以。所以这不是研究问题二。我的意思是我们的研究问题一是研究问题二。研究问题二是是否有任何，所以让我删除这个。
- en: Are there any counties of chicken man mode so this one can be solved。 Don't
    have any higher institution higher education。 AKA education。 What are the。 Okay。
    and then we're going to be importing geo pandas geo plot map plot live tools path。
    live data and we're doing the same thing the same work right。
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 有没有任何县的鸡人模式，所以这个可以解决。没有任何高等教育机构。也就是教育。是什么。好的。然后我们将导入 geo pandas geo plot map
    plot live tools path。live 数据，我们在做同样的事情，做同样的工作，对吧。
- en: And then we're setting up our paths to our data folders。 We're looking at process
    data and you'll see that night have these。 Right。 we have your folder with the
    processes geo data and the process institutions and now we can do。 You know what
    to call it counties。 Actually， that's going to get confused。
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们正在设置数据文件夹的路径。我们在查看处理数据，你会看到夜间有这些。对。我们有一个包含处理过的 geo 数据和处理过的机构的文件夹，现在我们可以做。你知道叫什么县。实际上，这样会造成混淆。
- en: It's called contiguous United States。 So it reminds us that is not all of the
    US。 We file。 And afterwards you can just go back to our Q one of them not drop
    Alaska and Hawaii and put Rico and all those other places because it's also important
    to keep them in your analysis。
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 它叫做连通的美国。所以它提醒我们这并不是所有的美国。我们文件。之后你可以回到我们的 Q 中，不要丢掉阿拉斯加和夏威夷，以及普erto Rico 和所有其他地方，因为在你的分析中也很重要。
- en: It's easy to just drop things because they're a little。 Oh， it doesn't fit in
    a map。 but the data works still important so you shouldn't include them。 GPD read
    file processed。 Type out a complete to make sure I don't do any tables。 Processed
    geo data。 And then come T us us that shape you're going to specify the shape。
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 只因它们有点小而轻易丢掉东西。哦，它在地图上不合适。但是数据仍然重要，所以你不应该包含它们。GPD 读取文件处理。打出完整内容以确保我不做任何表。处理过的
    geo 数据。然后告诉我们这个形状你要指定的形状。
- en: And then G minus already knows that it comes with the rest of the files。 And
    then geo institutions。 Consistency read file。 Processed。 Processed。 And the two
    shins。 See if works。 Okay， yeah。 And take us us a half。 Awesome。 All you'll notice
    that it。 It fixed column names for you。 That's fine。 We can change them and pandas
    allows you to have these big names and even special characters and spaces in between
    the columns。
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 然后 G 减已经知道它随其他文件一起出现。然后 geo 机构。一致性读取文件。处理过的。处理过的。然后两个 shins。看看是否有效。好的，是的。并带我们半个。太棒了。你会注意到它为你修复了列名。这很好。我们可以更改它们，pandas
    允许你在列中使用这些大名称，甚至是特殊字符和空格。
- en: But when you throw it into shape file， it doesn't work like that。 So let's actually
    fix that right now。 We can do。 To us us columns and then we can pass a list of
    the new call。 We're going to do G ID and lowercase because it's just easier。 We
    can call it county name。 Just call it name。 Share。 Actually just for consistency。
    Let's do this lowercase to。 Okay。
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 但是当你将其放入形状文件时，它就不会那样工作。那么我们现在来修复这个。我们可以。对我们来说，使用列，然后传递一个新调用的列表。我们将做 G ID 并小写，因为这更简单。我们可以称之为县名。就叫它名称。分享。实际上只是为了保持一致性。我们也这样做小写。好的。
- en: geo institutions。 Let's see how that's looking。 An institution， latitude， fit
    state。 total enrollment， full time， part 10。 Total geometry。 Well。 good thing
    that you can still make sense of these。 This is something that you need to keep
    track of on your own。 This is 10 characters。 So any。
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: geo 机构。让我们看看情况如何。一所机构，纬度，适合的州。总入学人数，全日制，部分 10。总几何。好吧。幸运的是，你仍然可以理解这些。这是你需要自己跟踪的内容。这是
    10 个字符。所以任何。
- en: any variables longer than 10 characters is not going to work。 Here is a G upon
    is going to cut off automatically。 This underscore one underscore two underscore
    three and it's going to be up to you to figure out what each of those mean。 So
    choose something to keep in mind。 This one， I mean， it's fine。 We don't need to
    fix many of this。
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 任何超过 10 个字符的变量将无法工作。这里的 G 会自动截断。这是下划线一、下划线二、下划线三，得由你自己弄清楚它们的意思。所以要记住这一点。这个，我的意思是，可以。我们不需要修复许多。
- en: We're not going to be looking at this right now。 Okay。 so we're looking at counties
    that don't have any institutions。 Right。 And the way we work。 we do that is by
    a。 I'm looking at my notes again。 Um， just like we did with， with the。 with our
    Q one， what we would check if。 There was this teachers inside a county。 Uh。
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在不打算看这个。好的。所以我们在查看没有任何机构的县。对。我们这样做的方式是通过。我再看看我的笔记。嗯，就像我们在 Q 中做的那样，我们会检查一下县内是否有这些教师。呃。
- en: to check if they were in the counties where there was a majority under a percent
    of minorities。 We're going to do the same now。 The other way we're going to see
    are there any counties？
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 检查它们是否位于少数民族占比低于百分之一的县内。我们现在将进行相同的检查。我们要看看有没有县？
- en: Is there any institution in this county regardless of。 of the county characteristics
    or the institution characteristics。 And then again。 it's a spatial joint。 GPD
    as joint for spatial。 And we're going to do。 To use us。 You do shift tab and it
    was going to show you the， the， the parameters。
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 这个县里是否有任何机构，无论县的特征或机构的特征。然后再次进行空间连接。GPD作为空间的连接。我们将要使用的。你按Shift+Tab，它会显示给你参数。
- en: the arguments that you can pass。 The left D F is going to be contiguous us。
    The right D F is going to be geo institutions。 See what else。 How is it is going
    to be in there because we just want something that shows up。 In both。 So we're
    checking for those that。 That have that where there's the row appears in both
    because the point appears in。
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以传递的参数。左边的DF将是连通的。右边的DF将是地理机构。还有什么？它将会在那里面，因为我们只想要一些在两者中都显示的内容。所以我们检查那些在两者中都出现的行，因为这个点出现在。
- en: Inside the。 The polygon， right。 And the operation we're going to do is。 In the
    last one we did intersect and let's look at。 Let's look at the definition。 They
    use geometric manipulations。 So they have。 Separations and overlay。 Margin data。
    So what they have。 And here spatial joins。 There's three ways of to create this
    operation as intersects which we did within and contains。
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 在多边形内部，对吧。我们要进行的操作是。在上一个操作中我们进行了交集，让我们看看。我们看看定义。他们使用几何操作。所以他们有。分隔和叠加。边际数据。所以他们有。这里的空间连接。有三种创建这个操作的方式，包括我们之前的“内部”和“包含”。
- en: So if it intersects is the attributes will be joined if the boundary and interior
    of the object intersect。 Anyway， with the boundary and or interior of another
    object。 So if you have a polygon。 Here and a polygon here and they their boundaries
    touch。 That's that counts as an intersection their boundaries or if you have a
    point right at the border of a county。
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 所以如果它相交，属性将在对象的边界和内部相交时结合。无论如何，与另一个对象的边界和/或内部相交。所以如果你有一个多边形在这里，一个多边形在这里，它们的边界相接。那算作交集，如果你有一个点恰好在县的边界上。
- en: It would still count because it's intersection right if you do within。 The attributes
    will be joined in the objects boundary and interior intersect only。 With the interior
    of the other object。 Not its boundary on interior。 So if one object is within
    another object。 Contains is attributes will be joined if the object interior contains
    the boundary and interior of the other objects and their boundaries do not touch
    at all。
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在内部进行检查，它仍然会算作交集。属性将仅在对象的边界和内部相交时结合。与另一个对象的内部相交，而不是其边界和内部。所以如果一个对象在另一个对象内部。如果包含的属性将在对象内部包含其他对象的边界和内部时相结合，并且它们的边界完全不接触。
- en: So within is if you have a point。 Let's say you have a little polygon and you
    have a bigger polygon and the little polygon is right at the border and their
    boundaries touch。 We have the last little corner and they're sharing the lower
    right and the right sides of this little polygon。
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个点，那么就在内部。假设你有一个小多边形和一个大多边形，小多边形恰好位于边界上，它们的边界相接。我们有最后一个小角落，它们共享这个小多边形的右下角和右侧。
- en: That's still within the bigger polygon right。 But it doesn't contain the little
    polygon doesn't contain the little polygon because their boundaries intersect。
    It has to be 100% inside the polygons for it to contain。 This gets a little tricky。
    This gets a little not tricky。 A little confusing with points because points are
    one dimensional objects。 So the way we're going to do is we're going to do。 Contains
    just。
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 它仍然在大多边形内部，对吧。但它不包含小多边形，因为它们的边界相交。要包含，必须100%在多边形内部。这有点棘手。对于点来说有点不棘手。有点混淆，因为点是一维对象。所以我们要做的就是简单地进行包含。
- en: There shouldn't be any any institutions that are right at the border of a county。
    But if there are we don't want to。 We don't want to look at those because then
    it gets worse。 But honestly pretty much any of these would work especially because。
    It's about boundaries and points are one dimensional objects。 But let's do contains。
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 在县的边界上不应该有任何机构。但如果有的话，我们就不想考虑它们。因为那样情况会更糟。但老实说，这些几乎都可以工作，尤其是因为这涉及到边界，而点是一个维度的对象。但我们先做包含。
- en: It makes sense in your mind like does this county contain this institution or
    even within。 So if we run this。 So you have G。O。I。D。 the county named Lancaster。
    In Nebraska。 It has this share of under a percent of minorities。 This is the geometry。
    The index right。 So the index for this for the institution。 Which is actually
    not relevant。
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 这在你心中是有道理的，这个县是否包含这个机构，甚至在其中。因此如果我们运行这个。你会看到G.O.I.D。县名是Lancaster。在内布拉斯加州。它的少数民族比例不到1%。这是几何形状。这个机构的索引，实际上是无关紧要的。
- en: The institution name so my a therapy institute。 Union College Brian College
    of Provencionces。 And Purdue University global Lincoln。 And so these community
    college area。 So all of these are in Lancaster。 And you'll notice that so each
    of these institutions obviously has its own characteristics。 But this is all。
    The same county and the same share under a percent right so we have。
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 机构名称，比如我的治疗研究所，联合学院，Provencionces的布莱恩学院和普渡大学全球林肯。这些社区大学区。这些都在Lancaster。你会注意到这些机构显然都有自己的特征。但这些都是同一个县和相同的少数民族比例不到1%。
- en: It's it's it's creating multiple roles for each county。 And that's fine because
    we may have multiple institutions in。 In one county that makes sense we're just
    going to call this working G。O。I。D。 And what we're going to do is drop the duplicates
    so we only want one row per county。
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 这为每个县创建了多个角色。这没问题，因为我们可能在一个县有多个机构，这样是有道理的，我们将称之为工作G.O.I.D。我们要做的是删除重复项，所以我们只想要每个县的一行。
- en: And that we're not we're actually not necessarily interested in。 The institutions
    inside those counties and we're looking at the counties。 That have any institutions
    and then we're looking at those characteristics so we're going to working。 G。D。F。
    drop the tab to see what we can drop。 Drop duplicates。 Shift tab is going to show
    us the。
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 我们实际上并不关心这些县内部的机构，我们关注的是那些有任何机构的县，然后查看这些特征，所以我们要工作。G.D.F。删除标签，看看我们可以删除什么。删除重复项。Shift
    tab将向我们展示。
- en: The options we're going to pass this this is what we're looking at subset。 It's
    a column label or sequence of labels。 To consider for identifying the book it's
    right so what we don't want to。 Look at this column to see if they are double。
    So we could do county name。 But there might be a line cast or somewhere else in
    the United States right now there might be orange。
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将传递的选项就是我们要查看的子集。这是一个列标签或标签序列。考虑用于识别书籍的对，所以我们不想。查看这一列以检查它们是否是重复的。所以我们可以做县名。但可能会在美国的其他地方有一个线性Castor，现在可能会有橘子。
- en: I know orange is in Florida and in California orange county。 So we don't want
    to use just county name we want to use the full name。 And we can pass it just
    name。 See if this works。 And you see now it's only one nine castor。 And this is
    actually not that I'm going to。 That we can drop those later。
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道橘子在佛罗里达州和加利福尼亚州的橘子县。所以我们不想仅仅使用县名，而是想用完整的名称。我们可以直接传递名称。看看这是否有效。现在你会看到只有一个九个的Castor。这其实并不是我想要的。我们可以稍后删除那些。
- en: And there's many ways to go around this week you can do。 Otherwise this is just
    one of the many ways that you can do this。 So we're going to save this we're going
    to overwrite G。D。F。 Is there on the book it counties and it's seen。 Quick send
    in to check G。D。F。 plot。
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有很多方法可以解决这个问题，你可以这样做。否则这只是你可以做的众多方法之一。所以我们要保存这个，将会覆盖G.D.F。是关于县的书，它被看到了。快速发送以检查G.D.F。的绘图。
- en: If it shows every county in my view。 Oh， yeah。 So these are the counties that
    have institutions。 It's awesome。 Okay。 So let's see。 So what we want to do is
    create a counties with institutions。 Let's see working G。F。 Let's see what we
    have。 So we could be our this might as well be our counties with institutions。
    But we don't we don't really need any of this right now。 So we're going to look
    at。
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它显示我视图中的每个县。哦，是的。这些是有机构的县。真不错。好吧。让我们看看。我们想要做的是创建一个有机构的县。看看工作G.F。让我们看看我们有什么。所以这可能也是我们的有机构的县。但我们现在并不需要任何这些。所以我们要查看。
- en: We're going to create another chain of data frame。 Countings with institutions
    equals working G。D。F。 The list of five of variables that we care about county
    name name。 Yeah， share。 You are in geometry。 That's how we really need right now。
    Right。 Let's see counties with institutions。 Just send it to checks。 Perfect。
    So what we want now is。 The same this same thing， but。
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建另一个数据框链。有机构的县等于工作G.D.F。我们关心的变量列表，包括县名。是的，分享。你在几何上。这就是我们现在真正需要的。对。我们来看看有机构的县。发送到检查。完美。所以我们现在想要的是。这同样的事情，但。
- en: For counties without institutions and then we can do。 We can try to do it the
    special the spatial join way and see how。 I don't know change days to outer instead
    of inner or some weird join。 But that that that's unnecessarily complicated。 If
    you're ready。
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 对于没有机构的县，我们可以尝试用特殊的空间连接方式来看看。我不知道是否将内连接改为外连接或其他奇怪的连接。但那样会复杂得多。如果你准备好了。
- en: it's it's it seems like it's more people are a little bit more versed than pandas。
    In regular data analysis tools that geo spatial data analysis tools。 We can use
    that to our advantage。 We can do we can make a list of these counties names。 this
    full names。 And these are going to be our kind institutions and we can just use
    that to filter out from the contiguous United States。
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来似乎更多的人对pandas更熟悉。在常规数据分析工具和地理空间数据分析工具中。我们可以利用这一点。我们可以列出这些县的名称。这些完整名称。它们将成为我们的机构，我们可以用它来过滤掉连续的美国。
- en: Filter other countries with institutions and then we're going to end up with
    the counties without institutions。 right？ So let's see。 First list of counties
    with institutions and you don't have to name your variables or something this
    long。 When institutions equals it's going to be。 It's actually going to be counties
    with institutions name。 And that's going to return a series and what we want is
    kind of a list。 It's just the values， right？
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 筛选出其他有机构的国家，然后我们将得到没有机构的县，对吧？所以我们来看看。首先列出有机构的县，你不需要给你的变量命名得这么长。当“机构”等于时，它实际上会是“有机构的县名”。这将返回一个序列，而我们想要的是一种列表。就是这些值，对吧？
- en: So we're going to create a list of。 It's an array。 Instead of a pandas series
    because the pandas series come with an index and that's an extra data that we
    don't need。 And the way we check for counties without institutions， we're going
    to create。 So we have this list of counties with institutions。 We're going to
    create a list。 One of two ways。
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们将创建一个列表。它是一个数组。我们用数组而不是pandas系列，因为pandas系列带有索引，而这是我们不需要的额外数据。我们检查没有机构的县的方式是，我们将创建。因此我们有这个有机构的县列表。我们将创建一个列表。有两种方法。
- en: We can use this to check that something is not in this list or check something
    that is in this list。 Let's try this。 Let's try the first one。 So we can do contiguous
    United States name。 This is in a list of counties with institutions。 And that's
    going to return us true or false for each of them。 And then we can see contiguous
    U。S。 head。 So we know that this county is not there。
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用这个来检查某个东西是否不在这个列表中，或者检查某个东西是否在这个列表中。我们来试试这个。我们先试第一个。所以我们可以使用“连续的美国名称”。这在一个包含机构的县列表中。这样我们就能得到每一个的真假值。然后我们可以查看“连续美国的头部”。所以我们知道这个县不在其中。
- en: This county is not there。 Number three Lancaster County。 That's the first one。
    And we know that it definitely is here。 What if we pass this just make it a negative
    just turn all forces into truth or truth into false。 And it's the other way， right？
    So now this is a list of county of filter for counties without institutions。 We
    can just make this mask。 Counties without。 And then we can take use with mass
    counties without institutions。
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 这个县不在其中。第三个，兰开斯特县。这是第一个。我们知道它肯定在这里。如果我们把它变成负数，所有的真都变成假，或者假变成真，那就是另一回事，对吧？所以现在这是一个没有机构的县的过滤列表。我们可以直接创建这个掩码。没有机构的县。然后我们可以使用这个掩码处理没有机构的县。
- en: But now number three Lancaster County is not here。 So these are counties without
    institutions。 And we can save that as counties。 That way it's not a table I can
    do。 Now next space。 Institutions equals。 Copy。 And now we can just sanity check
    counties without institutions。 And then we can just make this map。 And then we
    can just make this map。
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 但是现在第三个，兰开斯特县不在这里。所以这些是没有机构的县。我们可以把它保存为县。这样就不是一个表格，我可以做。现在下一个空间。机构等于。复制。现在我们可以进行简单检查，查看没有机构的县。然后我们可以创建这个映射。然后我们可以创建这个映射。
- en: And then we can just make this map。 And then we can just make this map。 And
    then we can just make this map。 We already saved it on to the shape files。 We
    don't need to do any of that anymore。 So this way to go way faster。 So now we
    have this。 But the only statistics that we have for this for each county is share
    of underrepresented minorities。
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以直接制作这张地图。然后我们可以直接制作这张地图。然后我们可以直接制作这张地图。我们已经将其保存到形状文件中。我们不需要再做任何事情。因此，这样的速度更快。现在我们有这个。但是我们对于每个县唯一的统计数据是代表性不足的少数群体的比例。
- en: And we could do is this counties with institutions grab share of underrepresented
    minorities and give me the mean。 Right。 So counties with institutions the share
    of underrepresented minorities is 22% on average counties without institutions
    share of underrepresented minorities。
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以做的是，获取有机构的县的代表性不足的少数群体比例，并给我均值。对。拥有机构的县代表性不足的少数群体的比例平均为22%，而没有机构的县则是代表性不足的少数群体的比例。
- en: So in the counties without institutions the share of underrepresented minorities
    is actually 18。17%。 So it's lower。 So in counties where there are no institutions
    they tend to be less underrepresented minorities。 Yes。 That's interesting。 Because
    if you remember on our argue one。 On our maps it seems like the counties with
    an institutions。 Our maps。
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在没有机构的县，代表性不足的少数群体的比例实际上是18.17%。所以这更低。在没有机构的县，代表性不足的少数群体往往较少。是的。这很有趣。因为如果你还记得我们在争论一。我们的地图上似乎是有机构的县。
- en: It seems like there's only a few colleges in the counties where there's a majority
    underrepresented minority。 And that you would think of like okay well there's
    obviously if there's no institutions there's probably more underrepresented minorities。
    But that's not necessarily the same。 This is about majority underrepresented institutions
    majority underrepresented minority in a county。 And this is about like all counties。
    So this is so this starts to give you more more details about the analysis。
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 在代表性不足的少数群体占多数的县，似乎只有少数几所大学。你会认为，如果没有机构，可能会有更多的代表性不足的少数群体。但这并不一定是相同的。这是关于县内代表性不足机构的多数代表性不足的少数群体。这是关于所有县的。所以这开始给你提供更多的分析细节。
- en: Right。 You start looking at it's more there's more。 It's more nuanced than just
    counties with when majority underrepresented groups are less likely to have institutions。
    Well it's not it's not as simple。 Right。 So this is one way so we already got
    some statistics but now that we have this set up。 And we saw how easy was to to
    join data now that we have this GID ready to go。
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 对。你开始查看时，情况比只是有代表性不足的群体占多数的县更复杂。这并不简单。对。所以这是一种方式，我们已经获得了一些统计数据，但现在我们已经设置好了。我们看到了将数据连接是多么简单，现在我们已经准备好使用这个GID。
- en: What we could do is just ask census data downloader for more data。 Right。 We
    can we don't have to keep it just in terms of share under percent minorities。
    We can do census data downloader year。 What do we want？ Median age counties。 Oh，
    don't year 2018。 And actually we can go on census data downloader。 Under tables。
    See what they have。 So they have。
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以做的就是向人口普查数据下载器请求更多数据。对。我们不必仅仅以代表性不足的少数群体比例来保持。我们可以使用人口普查数据下载器年份。我们想要什么？县的中位年龄。哦，别忘了2018年。实际上我们可以在人口普查数据下载器中查看。在表格下。看看他们有什么。所以他们有。
- en: Mina has go income median age。 Race veteran status。
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: Mina的收入中位数年龄。种族退伍军人身份。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_24.png)'
  id: totrans-348
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_24.png)'
- en: For important。 That's interesting education。
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 这很重要。这很有趣，教育。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_26.png)'
  id: totrans-350
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_26.png)'
- en: And so there's a lot of these and you should spend some time looking at what
    you are interested in in researching。 And we have it by county but you can definitely
    do by something else。 Right now you know how to do this maybe you want to do it
    by state。 So we have median age。 Let's do median household income too。 Okay。 Hit
    C。 Let's double check。
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 还有很多这些，你应该花一些时间去查看你感兴趣的研究内容。我们按县来分类，但你完全可以按其他方式进行。现在你知道怎么做了，也许你想按州来做。所以我们有中位年龄。我们也来做中位家庭收入。好的。点击C。让我们再检查一下。
- en: Some seconds ago it was processed。 Okay。 Yeah。 Median age and median household
    income。 Awesome。 So now we have this。 You can put a letter note to yourself。 And
    now we can do。 And now we can do。 And H。 P。D。 read CSV just liquidated the other
    one is an external。 And processed。 And then it's in。 A C S five。 2018。 Probably
    because they're standard names that they can。 Median age。 Yeah。
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 几秒钟前它已处理完成。好的。是的。中位年龄和中位家庭收入。太棒了。所以现在我们有了这个。你可以给自己写个便条。现在我们可以做。现在我们可以做。H.P.D。读取CSV只是清理了另一个外部数据。并已处理。然后它在A.C.S五。2018年。可能是因为它们是标准名称。中位年龄。是的。
- en: I'm just going to use the same cell for median household income。 P D。 Let's
    do all that。 Keep it。 Read CSV。 External data。 Processed。 A C S five。 2018 median
    household income。 Counties that CSV。 Awesome。 Okay。 So I accidentally click M
    here。 So I turned into a mark down cell。 Go back to code。 Median age。 Let's see
    how this looking。 Okay。 So it has median age。 By county。 G。I。D。
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 我只是将同一单元用于中位家庭收入。P.D。让我们做这些。保持它。读取CSV。外部数据。处理过的。A.C.S五。2018年中位家庭收入。县的CSV。太棒了。好的。所以我不小心在这里点击M。它变成了一个Markdown单元。返回代码。中位年龄。让我们看看这看起来如何。好的。它按县显示中位年龄。G.I.D。
- en: Median age for males。 Median age for female。 And state and the county。 And median
    age。 It has median household income。 The margin of error。 Okay。 So from these
    we want let's just keep it to the median age。 Okay。 Median age。 It equals median
    age。 Let's just keep G。I。D。 name and median。 And this is supposed to be a list。
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 男性的中位年龄。女性的中位年龄。州和县。以及中位年龄。它包含中位家庭收入。误差范围。好的。从这些中，我们只保留中位年龄。好的。中位年龄。它等于中位年龄。我们只保留G.I.D。名称和中位。这应该是一个列表。
- en: So you need two square brackets。 And median household income。 That's the median
    household income。 And we need the G。I。D。 The name again。 And median。 And you'll
    notice that both of both have the same names。 And that's going to be an issue
    if we want to join the one。 So let's rename the columns。 G。I。D。
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你需要两个方括号。中位家庭收入。这是中位家庭收入。我们需要G.I.D。再次命名。和中位。你会注意到两者都有相同的名称。如果我们想要连接其中一个，那将是个问题。所以让我们重命名列。G.I.D。
- en: name。 Median age。 Median household income。 Columns。 G。I。D。 name。 Median age
    income。 You can't median age。 Let's see how this is looking。 Awesome。 But you
    may remember that when we first get data from a census data， downloader。 let's
    check the D types。 See， remember that G。I。D。 is actually an integer。
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 名称。中位年龄。中位家庭收入。列。G.I.D。名称。中位年龄收入。你不能使用中位年龄。让我们看看这看起来如何。太棒了。但你可能记得，当我们第一次从人口普查数据下载器获取数据时，让我们检查D类型。看，记得G.I.D。实际上是整数。
- en: Not a five character string。 So we need to fix that G。I。D。 So we're going to
    do median age。 And I'm not going to go too much into D because we already picked
    this。 We can go to IQ one。 First。 do we ask for it to be type string？ We use the
    string accessor。 We do the Z-fell function on it。 And we're going to do median
    household income。 G。I。D。 Step string。 Step string。 Step string。 See。
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 不是一个五字符字符串。所以我们需要修复那个G.I.D。所以我们将处理中位年龄。我不会过多讲D，因为我们已经选了这个。我们可以去IQ一。首先。我们要求它成为字符串类型吗？我们使用字符串访问器。我们对它进行Z-fell函数处理。然后我们将处理中位家庭收入。G.I.D。步骤字符串。步骤字符串。步骤字符串。看。
- en: Five。 Oh， and this is because--， I think this is the warning that I'm trying
    to set up on a copy of a slice of a data frame。 Because we--， it thinks that this
    is a slice of itself instead of like copy。 That's fine。 Okay。 So next thing， we're
    going to set this G。I。D。 as the index like we did before。 Right？ Median age。 Set
    index。 G。I。D。 And we're just going to do it in place。 Equals true。 Same way the
    income。
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 五。哦，这是因为——我认为这是我在尝试设置数据框切片副本时的警告。因为我们——它认为这是它自己的切片，而不是副本。没关系。好的。接下来，我们将像之前那样将这个G.I.D。设置为索引。对吧？中位年龄。设置索引。G.I.D。我们将就地进行。等于真实。同样的收入。
- en: And now we have median age。 Perfect。 And our working file is this county's with
    institutions and counties with an analysis。 Countings。 Countings。 Let's set index。
    G。I。D。 and place。 True。 Same with counties with that。 Set index。 G。I。D。 and place
    equals true。 Awesome。 And now we can do counties。 With institutions。 Join。 Median
    age。 It's going to be on the index already。 It's going to be a left。 Yeah。
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了中位年龄。完美。我们的工作文件是这个县的，包含机构和县的分析。计数。计数。让我们设置索引。G.I.D。和位置。正确。与县相同。设置索引。G.I.D。和位置等于真实。太棒了。现在我们可以处理县。带有机构。连接。中位年龄。它已经在索引上。是左连接。对。
- en: So it's only going to keep those that appear on your left data frame。 That means
    counties with institutions。 So it seems like this is working。 Don't。 Don't。 Oh。
    because they both have share。 They both have this name column。 Actually， we could
    just drop。 We'll just drop that。 Let's just trust that。 G。I。D。 That's good。 You
    can。 Median age。 Drop columns。
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 所以它只会保留在你左侧数据框中出现的那些。这意味着有机构的县。因此，看来这个操作是有效的。不要。不要。哦。因为它们都有份额。它们都有这个名称列。实际上，我们可以直接删除。我们就删除那个。让我们相信。G.I.D。不错。你可以。中位年龄。删除列。
- en: Name。 Again， let's just do it in place。 See some space。 Median age。 Drop columns
    equals name。 And place。 It's true。 Perfect。 And I just added that。 And because
    this is returning a beta frame。 you can actually chain joins。 And we can chain
    median age， income。 Perfect。 And we can just counties with institutions and overwrite
    it。
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 名称。再次，让我们就地执行。看看一些空间。中位年龄。删除等于名称的列。并就地处理。确实。完美。我刚刚添加了这个。因为这返回的是beta框架，你实际上可以链式连接。我们可以链式连接中位年龄和收入。完美。我们可以仅仅使用有机构的县并覆盖它。
- en: And we can do it the same with counties without institutions。 You can keep those
    counties with the value。 Join median age。 And join median age， income。 Counties
    with institutions。 Just reality check。 Perfect。 So now we have this。 We can do
    just like we did over here to check the mean of counties for institutions that
    share under a percentage。
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以对没有机构的县做同样的事情。你可以保留这些县的值。连接中位年龄。连接中位年龄和收入。与机构的县。进行现实检查。完美。因此，现在我们有了这个。我们可以像在这里一样检查具有少数份额的机构县的均值。
- en: We can do the same thing for median age。 The average median age gets a little
    confusing。 And average median household income。 But what we can also do is just
    take advantage of pandas。 the analysis capabilities， and just go counties with
    institutions。 Describe。 And this is going to provide you some statistics for every
    number column。
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对中位年龄做同样的事情。平均中位年龄有点让人困惑。还有平均家庭收入。但我们可以利用pandas的分析能力，只需查看有机构的县。描述一下。这将为每个数字列提供一些统计信息。
- en: Anything that's float or integer。 And it provides you this basic statistic。
    So you can see that the average share under a percent of minority is 22%。 It gave
    you a new before。 But the standard deviation is 19%。 So it varies a lot。 It can
    go 95% of the counties fall within 30%。 So 22 and 19。 So 30% and 40%。 So 22 close。
    And 41%。
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 任何浮点数或整数。它为你提供了基本统计数据。你可以看到，在少数群体中，平均份额不到百分之一，为22%。这给了你一个新的视角。但标准差为19%。所以变化很大。95%的县的值在30%之内。因此，22和19。因此是30%和40%。所以22接近。41%。
- en: Yeah， let's go with that。 Median age 39 years old， counties with institutions。
    median household income， $54，000 a year， it varies around $15，000。 Okay。 And it
    comes with minimum。 So the youngest median age county。 The median age， oh wait，
    21 years old。 Oh。 there's a county in counties with institutions where the median
    age is 21 year old。 22 year old。
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，先这样。中位年龄39岁，有机构的县。中位家庭收入每年54,000美元，变化约为15,000美元。好的。并且有最低值。因此，最年轻的中位年龄县。中位年龄，哦，等等，21岁。哦。在有机构的县中，有一个县的中位年龄是21岁。22岁。
- en: And they make $20，000 a year。 That's interesting。 I wonder which one we can
    check。 Actually。 and a bit。 Counties without institutions。 Let's do the same。
    So underrepresented。 the average underrepresented is 18%。 But it varies just as
    much as 19%。 That's interesting。 So it can go up to pretty much the same。 The
    median age is 43 years old。
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 他们每年赚20,000美元。这很有趣。我想知道我们可以检查哪一个。实际上，以及一些。没有机构的县。我们也来做同样的事情。因此，代表性不足的平均值是18%。但变化与19%一样大。这很有趣。因此，它可以上升到几乎相同的水平。中位年龄是43岁。
- en: So that's that's four years difference。 So there's slightly older populations。
    But it varies a little more。 Median household income is $29，000 versus $54，000。
    That's interesting。 And it varies even less。 So $12，000 instead of 15。 Now you
    can certainly see some really interesting policy questions。 What's going on here？
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这就是四年的差异。因此，人口稍微老一点。但变化稍微大一点。中位家庭收入为29,000美元，而54,000美元。这很有趣。并且变化更小。所以是12,000美元，而不是15,000美元。现在你可以看到一些非常有趣的政策问题。这到底发生了什么？
- en: The max is larger。 It doesn't tell as much as you can say。 But you know median
    household。 Oh， wow。 Yeah， there's counties with really young people。 What's going
    on？ Okay。 So this is one way to look at this。 You got the summer statistics。 And
    now you have what's important is that you created a subset of counties that you
    attached some data to it。
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 最大值更大。它并没有告诉你能说多少。但你知道中位数家庭。哦，哇。是的，有些县有真的年轻的人。怎么回事？好吧。这是一种查看这个的方式。你得到了夏季统计数据。现在你重要的是你创建了一个附加了一些数据的县子集。
- en: And then you created， you used a spatial joint to check whether that county
    had any of these points over here。 We use institutions， but you can look at other
    anything that you can think of。 I mean schools are pretty much everywhere。 But
    maybe there's counties without elementary schools or middle schools or more than
    one high school。 You can come up with any questions like that。 Maybe certain hospitals
    or certain services。
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你创建了，使用空间连接来检查那个县是否有这些点在这里。我们使用机构，但你可以考虑其他任何你能想到的。我是说学校几乎到处都是。但是也许有些县没有小学、中学或不止一所高中。你可以想出类似的问题。也许某些医院或某些服务。
- en: You can now use this same workflow to look at。 Okay。 you have these counties
    have these shapes have these polygons， right？ And it can be tracks。 It can be
    counties。 It can be states。 It can be countries。 And then I have these points。
    It can be hospitals。 It can be schools。 It can be taco stands。 It can be anything。
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以使用相同的工作流程来看。好吧。这些县有这些形状，有这些多边形，对吗？它可以是街区。它可以是县。它可以是州。它可以是国家。然后我有这些点。它可以是医院。它可以是学校。它可以是塔可摊。它可以是任何东西。
- en: And then I want to see which of these polygons don't have any of these points
    in them。 And which do。 Or I want to see like argue one。 I was like where based
    on some characteristic or here if we use share under a percent。 There's a majority
    under a percent of minorities in this county。 What type of what type of points
    are there in those so you can now argue one and argue to help you develop that
    workflow。
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我想看看这些多边形中哪些没有这些点。哪些有。我想看看，比如说有的基于某些特征，或者这里如果我们用少于百分之一的共享。在这个县中，少数民族占少于百分之一的多数。在那些中，有什么类型的点，所以你现在可以争论一下，帮助你开发那个工作流程。
- en: Can you check if they're in。 Let's look at the polygons。 Are there any of these
    points in them？
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 你能检查一下它们是否在吗？我们来看看多边形。这些点中有在它们里面吗？
- en: Okay， well， let's look at some characteristic of the polygons and then grab
    the points that appear in those counties in those polygons with those characteristics
    and check out the characteristics of those points。 That makes sense。 Hopefully
    that makes sense。 If not。
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，让我们看看多边形的一些特征，然后抓取那些在这些多边形中具有这些特征的县里出现的点，并检查这些点的特征。这有道理。希望这有道理。如果没有。
- en: you can always definitely put an issue on the GitHub repo。 And I know if you
    sign up for this workshop， we're going to have a Q&A at some point。 Or reach out
    to me on Twitter and be like that。 That did not make sense。 If you use Census
    data downloader， then read it into it。 Fix。
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以随时在 GitHub 仓库上提交一个问题。我知道如果你报名参加这个研讨会，我们会在某个时候进行问答。或者可以在 Twitter 上联系我，告诉我这样的话。这听起来没道理。如果你使用人口普查数据下载器，然后将其读入。修复。
- en: Just grab the column that you actually care about。 You should care about all
    of these because there's more first stats。 Grab the columns that you care about。
    Fix the geo ID because it's not an integer and it comes automatically。 This is
    just because the nature of the workflow that Census data downloader is doing the
    hamstrings set up the geo ID and then just merge it into this other substance
    that you already put together。
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 只需抓取你实际关心的列。你应该关心这些所有，因为还有更多的第一统计数据。抓取你关心的列。修复地理 ID，因为它不是整数，并且是自动生成的。这仅仅是因为人口普查数据下载器的工作流程本质上设置了地理
    ID，然后将其合并到你已经组合的其他内容中。
- en: And you can do a lot of things。 Internet， this is something really interesting。
    On my other workshop last year of 2019， we looked at the digital divide using
    Census data。 And it might be this。 Actually， we used it bombs。 Which if you're
    interested in all the types of data census is an amazing place to get data。 There
    is it bombs us a which uses census and ACS American survey data。
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以做很多事情。互联网，这真是件有趣的事。在我去年的另一场研讨会上，我们使用人口普查数据查看数字鸿沟。可能就是这个。实际上，我们使用了爆炸数据。如果你对所有类型的数据感兴趣，人口普查是获取数据的一个很棒的地方。那是爆炸数据，它使用了人口普查和美国社区调查数据。
- en: But if you're interested in international stuff， they have like a collection
    nearly 100 countries。 census。 It is great。 And they harmonize data across years。
    So if the questions vary a little bit。 they'll come up with a question that makes
    sense for both。 I'm just aggregated to it。 But not only do they harmonize data
    like tabular data like that and questions and survey answers。
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果你对国际事务感兴趣，他们几乎有100个国家的普查数据。这很棒。他们在不同年份之间协调数据。如果问题略有不同，他们会提出一个对双方都有意义的问题。我只是进行了汇总。不仅如此，他们还协调了类似表格数据和调查答案的问题。
- en: They also harmonize geographies。 So there's certain countries。 The example they
    use。 I think it was Congo and one of their webinars。 And there's like five or
    six regions in them that have change in shape overall like the state or whatever
    secondary geographic level is。
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 他们也会协调地理数据。所以有些国家。他们使用的例子是刚果，在他们的网络研讨会上提到过。在那里有五到六个地区的形状发生了整体变化，比如州或其他次级地理级别。
- en: And they just they harmonize it across time。 So you can come up with some really
    interesting statistics。 It bombs it uses ACS data at the individual level。 So
    not up to the county level。 You're just going to have to aggregate back。 But that's
    where you can。 That's what we do in my other workshop。 So you can just look up。
    Thank you。
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 而且他们会在时间上进行协调。所以你可以得出一些非常有趣的统计数据。它使用的是个人级别的ACS数据，而不是县级数据。你需要重新汇总。但这就是我们在我其他研讨会中所做的。你可以查找一下。谢谢你。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_28.png)'
  id: totrans-380
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_28.png)'
- en: Let's get to research question number three。
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来研究问题三。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_30.png)'
  id: totrans-382
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_30.png)'
- en: The last task in our tutorial today， we're going to be creating some education
    desert maps。 We're going to see if there are， if you create this 10， 25 and 50
    mile radii radii radii radiuses。 it's not radiuses。 You put a 50 mile radius around
    each institution。 each higher education institution in the whole United States。
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 今天我们教程中的最后一项任务是创建一些教育荒漠地图。我们将看看，如果你创建这10、25和50英里半径的地图，它们是否有效。围绕每个高等教育机构设置50英里半径，覆盖整个美国。
- en: What parts of the country are left out and what are some of the characteristics
    of those and this one we're going to do with county。 So we're going to be taking
    chunks of the counties out。 So if you're part of the county is inside this 50
    mile radius， it's going to be left out。 You'll see more sense once we go through
    it。 But if you want to do more granular units like census tracks zip codes。
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 哪些地区被遗漏了，那些地区有什么特点，而我们要做的这个是与县有关的。所以我们将提取一些县的数据。如果你所在的县在这个50英里半径内，就会被排除。等我们深入研究后你会更明白。如果你想使用更精细的单位，比如普查区和邮政编码。
- en: there's an interesting debate going on around whether or not you should use
    zip codes and social science。 like on geographical on geospatial analysis for。
    Because it's not an actual shape zip codes are。 first of all， they change more
    often than you think。 And they actually。 it's not like a shape and it's not an
    area， it's not an apolic on its lines that the USPS uses。
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 关于是否应该在社会科学中使用邮政编码以及地理空间分析，这里有一个有趣的辩论。因为邮政编码并不是实际的形状，首先，它们变化的频率比你想象的要高。它们实际上并不是形状，也不是区域，而是邮政局使用的线路。
- en: I saw a paper online， I'll put it on the repo if you're interested。 On the read
    me file。 It's the 25 not 20 miles。 And these numbers are not necessarily random。
    there's a study here in California。 I think I mentioned earlier in this tutorial。
    most people go to schools nearby where they live， even higher education schools。
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 我在网上看到一篇论文，如果你感兴趣的话，我会把它放到仓库里。在自述文件中。是25而不是20英里。这些数字并不一定是随机的。这里加利福尼亚有一项研究。我想我在本教程早些时候提到过。大多数人就读于离他们住的地方附近的学校，甚至是高等教育学校。
- en: And I was in California， so like UC students， 40 University of California。 their
    median distance between their。 Between the place they live and the college they
    went to was like the median distance was like 50 miles。 For CSU， for state schools，
    there was like around 20， 25 miles and for community colleges it was 10。 So I，
    that's why I chose these numbers。 And I'll put a link on the， on the read me too。
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 我在加利福尼亚，所以像加州大学的学生，他们的中位数距离他们住的地方和他们上学的地方大约是50英里。对于加州州立大学，州立学校的距离大约在20到25英里之间，社区学院大约是10英里。所以我选择了这些数字。我也会在自述文件上放一个链接。
- en: for that paper。 It was by UCLA， it was a while。 Around higher education institutions。
    what parts of the country are left out。 Okay， perfect。 We're gonna borrow the
    same first three。 Actually four， because we're gonna be using the same data too。
    since we already prepared it on research question one。 We're gonna do copy。
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 针对那篇论文。这是由 UCLA 提出的，已经有一段时间了。关于高等教育机构。哪些地区被遗漏了。好的，完美。我们将借用前面三个。实际上是四个，因为我们还将使用相同的数据。由于我们已经在研究问题一上准备好了这些数据。我们将进行复制。
- en: You can also click the key C， the letter C or V for paste， or I'm gonna paste。
    I'm gonna read this。 I'm gonna check out the data that we have。 I'm gonna read
    in the data。 Okay。 and now that we have this， let's check out super quickly。 Reality
    check。 Cio institutions is essentially what we're gonna be using to create the
    area。 These are points。
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以点击字母 C 或 V 进行粘贴，或者我将进行粘贴。我将读取这个。我将查看我们拥有的数据。我将导入数据。好的，现在我们有了这个，让我们快速检查一下。现实检查。Cio
    机构基本上是我们将用于创建区域的。这些是点。
- en: and what we want is to create just like this， those are circles， create a circle
    around a point。 The difference is that we wanna be able to specify how large the
    circle is in real distance。 So 10 miles in the real world， not necessarily like
    one or two or three pixels on a picture。 So the way we do that is， this is why
    it's important that we check。
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要的就是像这样，创建一个围绕某一点的圆。不同之处在于，我们希望能够指定这个圆的真实距离大小。所以在现实世界中是 10 英里，而不一定是图片上的一、两个或三个像素。因此我们这样做是，这就是我们需要检查的重要原因。
- en: we added CRS information to our GEO data frame。 Check this。 You can see that
    we're using CRS EPSG 4269， and it's using latitude and longitude。 It's using degrees
    as its unit of measure。 And what we want is to be able to use the information
    that we have。 where they are in the world， and create a radius around it。 And
    the way we measure that。
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 我们向 GEO 数据框添加了 CRS 信息。检查这个。你可以看到我们正在使用 CRS EPSG 4269，它使用的是纬度和经度。它的测量单位是度。我们想要的是能够使用我们拥有的信息。它们在世界上的位置，并在其周围创建一个半径。我们测量的方式是。
- en: we said it was gonna be 10 miles， 25 miles， 50 miles。 And you could do。 if you're
    really good at this， you could do the math and figure out， okay， well， 10 miles
    is 0。0 or whatever degrees。 And latitude and 0。0 of degrees and longitude。 And
    then use that to create a buffer around each point。 But what we're gonna do is。
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 我们说过是 10 英里、25 英里、50 英里。如果你真的很擅长这方面的事情，你可以计算出，好的，10 英里是 0.0 或者其他度数。在纬度和 0.0
    度和经度。然后用这个在每个点周围创建一个缓冲区。但我们要做的是。
- en: we're gonna change this CRS， the units。 We're gonna transform our points from
    one coordinate system into another。 That uses units more much manageable for this
    specific task。 We're gonna be using one meters as that unit of measure。 And one
    way to do this is。 I'm gonna copy this so you can see。 EPSG， let me show you a
    bit of space I think it's something else。
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将改变这个 CRS，单位。我们将把我们的点从一个坐标系统转换到另一个坐标系统。这样使用的单位对于这个特定任务来说更易于管理。我们将使用米作为测量单位。一种方法是。我将复制这个以便你能看到。EPSG，让我给你看看一些空间，我想这可能是别的东西。
- en: So EPSG。io is your best friend when you're trying to figure out these type of
    things。 So 4269。 you can see center coordinates， bounds， etc。 etc。 some more information。
    And what we want is to switch to a meter system。 I don't expect you to know this
    from the top of your head。 It's 3857。 These are two of the most common projections。
    So what this is doing is。
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 所以 EPSG.io 是你在尝试弄清楚这些事情时最好的朋友。所以 4269。你可以看到中心坐标、范围等信息。我们想要的是切换到米制。我不指望你能一口说出这个。它是
    3857。这是两个最常见的投影。它的作用是。
- en: this is what Google Maps up in street map， or GIS， S-reaping。 Use kind of like
    by default。 We're using this other system EPSG 3857 because， let me see。 I should
    have checked this right。 I know that this one specifically uses meters。 That's
    what we're using it。 But I remember。 what does it say？ The unit of measure is
    meters。 That's what we're using it。
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Google 地图上的街道图，或者 GIS，S-reaping。默认情况下使用的系统。我们使用这个 EPSG 3857 系统，因为，让我看看。我应该正确检查这个。我知道这个特别使用米。这就是我们使用它的原因。但我记得。它说什么？测量单位是米。这就是我们使用它的原因。
- en: You can kind of guess that from here。 Isn't that， I don't even have the excuse
    that this is a live demo because this is being recorded。 I could have checked
    before。 I apologize。 Just， this one shows me。 look up EPSG 3857 on your free time。
    We're going to be transforming it into this new coordinate system because it uses
    meters as the unit of measure。 That way， when we ask Gio Penis to create buffers
    around a point， which it does mathematically on。
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从这里猜到那一点。不是吗，我甚至没有借口说这是现场演示，因为这是在录制。我本可以提前检查。我很抱歉。只是，这个给我展示。闲暇时查一下EPSG 3857。我们将把它转化为这个新的坐标系统，因为它以米为单位。这样，当我们要求Gio
    Penis在一个点周围创建缓冲区时，它会以数学方式进行。
- en: Looking at a point and then just doing some math around it。 The units。 it actually
    translates into what we want when we're creating this because otherwise we would
    have to specify specific points。 We would have to specify specific like the decrease。
    Like I just mentioned。 The way to do this is Gio institutions to CRS shift tab。
    You can specify CRS。
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 观察一个点，然后围绕它做一些数学运算。单位。它实际上转化为我们在创建时想要的，因为否则我们必须指定具体的点。我们必须指定具体的，比如减少。正如我刚才提到的。做到这一点的方法是Gio机构到CRS
    Shift Tab。你可以指定CRS。
- en: This is some projection， PyProch。CRS。 Great。 But now you can specify just EPSG
    equals this。 EPSG equals 3857。 And before we do that， actually， Gio institutions。head。
    You see this geometry。 The point is at negative 108 and 48。 That's line to no
    lighter two。 If we do it like this。 it transforms。 It changes those degrees into
    meters。 That's exactly what we want。
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一些投影，PyProch。CRS。很好。但现在你可以只指定EPSG等于这个。EPSG等于3857。在我们这样做之前，实际上是Gio机构。头。你看到这个几何体。这个点在负108和48。这是线到没有亮度的两。如果我们这样做。它转化了。它将那些度数转换为米。这正是我们想要的。
- en: And you can see that this is returning a data frame so we can do in place， it
    goes through。 or we can assign it to itself。 We're just going to do this。 Speed。
    And now that we have this。 Gio institutions saved already as this。 What we're
    going to do is create what Gio pandas calls the buffer。 Geometric manipulations。
    You saw this earlier in RQ2 when I was looking at for the merging data。
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到这返回了一个数据框，因此我们可以就地进行，它会通过。或者我们可以将其赋值给自己。我们只会这样做。速度。现在我们已经将Gio机构保存为此。我们要做的是创建Gio
    Pandas所称的缓冲区。几何操作。你早在RQ2中看到过这个，当时我在查看合并数据。
- en: This is --， This is something else。 This is what we're looking at。 Buffers。
    The way to do that is buffer。 Distance。 You're going to pass it。 If we do 100，
    for example。 it creates a polygon。 And you'll notice here that --， Let me show
    you。 It goes from this number。 121 million -- no， 12 million， 106，864 to still
    12 million， 106，764。
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 这是--，这又是另一回事。这是我们要关注的内容。缓冲区。做到这一点的方法是缓冲。距离。你将要传递它。如果我们做100，例如。它会创建一个多边形。你会注意到这里--，让我给你展示一下。它从这个数字开始。1亿2千万--不，1200万，106864到仍然是1200万，106764。
- en: So it created a 100 meter buffer， which is what we want， but we don't want it
    to be 100。 We want it to be 10 miles。 We want it to be 25 miles。 I want it to
    be 50 miles。 And a mile is 100。 1609 meters。 So what we're going to do is just
    do some math here。 10 times。 Just from here。 And that's it。 And now you can see
    it's 12 million， but now you went back to 90。
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 所以它创建了一个100米的缓冲区，这正是我们想要的，但我们不想要100。我们想要10英里。我们想要25英里。我想要50英里。1英里是100，1609米。所以我们要做的就是在这里做一些数学运算。10乘以。从这里开始。就这样。现在你可以看到它是1200万，但现在你回到了90。
- en: 000 instead of the 106，000。 This is creating -- those circles。 And the way we're
    going to do this is transforming only the geometry series。 And it's returning
    a series， as you can see。 So what we're going to do is first make copies because
    we want different data frames。 We're going to do institutions 10 mile。 10 mile。
    And it's going to be geo institutions。
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 000而不是106000。这正在创建--那些圆圈。我们要这样做的方式是仅转换几何序列。它返回一个序列，正如你所看到的。因此，我们要做的第一步是复制，因为我们想要不同的数据框。我们将做机构10英里。10英里。这将是Gio机构。
- en: Copy institutions 25 mile。 Geo institutions。 Copy institutions。 First we created
    all these copies。 Now we're going to do another one。 If you're signed up here
    and you click A。 it creates a cell above you。 And if you click B， it creates a
    cell below the cell that you have signed up。 I mean， you have selected。 And the
    way we're going to do this is institutions 10 mile。 But geometry。
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 复制机构25英里。Gio机构。复制机构。首先我们创建了所有这些副本。现在我们要再做一个。如果你在这里注册并点击A，它会在你上方创建一个单元。如果你点击B，它会在你所选单元的下方创建一个单元。我们要这样做的方式是机构10英里。但几何体。
- en: which is what we're transforming， is going to be institutions 10 mile。 Just
    like -- this is just a geometry。 It could be geo institutions going to be the
    same because they all share the same geometry right now。 Welfare。 10 miles。 All
    right， now we're going to do the same for the 25 mile。 [Inaudible]。 [Inaudible]，
    Done。 And again， I'm just going to move this over here so we have --。
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在转化的内容将是10英里的机构。就像——这只是一个几何形状。地理机构将是相同的，因为它们目前共享相同的几何形状。福利。10英里。好的，现在我们对25英里做同样的事情。[听不清]。[听不清]，完成了。然后，我只是将这个移到这里，以便我们有——。
- en: so it makes sense that this is how we're running this。 Institutions 10 mile。
    Now we can do the reality check。 Now these are not points。 Right， so when it was
    point。 the geo pandas and map will live underneath。 The hood is doing -- it's
    just assigning a specific size to the point。 It's just one or two or three pixels
    where the default is。 But these are no longer points。
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这样运行是有道理的。10英里的机构。现在我们可以进行现实检查。这些不是点。对，当它是点的时候，地理熊猫和地图将会在下面。内部正在做的事情——只是给这个点分配一个特定的大小。它只是一个或两个或三个像素，默认就是这样。但这些不再是点。
- en: These are polygons。 These are circles。 So it displays it by its true size， quote
    unquote。 And you can see also that the legend has changed here because it's now
    using the meters instead of the degrees。 Right？ So reality checks one way to think
    about it。 Let's see， institutions we're going to skip 25。 It's the same thing。
    It's just for sake of time。 This is the 50。
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是多边形。这些是圆圈。因此，它按其真实大小显示，所谓的“真实大小”。你也可以看到，图例在这里发生了变化，因为现在使用的是米而不是度数。对吧？所以现实检查是一种思考方式。让我们看看，机构我们将跳过25。这是同样的事情，只是为了节省时间。这是50。
- en: Now it looks -- you have 50 mile radii around each institution。 And you can
    still see， okay。 so most of this half of the country is covered。 But there's not
    a lot going on here。 especially here。 And， you know， it kind of makes sense。 There's
    not -- I mean。 I think the Rockies are here。 And it's just -- this is much more
    densely populated。
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 现在看起来——你可以看到每个机构周围有50英里的半径。你仍然可以看到，好的。所以这个国家的大部分半部都被覆盖了。但是这里没有太多活动，尤其是在这里。你知道，这看起来很合理。没有——我的意思是，我认为落基山脉在这里。这一带的人口密度要高得多。
- en: But let's check it out。 Let's see what the -- what this is all about。 Let's
    see what the answer really is。 What parts of the country are left out and then
    we can look into some of the characteristics of those parts of the country。 that
    are left out。 What we're going to do is put those institutions。 those circles
    on top of a map that we have。 And we're going to use those to filter out the areas
    that are inside this so we can do this。
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 但是让我们检查一下。让我们看看——这到底是什么。让我们看看真正的答案是什么。哪些国家的部分被遗漏，然后我们可以看看那些被遗漏部分的一些特征。我们要做的是把这些机构，这些圆圈放在我们拥有的地图上。我们将用它们过滤掉在这个范围内的区域，以便我们可以做到这一点。
- en: We can do an intersection。 So an intersection of the county shapes and then
    the circles that are the radii -- the radii of each institution。 and show me only
    the parts where they overlap。 So you can actually see， obviously。 because they're
    all inside the county center -- inside the country。 they would -- you would only
    see the areas of the country that are -- that are -- inside that radius。
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以进行交集。因此，将县的形状与每个机构的半径圆圈进行交集。只显示它们重叠的部分。因此你可以清楚地看到，因为它们都在县中心——在国家内部，你只会看到在该半径内的区域。
- en: Right？ So that's what we're doing。 So instead of doing the special joint。 we're
    just overlaying geometries。 And the other way we're going to do -- the other thing
    that we're going to do is the difference。 So we're going to have a map of the
    U。S。 below the county level map。 And then we're going to take out all the areas
    that are -- that are actually taken -- that are within 50 miles。
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 对吧？所以这就是我们正在做的事情。因此，我们不是做特别的联合，而是简单地叠加几何形状。我们要做的另一件事是差异。因此，我们将有一张美国的地图，低于县级地图。然后我们会去掉所有在50英里范围内的区域。
- en: -- in a 50 mile radius from the institutions。 That way we can see what parts
    of the country are left out of these -- of these services -- the higher education
    institutions。 So intersection and difference。 Those are the ones that we're looking
    at。 And the way to do this is -- actually， really simple -- GPT overlay。 And this
    is actually -- so there's an example because one， there's the function already。
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: ——在机构的50英里半径内。这样我们可以看到哪些国家的部分被这些高等教育机构的服务遗漏了。所以交集和差异。这就是我们要关注的内容。做到这一点的方法其实很简单——GPT覆盖。实际上这里有一个示例，因为已经有这个函数了。
- en: And I already know it's going to be overlay。 But two， you already did all the
    work over here。 You already cleaned the data。 You already processed the data。
    You read， processed。 and saved the data。 And you have it already in a geo -- geo
    format -- geo spatial format。 And you also already added metadata to the -- to
    your geo data frames。
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经知道这将是覆盖。但第二，你已经在这里做了所有的工作。你已经清理了数据。你已经处理了数据。你读取、处理并保存了数据。你已经以地理——地理空间格式存储了数据。你还已经为你的地理数据框添加了元数据。
- en: You made sure that this wasn't just a bunch of numbers that geo pandas wouldn't
    know what to do with。 You added this early on in the process。 And that's what
    allows this to happen so easily。 To do all this math would be impossible really
    if you didn't -- if you hadn't assigned a CRS earlier in the process。 So， overlay
    -- we're going to do -- what did we save it？ S， you can take us us。 Take us us
    us。
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 你确保这不仅仅是一堆地理数据 pandas 不知道该怎么处理的数字。你在流程的早期阶段添加了这个。这让这一切变得如此简单。如果你没有在早期阶段分配 CRS，进行所有这些数学运算几乎是不可能的。所以，覆盖——我们要做——我们保存了什么？S，你可以带我们去。带我们去。
- en: It's going to be our base。 And then we're going to overlay the institutions。
    Ten mile radius。 And what's -- let's shift tab。 How？ So by default is the intersection。
    Right？
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 这将成为我们的基础。然后我们将覆盖这些机构。十英里半径。那——让我们 shift + tab。怎么做？所以默认是交集，对吧？
- en: So let's see what this looks like。 And actually if you run this， it's doing
    the math behind it。 It's going to -- it's going to return a geo data frame that
    has the geometries already fixed。 Right？
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 那么我们来看看这看起来是什么样子。实际上如果你运行这个，它会在后台进行计算。它将返回一个几何形状已经修正的地理数据框，对吧？
- en: And what you can see here is you didn't get anything back。 Right？
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 你在这里看到的是，你没有得到任何反馈，对吧？
- en: The first mistake that we did is try to overlay a geodata frame in APS-G 4267。
    4269 which uses degrees。 And we had -- we tried to put another geodata frame with
    APS-G 3857。 How would you even know how to do that？ How would pandas know？
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 我们犯的第一个错误是尝试在 APS-G 4267 中覆盖一个地理数据框。4269 使用的是度数。而我们尝试将另一个使用 APS-G 3857 的地理数据框放进去。你怎么知道该怎么做？Pandas
    怎么会知道呢？
- en: How would geo pandas know how to do that？ So the way we're going to do this
    is institutions to see our S。 APS-G equals 4267。 We're going to do it in place。
    And because when you do this。 when you do the 2CRS， it returns a geodata frame。
    You could tell me what to do in here。 3269。 So that would work。 But then you would
    have to do that every time you call in this and it's not。
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: Geo pandas 怎么会知道该怎么做？所以我们将要做的是将机构设置为 CRS。APS-G 等于 4267。我们将进行原地操作。因为当你这样做时，当你进行
    2CRS，它会返回一个地理数据框。你可以告诉我在这里该怎么做。3269。这是可行的。但那样你每次调用时都得这样做，而这并不是。
- en: Why do that？ Right， institutions 5 now， 2CS， APS-G， 2269。 So this is what would
    happen。 It would return a polygon that -- I mean， at first sight you can't really
    see what's going on。 But this is a polygon of all the areas that are different。
    Right？ Based on this definition。 And it's hard to see this。 But if it's good that
    we get the geodata frame in return because then you can save this and use it for
    something else。
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么要这样做？对，机构5，现在，2CS，APS-G，2269。这就是会发生的事情。它会返回一个多边形——我意思是，乍一看你真的看不出发生了什么。但这是所有不同区域的多边形，对吧？基于这个定义。这很难看出来。但我们得到的地理数据框是很好的，因为这样你可以保存这个并用于其他用途。
- en: If you want to save this as a shape file of budget counties with chunks taken
    out based on whatever you're choosing to analyze。 That's what you want that information
    back。 But because what we're trying to do is just visually see what's happening。
    Just a reality check。 Let's see if what we're doing is right。 If it is different。
    maybe it's a difference， maybe it's geometric difference or symmetrical difference
    or an intersection。
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想把这个保存为预算县的形状文件，基于你选择分析的内容进行分块。这就是你想要的信息。但是因为我们试图做的是仅仅视觉上查看发生了什么。只是一个现实检查。让我们看看我们所做的是否正确。如果有不同，可能是差异，也可能是几何差异或对称差异，或者是一个交集。
- en: '[inaudible]， I mean， it makes sense， right？ You''re only showing the ones where
    they overlap。 And what you want is -- I mean， where they intersect。 Which makes
    sense the way you just -- sorry。 that took me -- so you''re only showing where
    they intersect like we mentioned。 So it''s only the areas where -- that are covered
    by those 10-mile radius radii。'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: '[听不清]，我的意思是，这很有道理，对吧？你只展示了重叠的部分。你想要的是——我的意思是，它们相交的地方。这是合理的，就像你刚才提到的——抱歉。这让我想起来——所以你只展示了它们相交的地方，就像我们提到的。因此，只有那些被这10英里半径覆盖的区域。'
- en: Which is essentially the same as plotting the 10-mile radius on top of each
    other。 But what if we try how -- difference。 So what's the -- the difference between
    these geometries？
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 这本质上与将10英里半径叠加在一起是一样的。但是如果我们尝试如何——不同。那么这些几何形状之间的——差异是什么？
- en: If you have bunch of polygons and you have a bunch of other polygons on the
    top。 the difference would be the area that they don't overlap in。 The intersection
    is that one area where they overlap。 The difference is the rest。 This is what
    we got。 This is what we're asking for now。 Yay。
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一堆多边形，并且在上面还有一堆其他多边形，差异将是它们不重叠的区域。交集是它们重叠的那个区域。差异是其余的部分。这就是我们得到的。这就是我们现在要询问的内容。耶。
- en: So now you can see it's like we mentioned still the shape of the counties。 The
    map of counties in the United States and then you start kind of like scooping
    out all those 10-mile radii。 10-mile radius around each point。 Each of the higher
    education institutions。 And so now that we have that。 And that you saw that GPT
    overlay is returning a geo data frame。
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在你可以看到，就像我们提到的，仍然是县的形状。美国县的地图，然后你开始像挖掘一样去掉所有这些10英里半径。每个点周围的10英里半径。每一个高等教育机构。因此现在我们有了这一点。你看到GPT叠加返回的是一个地理数据框。
- en: What we want is to explore that geo data frame。 I want to create cooler maps
    of this。 So we're going to do 10 miles。 It's going to be GPT overlay to US/US
    institutions。 10 miles。 How equals difference。 Because we want to make sure that
    we get the difference。 And not the intersection like we did at first。 We're going
    to do 25 miles。
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要探索这个地理数据框。我想要创建更酷的地图。所以我们将做10英里。这将是GPT叠加到美国/美国机构上。10英里。如何等于差异。因为我们想确保得到差异。而不是像我们最开始那样的交集。我们将做25英里。
- en: GPT overlay to US/US institutions。 25 miles。 How？ What's the difference？
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: GPT叠加到美国/美国机构。25英里。怎么做？有什么不同？
- en: 15 miles to GPT overlay to US/US institutions。 50 miles。 This is a suggestion
    for my use of double quotes and single quotes。 It's honestly so random。 I would
    think that I have a preference too。 But no。 it's honestly sometimes they do one
    and sometimes they do the other。
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 15英里到GPT叠加到美国/美国机构。50英里。这是我对双引号和单引号使用的建议。说实话，这真的很随机。我也会认为我有偏好。但是没有。说实话，有时他们用一个，有时他们用另一个。
- en: And I don't even think about it。 This might take a little bit because you saw
    how long it took for this to first happen。 It's doing a lot of math behind the
    scenes。 Okay。 And then we're going to take a look at our geo data frames that
    are returned。 And then maybe we'll get to them。 Let's go ahead。 Shift enter。 Shift
    return。 This one takes a little longer because of it。 You saw how long it took
    for this one to one to one to three times。
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 我甚至都没有考虑到这。这可能需要一点时间，因为你看到它第一次发生需要多长时间。它在幕后进行大量计算。好的。然后我们将查看返回的地理数据框。也许我们能到达它们。我们继续。Shift
    enter。Shift return。这个需要稍微长一点，因为这样。你看到这个一个到一个到三个的时间是多长。
- en: There you go。 So this 10 miles。 Now we have our geometry with the share under
    one percent。 But this geometry has taken out。 It's been there already scooted
    out all these areas。 Watch 50 miles flat。 There you go。 You see how this is already
    what's left of this overlay。 And what we want to do is -- oh， no。 What we want
    to do now is use this。
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样。所以这10英里。现在我们有了我们的几何图形，低于1%的共享。但是这个几何图形已经被去除。它已经把所有这些区域都移走了。看50英里的平面。你看，这就是这个覆盖层剩下的部分。我们现在想做的是——哦，不。我们现在想做的是使用这个。
- en: Just make it a little prettier so we can see for example the share under represented。
    So we can visually make sense of what areas are left out。 We're going to do GP
    core plus 10 miles。 The hue is going to be share under。 We're going to do -- you're
    not -- I don't know if you want to share。 This is not a geo-b， but this is just
    something that you can learn as you practice more。 Fixize。
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 只需稍微美化一下，这样我们就可以看到，比如说共享的低代表性。这样我们可以直观地理解哪些区域被遗漏了。我们将做GP核心加10英里。色调将是共享的低代表。我们将做——你不——我不知道你是否想分享。这不是geo-b，但这是你在更多练习中可以学习的东西。Fixize。
- en: This one of those -- oh， thanks。 These are you。 I'll watch your run。 Okay。 There
    you go。 So all of this is already taken out。 But the lines are too thick so it's
    covering all of that。 Let's see if we specify -- I can specify -- maybe it can
    change the projection because it's also --。 not over here。 Let's make this prettier。
    We're going to do GCRS Web， or K here。
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 这是其中之一——哦，谢谢。这些是你。我会看你的运行。好的。你看，这些都已经被移除。但是线条太粗，覆盖了所有内容。让我们看看是否指定——我可以指定——也许可以改变投影，因为它也不在这里。让我们把它做得更好看。我们将使用GCRS
    Web，或者这里的K。
- en: And we can use GCRS because we're doing it。 We're going to implement it from
    G01。 [ Pause ]， Again。 I think it's this Webmercator thing that makes it take
    a little longer than --， [ Pause ]。 [ Pause ]， I might just take a little。 We
    can get started with the rest。 We have share underrepresented but just like we
    did in RQ2。
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用GCRS，因为我们正在进行这个。我们将从G01实施。[暂停]，再次。我觉得这个Webmercator的东西让它比——[暂停]。[暂停]，我可能需要花一点时间。我们可以开始其余部分。我们有共享的低代表性，但就像我们在RQ2中做的那样。
- en: we might want to include household income and median age。 So we can actually
    share -- I mean。 copy this code all the way to here because this is where we join
    it。 We're going to copy it。 And we actually don't need to check this one。 We already
    know that it works so we're just going to keep only the code that we need。 So
    we can click on this side and not inside this side。 Click here， you shift， click
    somewhere else。
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能想包括家庭收入和中位数年龄。这样我们就可以共享——我是说。将这段代码复制到这里，因为这是我们连接的地方。我们将复制它。我们实际上不需要检查这个。我们已经知道它可以工作，所以我们只保留需要的代码。所以我们可以在这一侧点击，而不是在内部这一侧。点击这里，按住Shift，再点击其他地方。
- en: so you're highlighting all of these。 You can do edit。 Oh， yeah， it's here。 It's
    starting to make sense。 I mean， 10 miles is like。 you can start to see some areas
    of the country here that there's definitely some people here。 Some people here
    that are not even close to 10 institutions。 We can even do， let's see， 50。
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你正在突出这些。你可以进行编辑。哦，是的，它在这里。开始有点意思。我是说，10英里就像。你可以开始看到一些地区，这里肯定有人。有些人甚至没有接近10个机构。我们甚至可以看看50。
- en: Hopefully this is faster because it's the other way out。 Then we can run all
    this and we're going to have countries -- oh， wait。 This is not all we need。 We
    don't need countries。 But we're going to have median age and median age， age，
    income。 ready to be merged。 We're going to run that too。 We're going to start
    here and really want that because it's just taking checks out。
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这样会更快，因为是另一种方式。然后我们可以运行这些，我们将有国家——哦，等一下。这不是我们所需要的。我们不需要国家。但是我们将有中位数年龄和中位数年龄、收入。准备合并。我们也将运行这个。我们将从这里开始，真的想要这个，因为这只是去除检查。
- en: But what we're going to do， we're going to make this pretty -- we're going to
    make this actually useful。 We're going to see what we're trying to accomplish。
    All of this in the United States。 all of these areas that you can actually see
    are parts that exist outside of the 50 mile radius of each college's to zero any
    higher education institution。 So if you live here， there's not a higher education
    institution in quite a long way。
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 但是我们要做的是，我们将让这个美观——我们将让它真正有用。我们将看到我们试图完成的所有内容。所有这些在美国。这些地区你实际上可以看到是位于每个学院零个高等教育机构50英里半径以外的部分。所以如果你住在这里，离高等教育机构有一段相当长的距离。
- en: That could not be a problem depending on how you feel about higher education。
    Now we have median age because we shared the code right from over there。 That's
    how it looks like。 What we're going to do is let's stick to 25， which is reasonable。
    if you don't want to roll too far away from college， 25 miles。 So this is what
    this looks like。
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能不会是个问题，具体取决于你对高等教育的看法。现在我们有中位数年龄，因为我们从那边共享了代码。它看起来就是这样。我们将坚持25，这个是合理的。如果你不想离大学太远，25英里。所以这就是它的样子。
- en: We need to set its index to G-O-I-D。 What we're going to do is we're going to
    do this。 And 25 miles。 Join median age。 And like we saw earlier， we can change
    these because they have -- it's returning a data frame。 So you can just change
    them。 median age income。 And we're going to do 25 miles。 Just override it。 And
    what we can do now is 25 miles。 What we want to do is do something like this。
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要将索引设置为G-O-I-D。我们要这样做。还有25英里。加入中位数年龄。就像我们之前看到的，我们可以更改这些，因为它们返回的是数据框。所以你可以直接修改它们。中位数年龄收入。我们将设置为25英里。直接覆盖它。现在我们可以做的是25英里。我们想要做的就是这样。
- en: but instead of sharing the representative， we can do now with median age and
    see what the age of people that live here。 Look， look， look like。 And what we
    can do is overlay maps。 So we have our continuous U。S。 that covers everything。
    That's a map of everything。 We can use that as a base layer。 And then we can just
    throw this on top so we can actually see the country。
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们可以不共享代表，而是使用中位数年龄，看看住在这里的人们的年龄。看，看看，看看。我们可以叠加地图。所以我们有覆盖一切的连续美国地图。这是一个全面的地图。我们可以用它作为基础层。然后我们可以在上面叠加这个，这样我们就能看到整个国家。
- en: And the way to do that is we're going to create an X。 This is a map level of
    the syntax。 We're creating an X's。 And we're going to assign -- we're going to
    create first key。 It's polyplot。 So it's plotting polygons。 And we're going to
    pass working files。 And the F is going to be contiguous。 The projection is going
    to be -- it's going to be GCRs Web Recator。
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 实现这一点的方法是我们将创建一个X。这是语法的地图级别。我们正在创建一个X。我们将指定第一个键。它是polyplot。所以它是在绘制多边形。我们将传递工作文件。F将是连续的。投影将是GCR的Web
    Recator。
- en: The Z order， which you can't see here。 It's one of these keyword arguments。
    It's just specifying where it goes。 We're going to specify the one。 It's all the
    way in the back。 It's specified again the extent of fix size on all this。 It doesn't
    something to worry about。 But this keyword arguments， those come from my plot
    lip。
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: Z顺序，你在这里看不到。它是这些关键字参数之一。它只是指定它的位置。我们将指定为一个。它位于最底层。它再次指定了所有这些的修正大小范围。这并不是需要担心的事情。但这些关键字参数来自我的plot
    lip。
- en: So that's not something we're going to cover here。 So we're going to do edge
    color。 We're going to do it in white。 That's one。 Just makes sense。 Those lines
    that we saw earlier that they were all black。 We don't want that white。 And we
    don't wait that line with。 We want it smaller。
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这不是我们要在这里讨论的内容。我们将进行边缘颜色设置。我们会使用白色。这是第一步。这样做是有道理的。我们之前看到的那些线都是黑色的。我们不想要白色的。我们也不想要太宽的线。我们想要更小的。
- en: We want it just a size of one face color for the polygons。 We want a little
    one。 And the fix size is going to be again。 And then your PESSA tool ball is pied
    over at midnight。 Always specified 12-12。 It's not actually making it 12-12。 It's
    not -- because the country is not that square。 That's what I'm trying to say。
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望多边形只有一个面颜色。我们想要小一点。修正大小又要再一次。然后你的PESSA工具球是在午夜时分。始终指定12-12。实际上并没有变成12-12。因为这个国家并不是那么方正。这就是我想表达的。
- en: I'm just going to make this a little bit easier to read。 And actually。 let's
    see how this would look。 If this all worked out。 you would just see a map of the
    United States， with lines showing the counties。 And it's going to be our page
    layer。 Now we're going to throw this core pleth on top of it。
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 我只是想让这个更容易阅读。其实，让我们看看如果这一切都顺利的话会是什么样子。你只会看到美国的地图，上面有显示县的线。这将是我们的页面层。现在我们将在其上叠加这个核心图层。
- en: Let's go with this coat。 We don't want it to 50 miles。 It's like 20 or 5 miles。
    [ Pause ]。 And actually we don't need the protection because it's already specific。
    This one。 which is the base。 Same with the fix size。 So I don't need that。 So
    there's a really figure。 Specified， all we got to do is actually specify which
    axis we want it on。
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 我们就用这个外套。我们不想要50英里。大约20或5英里。[暂停]。实际上我们不需要保护，因为它已经很具体了。这个。是基础。同样适用于固定大小。所以我不需要这个。因此这是一个真正的图形。指定的，我们要做的就是指定我们想要的哪个轴。
- en: It's going to be on that axis and the figure that we -- short right here。 [
    Pause ]。 So I'm just going to make sure that we have it。 [ Pause ]， There you
    go。 Okay， so that makes sense。 This is what we wanted。 This is going to be our
    base layer。 And now that it has a rainy。 then it won't。 So hopefully it's a little
    faster。 So what we want is we have this base layer so that we don't end up looking。
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 它将在那个轴上，以及我们——这里短的图形。[暂停]。所以我只是要确保我们有它。[暂停]，好了。这有意义。这是我们想要的。这将是我们的基础层。现在因为它有雨，所以它不会。因此希望它快一点。我们想要的是有这个基础层，这样我们就不会看错。
- en: with this floating blob。 But we're going to grab this and plot it on top of
    this so we can actually see。 how it works。 So we're going to have some context。
    We'll see how long that takes。 And in the meantime， we're going to do --， I'm
    going to show you how to do more。 Okay。 so let's do --， I'm going to start working
    on that in the meantime。
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个漂浮的blob。但我们将抓住这个并将其绘制在上面，以便我们能实际看到它是如何工作的。所以我们将有一些背景。我们将看看这需要多长时间。与此同时，我们要做的是——我将向你展示如何做更多。好的。我们来做——我会在此期间开始处理。
- en: So the way we did this -- so we're only focusing on the 25 miles。 We're going
    to create a 25 miles overlay， but instead of the difference， which is this。 we
    want the intercept， which is what we got in the first place。 Right？
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们这样做——我们只专注于25英里。我们将创建一个25英里的覆盖层，但与这个差异相反。我们想要的是截距，这就是我们一开始得到的。对吗？
- en: So we're going to do an inter。 And we're doing it this way instead of just plotting
    the actual institutions。 the radian， the polydons of the institutions with the
    25-mile radius random。 Because what we want is the information from the counties，
    from the contiguous US data frame。 So we want a county shape， except we just want
    to drop everything。 That's not inside that radius。
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们将进行一个交互。我们以这种方式进行，而不是仅仅绘制实际的机构。半径，机构的多边形与25英里半径随机。因为我们想要的是来自县的信息，来自连续的美国数据框。所以我们想要一个县的形状，除了我们只想丢弃所有不在该半径内的东西。
- en: So because this is the fault， we can actually just delete this。 And it's going
    to create that geo data frame。 And now if we run this --， Okay。 so this is how
    it's starting to look like。 These are the areas of the country that don't have
    a higher education。 institution within 25 miles。 So if you live here， there's
    nothing nearby。 If you live here。
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 所以因为这是故障，我们实际上可以删除这个。它将创建那个地理数据框。现在如果我们运行这个——好的。这开始看起来像什么。这些是该国没有高等教育机构在25英里范围内的地区。所以如果你住在这里，附近没有任何东西。如果你住在这里。
- en: you might be like 26 miles away from the college institution。 Higher education
    institution。 So what we're going to do is create that same thing， but the opposite。
    Up to these runs。 [。 This is one education system。
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能距离高等教育机构有26英里远。所以我们要做的是创建相同的东西，但相反。直到这些运行。[这是一个教育系统。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_32.png)'
  id: totrans-452
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_32.png)'
- en: And we can see if --。
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看看如果——。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_34.png)'
  id: totrans-454
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_34.png)'
- en: Oh， this is not it。 It's not the guardian。 Sorry。 The chronicle。 I don't know
    this。 This is what we're looking at。 Makes sense， huh？ This is what we did。 What
    they did。 Oh。 they just did that。 This is what we just did， except they're using
    census blocks to self-counties。 That's cool。 See？ There you go。 Areas within 60-minute
    drive from college。
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 哦，这不是它。这不是监护人。抱歉。纪事。我不知道这是我们要看的。这有意义吗？这就是我们做的。他们做的是什么？哦。他们只是这样做了。这就是我们刚刚做的，除了他们使用人口普查区块来计算县。这很酷。看？那里就有。距离大学60分钟车程的地区。
- en: That's a slightly different math， but this is pretty much what we just did。
    Let me just stop this and then just move it again。 Seriously？ Well， I do recommend
    you read this。 This is also part of -- if you sign up for this， you probably sell
    this specifically this image。 and the tutorial page。 And that's where you just
    learned how to do it。
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种稍微不同的数学，但这基本上就是我们刚才做的。让我停下来，然后再移动一下。真的吗？好吧，我确实建议你阅读这个。这也是 -- 如果你注册这个，你可能会专门销售这个图像和教程页面。这就是你刚刚学到如何做到的地方。
- en: Except they're using census blocks， which is very useful information。 It's much
    more granular。 which you can still do just like we did with counties。 You can
    just go get the shape files for census blocks。 And actually， if you do census
    data。 you can do that with census data。 You can see that you can also use -- they
    have congressional districts。
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 除了他们使用的人口普查区块，这是一条非常有用的信息。它更为细化。你可以像我们与县一样做到这一点。你可以获取人口普查区块的形状文件。实际上，如果你做人口普查数据。你可以用人口普查数据做到这一点。你还可以看到他们有国会选区。
- en: I'm just going to just go to this。 Regents， states， census tracts。 So you could
    do that and do exactly this。 Make exactly the same map。 And that's a challenge
    for you。 We did it with counties。 Try to do the same， but with census tracts。
    Then go find the census tract。 Tiger files， Tiger web line files from census，
    the shape files。 Throw them on the same project。
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 我将直接进入这里。校监、州、人口普查分区。所以你可以这样做，完全做出同样的地图。这是给你的挑战。我们与县做到了。试着一样做，但用人口普查分区。然后去找人口普查分区的泰戈文件，泰戈网页线文件和形状文件。将它们放在同一个项目中。
- en: And just like we did here， just like data。 Just like I threw in the zip， county
    zip file。 Just throw in the census tracts file and run the same workflow to the
    same thing。 Except for census tracts instead of counties。 I'll let the data just
    like you did this。 Let's see how long that takes。 Census data， downloader。 2018，
    list of million H。 That's fast。 And H。
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们在这里所做的那样，数据就是这样。就像我扔进邮政编码、县邮政编码文件一样。把人口普查分区文件扔进去，运行相同的工作流程，只不过是人口普查分区而不是县。我会让数据像你这样做。让我们看看这需要多长时间。人口普查数据，下载器。2018年，一百万H的列表。那真快。还有H。
- en: Tracks。 It might not be year 2018。 Does it think census tracts because of such
    granular data they can't just give you a lot of data for private census issues？
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 分区。它可能不是2018年。是否认为人口普查分区因为如此细化的数据，他们不能只给你大量的私人人口普查数据？
- en: So we do those for private census issues and because the ACS， the American Community
    Survey。 does samples of the population data。 It's not the census we do。 The only
    survey is 1%。 I think 1% of the country。 And from that they make their estimates。
    The census tracts are so granular that we only use census data like census year
    data。
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们为私人人口普查问题这样做，因为美国社区调查（ACS）对人口数据进行抽样。这不是我们做的人口普查。唯一的调查是1%。我认为是全国的1%。根据这个，他们做出估计。人口普查分区如此细化，以至于我们只使用像人口普查年度数据这样的数据。
- en: like the decennial census， which you should go fill out if you haven't。 Oh，
    there you go。 Bam。 So now you can see these are the areas that will be the complement
    of this。 So these are the areas that don't have a higher education institution
    within 25 miles。 These are the areas that do and can use these。 And your maps，
    and you can do some analysis。
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 比如十年一次的人口普查，如果你还没有去填写的话。哦，你看。砰。所以现在你可以看到这些地区将是这些的补充。这些地区在25英里内没有高等教育机构。这些地区有，可以使用这些。你的地图，你可以进行一些分析。
- en: We already run the statistical analysis。 We already sell those to six for each
    kind of county。 We already sell where the median age， the median household income。
    the share of all the represent minorities in each of those counties。 But now you
    can actually display it in a cool way。
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经进行了统计分析。我们已经对每种县销售了六个。我们已经销售了中位年龄、中位家庭收入和每个县代表性少数群体的份额。但现在你可以以一种很酷的方式展示它。
- en: Just like this is actually kind of like this is supposed to be。 Let's go all
    the way to time。 This。 This。 This。 This。 Perfect。 There you go。 Thank you so much
    for for。 Tending virtual Python 2020 for learning some geospatial data analysis
    and geospatial policy analysis with me。 My name is Eric Sanchez。 Just one last
    thing。 Remember that I you can go to the。
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 就像这实际上有点像这应该是的。让我们直接进入时间。这。这。这。这。完美。给你。非常感谢你。参加虚拟 Python 2020，与我一起学习一些地理空间数据分析和地理空间政策分析。我的名字是**埃里克·桑切斯**。最后一件事。记得你可以去。
- en: And you have repository for this。 And get help that comes。 Check goes。 And then
    on that。 It comes。 It's going to be right here。 It's going to be the very。 The
    second one right up to right up top。 This is where you're going to find all the
    information。 The code。 The solutions。 The solution。 And I'm going to add extra
    information in between。
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 你有这个仓库。并且可以获得随之而来的帮助。检查一下。然后在此基础上。它来了。它就会在这里。它将会是非常的。第二个就在最上面。这里就是你将找到所有信息的地方。代码。解决方案。解决办法。而且我会在中间添加额外的信息。
- en: So like mark down and links and why we're doing this。 So the link to the overlay
    link to merging data， et cetera， et cetera。 There is just like we did here。 Just
    like I did this workshop。 There's also a workshop I did last year for analyzing
    census data and that one。
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 所以像标记和链接，以及我们为什么要这样做。所以链接到叠加链接，合并数据等等。就像我们在这里做的那样。就像我做的这个研讨会一样。我去年还做过一个关于分析人口普查数据的研讨会。
- en: We use it bombs data like I showed you earlier and that's individual level data。
    Who has access to the internet？ Who doesn't have access to the internet？ What
    demographics of it。 And yeah， thank you so much。 Thank you so much for watching
    this video。 I know it's been a long time。 I mean， if you don't， you're good to
    go。
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了我之前展示的炸弹数据，那是个体级别的数据。谁有互联网接入？谁没有互联网接入？哪些人口统计数据。非常感谢你。非常感谢你观看这个视频。我知道这花了很长时间。如果你不需要，那你就可以继续了。
- en: Probably your kernel didn't die。 But if you didn't remember。 you can just make
    sure you download your notebooks and you're。 thrown back in there or you can even
    fork this。 You can probably can't do it because it's my one repo。 But you can
    fork the repository and then just change the my binder link。
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 可能你的内核并没有崩溃。但如果你不记得的话，你可以确保下载你的笔记本，并且你。回到那里，或者你甚至可以分叉这个。你可能做不到，因为这是我的一个仓库。但你可以分叉这个仓库，然后只需更改我的绑定链接。
- en: And here you can just change this little part to match your username and the
    name that you， give it。 It's probably the same。 And it will spin up my binder
    instance for you。 And then you can just then throw those notebooks into your own
    GitHub repository and you're。 good to go。 Again， thank you so much。 Hopefully
    you learned something。 Remember。
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里你只需更改这一小部分以匹配你的用户名和你所给的名称。它可能是相同的。它将为你启动我的绑定实例。然后你可以将这些笔记本放入你自己的GitHub仓库中，你就可以继续了。再次感谢你。希望你学到了一些东西。记住。
- en: if there's any questions， feel free to submit an issue。 I'll be checking those
    and I'll try to be as helpful as possible。 Thank you so much。 Clear round。 [BLANK_AUDIO]。
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有任何问题，请随时提交一个问题。我会查看这些问题，尽量提供帮助。非常感谢。清晰的圆圈。[空白音频]。
- en: '![](img/3d542d062784efc24cd1e1e82252239d_36.png)'
  id: totrans-471
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d542d062784efc24cd1e1e82252239d_36.png)'
