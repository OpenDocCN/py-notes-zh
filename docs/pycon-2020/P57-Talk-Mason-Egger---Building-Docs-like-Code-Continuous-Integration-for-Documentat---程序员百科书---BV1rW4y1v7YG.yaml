- en: P57：Talk Mason Egger - Building Docs like Code Continuous Integration for Documentat
    - 程序员百科书 - BV1rW4y1v7YG
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P57：Talk Mason Egger - Building Docs like Code Continuous Integration for Documentation
    - 程序员百科书 - BV1rW4y1v7YG
- en: '![](img/c584fbc67eb8cbb5b989b792a9fe420f_0.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c584fbc67eb8cbb5b989b792a9fe420f_0.png)'
- en: '![](img/c584fbc67eb8cbb5b989b792a9fe420f_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c584fbc67eb8cbb5b989b792a9fe420f_1.png)'
- en: 大家好，这是构建像代码一样的文档，持续整合文件，我叫梅森•艾格，我为 digitalocean的开发者社区服务，我也是微软慈善计划的志愿教育家，称为蓝绿色，它将行业专业人士与全国各地的教师配对。帮助计算机科学进入学校，我也是一个文件狂热者，所以这个演讲是给谁的
    这个演讲基本上是给任何人的，无论您是开源维护者，或者你是一个初级或高级开发人员，你要么管理一个项目，要么管理一个社区。你是 devops的工程师，真的，真的，名单一直在继续，一直在继续，实际上，这个演讲是为任何写作的人准备的，维护或管理他们打算与他人共享的产品，所以这次谈话的第一部分，让我们讨论如何管理文件。所以这是一种常见的文档处理方法，这是一个古老的故事，开发人员编写代码，开发人员提交他们的代码，代码经过审查和测试，以确保它是质量代码，准备好发行了吗，做了代码，通过测试，是时候让我们，勇往直前。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 大家好，这是构建像代码一样的文档，持续集成文件，我叫梅森·艾格，我为DigitalOcean的开发者社区服务，我也是微软慈善计划的志愿教育家，称为蓝绿色，它将行业专业人士与全国各地的教师配对，帮助计算机科学进入学校，我也是一个文件狂热者，所以这个演讲是给谁的？这个演讲基本上是给任何人的，无论您是开源维护者，或是一个初级或高级开发人员，您要么管理一个项目，要么管理一个社区。您是DevOps的工程师，真的，名单一直在继续，实际上，这个演讲是为任何写作的人准备的，维护或管理他们打算与他人共享的产品，所以这次谈话的第一部分，让我们讨论如何管理文件。所以这是一种常见的文档处理方法，这是一个古老的故事，开发人员编写代码，开发人员提交他们的代码，代码经过审查和测试，以确保它是质量代码，准备好发行了吗，做了代码，通过测试，是时候让我们，勇往直前。
- en: 如果答案是否定的，开发人员回到过去，很高兴地编写了更多的代码，如果答案是肯定的，另一方面，现在需要有人来写文件，因为现在的顾客，你知道吗，期待着有医生和他们的代码，所以现在这个人可能是开发商。可能是个技术作家，可能是一个不同的开发人员，他甚至不在项目中，可能是个新员工，你知道这会导致一些非常有趣的文件，但它确实发生了，所以，目前这种做法的问题，以目前的模式，嗯文档几乎是事后才想到的。在这个漫长的发布周期中
    也会导致事情被遗忘，我知道很多人都想做敏捷开发，我们想到了迭代发布和两周周期之类的东西，但我的第一份工作实际上是构建一个物理设备和一个操作系统，一直延伸到一个物理设备上。我们运出去的，去了很多没有互联网接入的地方，所以我们的发行周期是8个月，嗯，如果你在8个月后问我，我一开始做的工作和需要记录的东西，我很难记住到底发生了什么，我做了，还有，实施者和作者之间的分离层越多。
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果答案是否定的，开发人员回到过去，很高兴地编写了更多的代码，如果答案是肯定的，另一方面，现在需要有人来写文件，因为现在的顾客，知道吗，期待着有文档与他们的代码，所以现在这个人可能是开发者。可能是个技术作家，可能是一个不同的开发人员，他甚至不在项目中，可能是个新员工，你知道这会导致一些非常有趣的文件，但它确实发生了，所以，目前这种做法的问题，以目前的模式，文档几乎是事后才想到的。在这个漫长的发布周期中也会导致事情被遗忘，我知道很多人都想做敏捷开发，我们想到了迭代发布和两周周期之类的东西，但我的第一份工作实际上是构建一个物理设备和一个操作系统，一直延伸到一个物理设备上。我们运出去的，去了很多没有互联网接入的地方，所以我们的发行周期是8个月，嗯，如果你在8个月后问我，我一开始做的工作和需要记录的东西，我很难记住到底发生了什么，我做了，还有，实施者和作者之间的分离层越多。
- en: 可能性越大，文件越可能变得不准确，所以有些公司确实有与工程师密切合作的技术写作人员，和他们的医生一起工作，这很好，嗯，但你知道，你认识一个不同的工程师，你知道写它们，写文档介绍这层隔离。这很可能会导致不准确的文件，最大的问题是开发人员不喜欢记录，这就是我想说的，开发人员不喜欢记录，为什么开发人员不喜欢记录他们的代码，因为我的意思是，我以前去过蟒蛇，你们中的一些看过这个视频的人也是如此。也许你们中的一些人可能参加过其他的会议，或者和你的同事在一起，或者在教室里什么的，开发人员喜欢编写代码，我想我想你知道，我敢说这很可能是，我们大家都喜欢写代码，我们喜欢谈论我们的代码，你知道吗。蟒蛇的走廊
    轨道上挤满了人，只是叙叙旧，谈论他们的项目，做所有这些，所以开发人员喜欢告诉人们他们做了什么，为什么开发人员讨厌编写他们的代码，从字面上讲，它只是谈论代码的一种方式。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 可能性越大，文件就越可能变得不准确，所以有些公司确实有与工程师密切合作的技术写作人员，和他们的医生一起工作，这很好，嗯，但你知道，你认识一个不同的工程师，知道写文档会引入这层隔离。这很可能会导致不准确的文件，最大的问题是开发人员不喜欢记录，这就是我想说的，开发人员不喜欢记录，为什么开发人员不喜欢记录他们的代码，因为我的意思是，我以前去过蟒蛇，或许你们中的一些人也看过这个视频。也许你们中的一些人参加过其他会议，或者和同事在一起，或者在教室里，开发人员喜欢编写代码，我想你们也知道，我敢说这很可能是，我们大家都喜欢写代码，我们喜欢谈论我们的代码，你知道吗。蟒蛇的走廊里挤满了人，他们在叙旧，谈论他们的项目，做所有这些，所以开发人员喜欢告诉人们他们做了什么，为什么开发人员讨厌编写他们的代码，从字面上讲，它只是谈论代码的一种方式。
- en: 只不过它不是从你嘴里说出来的，写在一张纸上，这有助于我们认识到真正的问题，也就是说，大多数开发人员并不讨厌编写文档，他们真正不喜欢的是他们被迫编写这些文档的工作流，开发人员必须切换工具。当他们想记录一些东西的时候，我要离开我的代码编辑器，我得离开我的航站楼，我必须去这个，谁知道是什么，也许这个微软的词，也许是某种维基存在于我的系统中，我得离开我正在做的事情，去别的地方使用。有人几乎不工作，您看到的是让编辑器创建这个代码的内容，我很抱歉制造了这些文件，所以这个上下文切换让他们不愿意写文档，所以任务被推迟了，被推到最后，你知道我不想离开我的文本编辑器，我正在写我的代码，就像。你为什么要让我离开我喜欢的工作流程，我晚点再做，这种事经常发生，那么，我们如何将文档过程集成到工作流中呢？让开发者更享受，所以我们换个角度想想，而不是像对待医生一样对待医生。
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 只不过它不是从你嘴里说出来的，写在一张纸上，这有助于我们认识到真正的问题，也就是说，大多数开发人员并不讨厌编写文档，他们真正不喜欢的是被迫编写这些文档的工作流，开发人员必须切换工具。当他们想记录一些东西的时候，我要离开我的代码编辑器，我得离开我的终端，我必须去这个，谁知道是什么，也许是微软的Word，或许是某种维基存在我的系统中，我得离开我正在做的事情，去别的地方使用。有人几乎不工作，您看到的是让编辑器创建这个代码的内容，我很抱歉制造了这些文件，所以这个上下文切换让他们不愿意写文档，所以任务被推迟了，被推到最后，你知道我不想离开我的文本编辑器，我正在写我的代码，就像。你为什么要让我离开我喜欢的工作流程，我晚点再做，这种事经常发生，那么，我们如何将文档过程集成到工作流中呢？让开发者更享受，所以我们换个角度想想，而不是像对待医生一样对待医生。
- en: 如果我们像对待代码一样对待我们的医生，如果我们的文档不在代码之外，他们就住在它旁边 在我们的仓库里，如果我们使用标记或重组文本之类的语言，或者是开发人员已经知道的，而不是再次，一个失败的魔法假发编辑器。不让你创建链接，什么的，我把医生当成代码是什么意思，尽管你知道他们，他们是，你知道吗，人们说，好吧，梅森，这些是文件，他们不执行，它们怎么可能是代码，好吧，它们不是真正的代码。但我们可以像对待代码一样对待他们，这意味着我们的
    doc文件存储在版本控制系统中，就像我们的代码，它们可以存放在它旁边，我们的文档可能和我们的源代码在同一个目录中，建造，码头是自动建造的。工件是自动构建的，每次提交
    每次投票请求，这意味着我们可以在每次推送或提交时自动构建码头，所以我们通常是如何运行单元测试的，我们会从那些，可能是一份检测报告，我们也可以建立我们的文档。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们像对待代码一样对待我们的医生，如果我们的文档不在代码之外，而是住在我们的仓库里，如果我们使用开发人员已经知道的标记或重组文本的语言，而不是使用一个失败的魔法假发编辑器，那么我的意思是，尽管你知道他们，他们是，你知道吗，人们会说，“好吧，梅森，这些是文件，它们不执行，它们怎么可能是代码？”好吧，它们不是真正的代码。但我们可以像对待代码一样对待它们，这意味着我们的文档文件存储在版本控制系统中，就像我们的代码一样，它们可以和源代码存放在同一个目录中，构建和码头是自动化的。工件会在每次提交或拉取请求时自动构建，这意味着我们可以在每次推送或提交时自动构建码头，所以我们通常如何运行单元测试，我们会从那些，可能是一份检测报告，我们也可以构建我们的文档。
- en: 所以我们可以查看每一个变化的文档，确保，确保一套值得信赖的审评员，以确保对医生的审核一丝不苟，我们一直在对我们的代码进行代码审查，为什么我们不做同样的细致，穿过我们的码头。我们可以检查这些文档是否经过了准确性和功能性的测试，是的，你可以测试医生，斯芬克斯可以让你做一些事
    情 比如测试，以确保呃，超链接实际上去了 你说去的地方，如果代码片段真的有效，并产生你所说的输出。我们完全可以测试医生，这也允许我们在没有人为干预的情况下发布文物，那么我们能从中得到什么呢？如果我们像对待代码一样对待我们的医生，这促进了合作，Github如何帮助我们促进与源代码的协作。它帮助我们促进与文档的协作，有人可以做一个可怜的，谁能看出码头错位或破损，你知道吗，可能是别的队的人，支持部门的人，可能是个开源项目，社区里的某个人可能在做黑客之类的事情，托伯节可以查看这些文档。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们可以查看每一个变化的文档，确保一套值得信赖的审评员，以确保对医生的审核一丝不苟，我们一直在对我们的代码进行代码审查，为什么我们不做同样的细致，穿过我们的码头。我们可以检查这些文档是否经过了准确性和功能性的测试，是的，你可以测试医生，斯芬克斯可以让你做一些事情，比如测试，以确保超链接实际上去了你说去的地方，如果代码片段真的有效，并产生你所说的输出。我们完全可以测试医生，这也允许我们在没有人为干预的情况下发布文档，那么我们能从中得到什么呢？如果我们像对待代码一样对待我们的医生，这促进了合作，GitHub如何帮助我们促进与源代码的协作。它帮助我们促进与文档的协作，有人可以做一个可怜的，谁能看出码头错位或破损，你知道吗，可能是别的队的人，支持部门的人，可能是个开源项目，社区里的某个人可能在做黑客之类的事情，托伯节可以查看这些文档。
- en: 拉改变他们，并做一个拉请求备份，你知道他们会帮助合作 帮助建立你的文档，让他们变得更好，它允许我们跟踪文档，错误是错误，很久以前我听到的最爱的事情之一，当我刚开始的时候开放的
    bsd社区。它是一个基于 bsd的操作系统，呃，仅存的 UNIX残存物之一，嗯，将文档中的 bug视为一个重要的 bug，因为文件很重要，人们会使用它们，你必须这样对待他们，文档中的错误应被视为
    bug。它们应该被视为相对较高的虫子，因为否则人们会错误地使用你的产品，然后他们就会，你知道吗，在推特上抱怨，很多人都这么做，很多时候，你知道吗，如果你写了新的代码，你得进行单元测试。否则你的团队领导不会接受代码审查，在你有单元测试之前，他们甚至不会开始审查它，我们要做的就是，是，我们可以把它扩展到现在，或者至少解释为什么文档不需要更新，如果你要这么做，更多的时候，如果你要添加代码。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 拉取更改并做一个拉取请求，知道他们会合作，帮助建立你的文档，使其变得更好，这允许我们跟踪文档，错误是错误，很久以前我听到的最爱的事情之一，当我刚开始的时候是在开放的BSD社区。它是一个基于BSD的操作系统，仅存的UNIX残余之一，将文档中的错误视为一个重要的错误，因为文件很重要，人们会使用它们，你必须这样对待它们，文档中的错误应被视为错误。它们应该被视为相对较高的bug，因为否则人们会错误地使用你的产品，然后他们就会，你知道吗，在推特上抱怨，很多人都这么做，很多时候，你知道吗，如果你写了新的代码，你得进行单元测试。否则你的团队领导不会接受代码审查，在你有单元测试之前，他们甚至不会开始审查它，我们要做的就是，是，我们可以把它扩展到现在，或者至少解释为什么文档不需要更新，如果你要这么做，更多的时候，如果你要添加代码。
- en: 文件可能需要更新，你可能在修窃听器，你增加了一个新功能，你做的东西也许更多一点，你知道吗，性能增强，可能不需要一点点，但如果你要改变，你需要更新文件，它使我们能够建造美丽统一的码头。我们可以创建一个流程，在整个公司创建相同外观的文档，整个项目，他们都表现得很好，它允许我们利用开发人员工具和工作流，我们一直在使用敏捷和
    gitops之类的东西。以及我们一直在使用的所有这些开发工具和工作流程，它们帮助我们在编码世界中变得更有效率，我们将能够利用这些工作流和像 git这样的工具，把我们的文件，哦，版本文档来获取所有这些东西。它还授权开发人员编写文档，开发人员实际上喜欢用这种方式编写文档，当您将它作为文档的一部分添加到代码评审中时，在需要的地方，它最终只是成为第二天性，开发者也在不断地更新文档。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 文件可能需要更新，你可能在修窃听器，你增加了一个新功能，你做的东西也许更多一点，你知道吗，性能增强，可能不需要一点点，但如果你要改变，你需要更新文件，它使我们能够建造美丽统一的码头。我们可以创建一个流程，在整个公司创建相同外观的文档，整个项目，他们都表现得很好，它允许我们利用开发人员工具和工作流，我们一直在使用敏捷和
    gitops之类的东西。以及我们一直在使用的所有这些开发工具和工作流程，它们帮助我们在编码世界中变得更有效率，我们将能够利用这些工作流和像 git这样的工具，把我们的文件，哦，版本文档来获取所有这些东西。它还授权开发人员编写文档，开发人员实际上喜欢用这种方式编写文档，当您将它作为文档的一部分添加到代码评审中时，在需要的地方，它最终只是成为第二天性，开发者也在不断地更新文档。
- en: 我实际上有一个案例研究来证明这一点，实际上我有两个案例可以证明，一支新球队在主场客场，维罗，这是我曾经是一个网站，在我加入digitalocean之前，公司的可靠性工程师正在开发一个新产品。新
    Github组织，新队员，我在这个团队的一切，在 Github组织中添加的第一个存储库，是文档存储库，这真的很有趣 因为在我们开始制作产品之前，我们所有的建筑讨论，我们做的所有决定，所有的。我们应该用这个工具吗？或者那个工具被记录了，然后在一天结束的时候被推着降价，然后它会自动更新有我们的文档的网站，每个人都可以很容易地跟着我们，看看我们每天都在做什么，真的很神奇，文件是最新的。维护得很好，组织整个部门，每个人都知道我们在研究，我们从来没有像嘿，怎么回事，和我们的主管开会之类的，他们是最好的医生，然后我实际上有一个新的案例研究，对于那些看过这个演讲的人来说，我不打算读所有这些。
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我实际上有一个案例研究来证明这一点，实际上我有两个案例可以证明，一支新球队在主场客场，维罗，这是我曾经是一个网站，在我加入digitalocean之前，公司的可靠性工程师正在开发一个新产品。新
    Github组织，新队员，我在这个团队的一切，在 Github组织中添加的第一个存储库，是文档存储库，这真的很有趣 因为在我们开始制作产品之前，我们所有的建筑讨论，我们做的所有决定，所有的。我们应该用这个工具吗？或者那个工具被记录了，然后在一天结束的时候被推着降价，然后它会自动更新有我们的文档的网站，每个人都可以很容易地跟着我们，看看我们每天都在做什么，真的很神奇，文件是最新的。维护得很好，组织整个部门，每个人都知道我们在研究，我们从来没有像嘿，怎么回事，和我们的主管开会之类的，他们是最好的医生，然后我实际上有一个新的案例研究，对于那些看过这个演讲的人来说，我不打算读所有这些。
- en: 但就在我离开威宝之前，我加入了一个新的团队，这个新团队负责一个大型应用程序接口，有像样的文件，但不是最伟大的，我介绍了这个工作流程，此文档作为代码工作流，我从我的朋友那里收到了一堵巨大的短信墙。其中一些是主要的亮点，我以前的一个同事，上面说医生，这完全改变了，团队，他们改进了他们的文件，内部的111个部分，所有队员的验尸报告都在这些文档里，所以你可以去看，从头到尾的事件。你可以看到所有的时间顺序，因为发生了什么事，他们都很好，当我进入这个团队的时候，花了两个月的时间开类似的会议，比如白板，你也知道，哦，我们忘了你需要访问这个
    git仓库，所有这些。所有这些现在都被记录在案，他们实际上可以在几天内登上一个团队成员，所以我就不看剩下的了，但如果你有兴趣，我肯定会读这个，这就证明了，如果你有好的文档，你让开发人员想写它们，他们会而且会改变你的组织。
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但就在我离开威宝之前，我加入了一个新的团队，这个新团队负责一个大型应用程序接口，有像样的文件，但不是最伟大的，我介绍了这个工作流程，此文档作为代码工作流，我从我的朋友那里收到了一堵巨大的短信墙。其中一些是主要的亮点，我以前的一个同事，上面说医生，这完全改变了，团队，他们改进了他们的文件，内部的111个部分，所有队员的验尸报告都在这些文档里，所以你可以去看，从头到尾的事件。你可以看到所有的时间顺序，因为发生了什么事，他们都很好，当我进入这个团队的时候，花了两个月的时间开类似的会议，比如白板，你也知道，哦，我们忘了你需要访问这个
    git仓库，所有这些。所有这些现在都被记录在案，他们实际上可以在几天内登上一个团队成员，所以我就不看剩下的了，但如果你有兴趣，我肯定会读这个，这就证明了，如果你有好的文档，你让开发人员想写它们，他们会而且会改变你的组织。
- en: 这将如何改变我们之前讨论的工作流，你知道开发人员编写代码，但现在他们也同时写文件，开发人员提交此代码，因为它们在同一个仓库里，或者它们在一个单独的仓库里，你知道吗，主流文档一。但你要同时把他们两个都交出来，他们通过审查，他们通过测试，是时候释放不，开发人员回去编写代码和文档，如果我们答应，我们只需按下按钮，因为医生一直都是这个过程的一部分，现在建造的神器，任何其他代码工件。医生们被推着，开发者可以重新编写代码，因为不得不暂停而没有中断，我们来个冲刺，我以前听说过，如果你在做医生冲刺，我强烈建议你看看这个工作流程，我觉得，您将从这个工作流中获得更多的迭代周期。如果你用博士冲刺，那工具是什么，什么是cicd文件？所以简单定义一下，因为计算机科学和软件工程充满了缩写，以至于没有人会花时间去解释，所以我要向他们解释，嗯，持续集成意味着代码被持续测试，与其他。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这将如何改变我们之前讨论的工作流，你知道开发人员编写代码，但现在他们也同时写文件，开发人员提交此代码，因为它们在同一个仓库里，或者它们在一个单独的仓库里，你知道吗，主流文档一。但你要同时把他们两个都交出来，他们通过审查，他们通过测试，是时候释放不，开发人员回去编写代码和文档，如果我们答应，我们只需按下按钮，因为医生一直都是这个过程的一部分，现在建造的神器，任何其他代码工件。医生们被推着，开发者可以重新编写代码，因为不得不暂停而没有中断，我们来个冲刺，我以前听说过，如果你在做医生冲刺，我强烈建议你看看这个工作流程，我觉得，您将从这个工作流中获得更多的迭代周期。如果你用博士冲刺，那工具是什么，什么是cicd文件？所以简单定义一下，因为计算机科学和软件工程充满了缩写，以至于没有人会花时间去解释，所以我要向他们解释，嗯，持续集成意味着代码被持续测试，与其他。
- en: 代码更改，然后它们在连续部署中合并，需要将代码持续部署到测试服务器或生产服务器，整个代码库的每个补丁，这些定义直接来自于文档，就像密码本和温柔，这对医生来说意味着什么，对于医生来说。cicd意味着用每一个补丁构建一个完整的文档工件，所以每次我做补丁的时候，我拿到了新版本的文件，在现实中，文档的版本应该与代码的版本完美地对齐，您正在不断地测试每个补丁的内容，我可以做一些文档测试。测试代码以确保它有效，我可以确保我所有的链接都能正常工作，我其实是在测试这些文件，以确保我写的是真的，他们每次发布都是自动发布的，我们有文档的版本，版本文档就像你知道的最好的东西，如果你从来没有过。我不知道你知道你喜欢，我不知道
    API的哪个版本，是这里吗？这个版本是吧，这个版本，哦，哦，没有看，我可以确切地知道他们说这个版本是什么意思，而且很有帮助，所以你会遇到不同类型的文档和不同类型的文档。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 代码更改，然后它们在连续部署中合并，需要将代码持续部署到测试服务器或生产服务器，整个代码库的每个补丁，这些定义直接来自于文档，就像密码本和温柔，这对医生来说意味着什么，对于医生来说。cicd意味着用每一个补丁构建一个完整的文档工件，所以每次我做补丁的时候，我拿到了新版本的文件，在现实中，文档的版本应该与代码的版本完美地对齐，您正在不断地测试每个补丁的内容，我可以做一些文档测试。测试代码以确保它有效，我可以确保我所有的链接都能正常工作，我其实是在测试这些文件，以确保我写的是真的，他们每次发布都是自动发布的，我们有文档的版本，版本文档就像你知道的最好的东西，如果你从来没有过。我不知道你知道你喜欢，我不知道
    API的哪个版本，是这里吗？这个版本是吧，这个版本，哦，哦，没有看，我可以确切地知道他们说这个版本是什么意思，而且很有帮助，所以你会遇到不同类型的文档和不同类型的文档。
- en: 我们称之为长格式文档，哪些是用户指南，etc，你知道吗，所以，嗯，我们在维罗做的，这些就是你知道的 欢迎来到这个应用程序界面，这就是你如何使用它的东西，如果不使用代码生成的样式，API喜欢大摇大摆。还有功能文档，就像宁静的猿猴，SDKs，手册之类的，这些实际上是嗯，更有可能是在源代码的存储库中，你也知道，他们可能会使用某种自动生成的工具，帮助生成大量的内容，而不是做大量的手工写作。你可以在我们现有的长格式文档工具中看到，我们有静态现场发电机，呃，做医生雨果，有，有这么多，我真的看到我的一个朋友发了一条关于它的推特，前几天在推特上问，你知道你用哪个静态站点生成器，每个人都在评论。很多人刚刚写了他们自己的，实际上可能有更多的静态站点生成器
    比世界上有更多的开发人员，嗯，适合长格式文档，常见问题，运行书籍，这是我的朋友杰瑞德在前一张幻灯片中使用过的东西。
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们称之为长格式文档，哪些是用户指南，etc，你知道吗，所以，嗯，我们在维罗做的，这些就是你知道的 欢迎来到这个应用程序界面，这就是你如何使用它的东西，如果不使用代码生成的样式，API喜欢大摇大摆。还有功能文档，就像宁静的猿猴，SDKs，手册之类的，这些实际上是嗯，更有可能是在源代码的存储库中，你也知道，他们可能会使用某种自动生成的工具，帮助生成大量的内容，而不是做大量的手工写作。你可以在我们现有的长格式文档工具中看到，我们有静态现场发电机，呃，做医生雨果，有，有这么多，我真的看到我的一个朋友发了一条关于它的推特，前几天在推特上问，你知道你用哪个静态站点生成器，每个人都在评论。很多人刚刚写了他们自己的，实际上可能有更多的静态站点生成器
    比世界上有更多的开发人员，嗯，适合长格式文档，常见问题，运行书籍，这是我的朋友杰瑞德在前一张幻灯片中使用过的东西。
- en: 是一个静态站点生成器来生成所有这些代码，这样它就很容易被搜索到，你知道制服，但还是想写代码，当你写的时候，基于源代码的文档生成器，存在于代码内部的文档，皮多克就是其中之一，你知道吗，斯芬克斯。Java
    doc，然后有些甚至生成客户端进行测试，就像昂首阔步，它将生成 api测试客户端之类的，然后是系统文件生成器，嗯，我把这个放在这里，因为它让我每次想到它都咯咯地笑，它叫罗恩。它是一个基于标记速度的人工页生成器，作为一个，我爱，呃，手册页，但这让我发笑，因为手册页的格式，他们把工具做成了，因为它是罗斯的对立面，每次一想到这个我就傻笑，所以现在你听到了，也是，所以文档工具。然而，虽然我曾经听过德鲁莱文的一句名言，who是
    freebsd项目的核心文档维护者，在她的德克萨斯 linux音乐节上关于斯芬克斯的演讲中，从本质上说，你的文档工具越强大。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 是一个静态站点生成器来生成所有这些代码，这样它就很容易被搜索到，你知道制服，但还是想写代码，当你写的时候，基于源代码的文档生成器，存在于代码内部的文档，皮多克就是其中之一，你知道吗，斯芬克斯。Java
    doc，然后有些甚至生成客户端进行测试，就像昂首阔步，它将生成 api测试客户端之类的，然后是系统文件生成器，嗯，我把这个放在这里，因为它让我每次想到它都咯咯地笑，它叫罗恩。它是一个基于标记速度的人工页生成器，作为一个，我爱，呃，手册页，但这让我发笑，因为手册页的格式，他们把工具做成了，因为它是罗斯的对立面，每次一想到这个我就傻笑，所以现在你听到了，也是，所以文档工具。然而，虽然我曾经听过德鲁莱文的一句名言，who是
    freebsd项目的核心文档维护者，在她的德克萨斯 linux音乐节上关于斯芬克斯的演讲中，从本质上说，你的文档工具越强大。
- en: 使用神奇的假发编辑器就越复杂，就像微软 word，相对容易使用，但他们没有那么大的权力，像乳胶这样的工具，然后像狮身人面像，如果你看看狮身人面像上的曲线，它实际上是倒退的，嗯，它们是非常强大的工具。你几乎可以用它们做任何事情，嗯，所以你要知道，就像你越往下走，模具越复杂，所以文档工具，Mark
    mk dos，我们将讨论两个我喜欢的文档工具，其中一个用于静态站点，一个用于代码生成，从那里开始。所以做文档或 mk文档，我不知道他们会怎么说，是基于标记的文档，基于
    YAML的配置文件工具，嗯，在我看来，这是诚实的，我见过的最简单的静态站点工具，有一个 YAML文件，有一个目录。你所有的东西都在那里，组织起来，因此，它工作得非常好，在这个工具上到
    hello world的时间大约是30秒，它是超级容易得到它和运行 它是很容易配置，支持许多扩展和主题，我个人使用制作文档材料主题。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用神奇的假发编辑器就越复杂，就像 `微软 Word`，相对容易使用，但他们没有那么大的权力，像乳胶这样的工具，然后像狮身人面像，如果你看看狮身人面像上的曲线，它实际上是倒退的，嗯，它们是非常强大的工具。你几乎可以用它们做任何事情，嗯，所以你要知道，就像你越往下走，模具越复杂，所以文档工具，`mk
    dos`，我们将讨论两个我喜欢的文档工具，其中一个用于静态站点，一个用于代码生成，从那里开始。所以做文档或 `mk` 文档，我不知道他们会怎么说，是基于标记的文档，基于
    `YAML` 的配置文件工具，嗯，在我看来，这是诚实的，我见过的最简单的静态站点工具，有一个 `YAML` 文件，有一个目录。你所有的东西都在那里，组织起来，因此，它工作得非常好，在这个工具上到
    `hello world` 的时间大约是 30 秒，它是超级容易得到它和运行，它是很容易配置，支持许多扩展和主题，我个人使用制作文档材料主题。
- en: 我觉得它给了它一个非常好的流动，它有一个惊人的搜索功能，可以在你的文档中搜索，这绝对是最好的，嗯，它是以蟒蛇为基础的，所以很容易扩展和修改，您可以轻松添加自己的主题，添加您自己的扩展。并对其做任何您想做的事情，所以这是一个蟒蛇工具，基本上就是用姜二模板出一大堆东西，和解析
    markdown，真的很容易延伸，我最喜欢的一件事就是。如果你把它和一些非常酷的 javascript工具结合起来，称为流程图 js和序列 js，顺序图，实际上，您可以创建基于markdown的流程图，在建造的时候被渲染出来，这是非常重要的，因为我不能，嗯。我甚至不知道我看了多少次文档，看了看，看了那里的图表，就像，这张图表是从哪里来的，好吧，有人在他们的电脑上做了一个，你知道吗，它的快照，现在它将会，你知道他们三个月前离开了公司，所以医生说，呃。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我觉得它给了它一个非常好的流动，它有一个惊人的搜索功能，可以在你的文档中搜索，这绝对是最好的，嗯，它是以蟒蛇为基础的，所以很容易扩展和修改，您可以轻松添加自己的主题，添加您自己的扩展。并对其做任何您想做的事情，所以这是一个蟒蛇工具，基本上就是用
    `Jinja2` 模板出一大堆东西，和解析 `markdown`，真的很容易延伸，我最喜欢的一件事就是。如果你把它和一些非常酷的 `javascript`
    工具结合起来，称为 `flowchart.js` 和 `sequence.js`，实际上，您可以创建基于 `markdown` 的流程图，在建造的时候被渲染出来，这是非常重要的，因为我不能，嗯。我甚至不知道我看了多少次文档，看了看，看了那里的图表，就像，这张图表是从哪里来的，好吧，有人在他们的电脑上做了一个，你知道吗，它的快照，现在它将会，你知道他们三个月前离开了公司，所以医生说，呃。
- en: 图不见了，所以现在唯一能让我，你知道吗，修改那个图表是为了让我完全重新制作它，我以前也这么做过，有好几次我熬夜，你知道吗，过去工作三四个小时，尝试重新创建工作流程图，太悲惨了，所以能够拥有它。在源代码中有你的图表是惊人的，现在，它们能做的事情有些有限，但是嘿，一切的代码，它可以延长，所以祝你好运，我真的很喜欢他们，他们真的很棒，我将简要介绍的另一个文档工具是狮身人面像。所以斯芬克斯是一个重组的
    基于文本的文档工具，支持标记，它是创建 python最常用的工具，用于编码文档的 SDK文档，所以如果您曾经在 python方法中创建过 doc字符串，嗯，你很专业。它可能是用狮身人面像来解析它，有其他工具可以做到这一点，但狮身人面像是最常见的，它甚至不只是用于
    sdk文档的编码文档，很多人都很复杂，医生用斯芬克斯制作他们的东西，一个真正的o。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图不见了，所以现在唯一能让我，你知道吗，修改那个图表是为了让我完全重新制作它，我以前也这么做过，有好几次我熬夜，你知道吗，过去工作三四个小时，尝试重新创建工作流程图，太悲惨了，所以能够拥有它。在源代码中有你的图表是惊人的，现在，它们能做的事情有些有限，但是嘿，一切的代码，它可以延长，所以祝你好运，我真的很喜欢他们，他们真的很棒，我将简要介绍的另一个文档工具是狮身人面像。所以
    `Sphinx` 是一个重组的基于文本的文档工具，支持标记，它是创建 `python` 最常用的工具，用于编码文档的 `SDK` 文档，所以如果您曾经在 `python`
    方法中创建过 `doc` 字符串，嗯，你很专业。它可能是用狮身人面像来解析它，有其他工具可以做到这一点，但狮身人面像是最常见的，它甚至不只是用于 `sdk`
    文档的编码文档，很多人都很复杂，医生用 `Sphinx` 制作他们的东西，一个真正的 `o`。
- en: 过去是一个pc bsd文档，我认为几乎所有 IX系统的文档都是免费的，诸如此类的东西都是狮身人面像的文件，他们有自己的主题，他们有自己的程序，但它使用狮身人面像只是为了创建长格式文档，又来了。我之前说过
    你的工具越强大，它能做的就越多，斯芬克斯可以做任何事情，所以你可以做任何事，就是这样，你知道吗，强大的东西，它可以格式化到任何媒体，我很难在最好的日子里写乳胶，斯芬克斯会写，嗯。斯芬克斯可能是有感觉的，我们目前还不确定，嗯，我很确定这是一个图灵完整的文档工具，但这是个很好的工具，所以有一件事真的很棒，我喜欢谈论的狮身人面像，它甚至不是真的在斯芬克斯，从技术上讲。它在python
    is doc测试的标准库中，嗯，斯芬克斯实际上帮助展示了这一点，让它真的像，他们有一个像斯芬克斯一样的命令来运行它，但实际上你可以测试狮身人面像代码中的文档，确保你所说的输出确实有效。
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 过去是一个 `PC-BSD` 文档，我认为几乎所有 `IX` 系统的文档都是免费的，诸如此类的东西都是狮身人面像的文件，他们有自己的主题，他们有自己的程序，但它使用狮身人面像只是为了创建长格式文档，又来了。我之前说过，您的工具越强大，它能做的就越多，`Sphinx`
    可以做任何事情，所以你可以做任何事，就是这样，你知道吗，强大的东西，它可以格式化到任何媒体，我很难在最好的日子里写乳胶，`Sphinx` 会写，嗯。`Sphinx`
    可能是有感觉的，我们目前还不确定，嗯，我很确定这是一个图灵完整的文档工具，但这是个很好的工具，所以有一件事真的很棒，我喜欢谈论的狮身人面像，它甚至不是真的在
    `Sphinx`，从技术上讲。它在 `python` 的 `doc` 测试的标准库中，嗯，`Sphinx` 实际上帮助展示了这一点，让它真的像，他们有一个像
    `Sphinx` 一样的命令来运行它，但实际上你可以测试狮身人面像代码中的文档，确保你所说的输出确实有效。
- en: 因此它将用 python repl解析您的代码，前面的语法，实际上运行代码，在底部的输出，它会比较它说是的，你允许它的代码，你给出的结果，我实际上有我的狮身人面像文件，捕捉我的单元测试
    没有的错误。这可能是不好的，因为你应该有一个很好的单元测试覆盖率，但这只是另一层东西，以确保，你说的话，所以我喜欢医生测试 我认为它没有得到任何接近金额，他们爱它
    应得的，又来了，只是谈谈文档工具 罗恩。这就是基于标记的手册页的样子，它就会转化为，演示时间到了，这应该是蟒蛇的现场演示，但现在它将是一个视频的现场演示，所以我的问题是我需要创建许多开源文本，都有相似的格式，这就是开箱即用的生产。这让我们更容易，也许不是最有技术的人能够做出贡献，嗯，我不想担心建立文本，或者做任何构建过程，我只想把它们推到一个
    Github仓库，他们工作，我想要一个跳转启动的工作流程，博士作家。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 因此它将用 `python repl` 解析您的代码，前面的语法，实际上运行代码，在底部的输出，它会比较它说的，您允许它的代码，您给出的结果，我实际上有我的狮身人面像文件，捕捉我的单元测试没有错误。这可能是不好的，因为您应该有很好的单元测试覆盖率，但这只是另一层东西，以确保您说的话，所以我喜欢医生测试，我认为它没有得到应有的关注，他们爱它，应得的，又来了，只是谈谈文档工具罗恩。这就是基于标记的手册页的样子，它会转化为，演示时间到了，这应该是蟒蛇的现场演示，但现在它将是一个视频的现场演示，所以我的问题是我需要创建许多开源文本，都有相似的格式，这就是开箱即用的生产。这让我们更容易，也许不是最有技术的人能够做出贡献，嗯，我不想担心建立文本，或者做任何构建过程，我只想把它们推到一个
    `Github` 仓库，他们工作，我想要一个跳转启动的工作流程，博士作家。
- en: 所以我的解决办法是，作者将生成文档，然后他们会写文件，所以他们会生成一个基础模板，然后他们会写文件，作者会通过推送这些文件来发表它们，git和 docs将被发布到一个托管的解决方案中。我选择在这个项目中使用的工具是饼干切割机，生成文档基本上是使用一个蟒蛇模板，呃，原型生成器，生成
    docs目录，使用文本编辑器，只是为了写文件，你最喜欢的，你想用哪个就用哪个，你就会做个饭桶。提交并推动将这些文档发布到 Github，然后他们会把它们发布到
    Github页面上，嗯，它们可以在任何可以出版或阅读的地方出版，它们可以发布到你自己的静态网站或你自己的内部网站上。我只是为了这个演示选择了 Github页面。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我的解决办法是，作者将生成文档，然后他们会写文件，所以他们会生成一个基础模板，然后他们会写文件，作者会通过推送这些文件来发表它们，`git` 和 `docs`
    将被发布到一个托管的解决方案中。我选择在这个项目中使用的工具是饼干切割机，生成文档基本上是使用一个蟒蛇模板，呃，原型生成器，生成 `docs` 目录，使用文本编辑器，只是为了写文件，你最喜欢的，你想用哪个就用哪个，你就会做个饭桶。提交并推动将这些文档发布到
    `Github`，然后他们会把它们发布到 `Github` 页面上，嗯，它们可以在任何可以出版或阅读的地方出版，它们可以发布到你自己的静态网站或你自己的内部网站上。我只是为了这个演示选择了
    `Github` 页面。
- en: '![](img/c584fbc67eb8cbb5b989b792a9fe420f_3.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c584fbc67eb8cbb5b989b792a9fe420f_3.png)'
- en: 我们演示的第一步是，我们得把曲奇切割机，要获取已创建的模板化文档框架，所以我们用 github网址运行饼干切割机，它会问我们是否要重新下载，如果你已经用过了，如果你没有，它不会问你这个。但说"是"通常是个不错的主意，只是为了确保你得到最新的版本，现在你可以给你的网站起一个名字，所以我们要把这些文件叫做代码，地点说明，一切都很酷，这将是一个很好的存储库名称，我的名字是网站作者。我的
    github用户名是 zelus，我们要把它设定为 bsd 3许可证，我们要选择制造文档作为引擎，它是目前唯一支持的引擎，我们会把它贴在 Github页面上。现在我们有了它
    我们可以查看我们的目录 看看我们有什么，所以我们拿到了许可文件，我们拿到一份码头工人的文件，有助于特拉维斯内部的建筑过程，嗯，您还可以在本地运行 docker文件。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们演示的第一步是，我们得把曲奇切割机，要获取已创建的模板化文档框架，所以我们用 `github` 网页运行饼干切割机，它会问我们是否要重新下载，如果你已经用过了，如果你没有，它不会问你这个。但说"是"通常是个不错的主意，只是为了确保你得到最新的版本，现在你可以给你的网站起一个名字，所以我们要把这些文件叫做代码，地点说明，一切都很酷，这将是一个很好的存储库名称，我的名字是网站作者。我的
    `github` 用户名是 zelus，我们要把它设定为 `bsd 3` 许可证，我们要选择制造文档作为引擎，它是目前唯一支持的引擎，我们会把它贴在 `Github`
    页面上。现在我们有了它，我们可以查看我们的目录，看看我们有什么，所以我们拿到了许可文件，我们拿到一份码头工人的文件，有助于 `Travis` 内部的建筑过程，嗯，您还可以在本地运行
    `docker` 文件。
- en: 但是你不需要在框架的默认情况下只在本地运行，我们有所有命令的生成文件，读我，我们有实际的文档目录，您将看到有一个 make docs YAML和一个 docs目录。make
    docs YAML是服务器的实际配置，它会给你一些东西 比如网站名，网站说明和作者，所有这些事情，我们用饼干切割机，主题是默认的材料，现在有一个特定的主调色板。然后导航和一大堆可以安装的扩展都在这里，在我们的文档目录里，我们有
    css和 javascript，自定义 css和 javascript目录，以及索引点标记，我们可以看看。它基本上只是有一个非常简单的文档，比如演示标题的代码，所以我们要做的第一件事就是，我们必须创建一个环境并安装我们所有的需求，所以我就跳过视频里的这部分，现在我想要的。
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 但是你不需要在框架的默认情况下只在本地运行，我们有所有命令的生成文件，读我，我们有实际的文档目录，您将看到有一个 `make docs.yaml` 和一个
    `docs` 目录。`make docs.yaml` 是服务器的实际配置，它会给你一些东西，比如网站名，网站说明和作者，所有这些事情，我们用饼干切割机，主题是默认的材料，现在有一个特定的主调色板。然后导航和一大堆可以安装的扩展都在这里，在我们的文档目录里，我们有
    `css` 和 `javascript`，自定义 `css` 和 `javascript` 目录，以及索引点标记，我们可以看看。它基本上只是有一个非常简单的文档，比如演示标题的代码，所以我们要做的第一件事就是，我们必须创建一个环境并安装我们所有的需求，所以我就跳过视频里的这部分，现在我想要的。
- en: 如果我想运行我的 make doc网站，我所要做的就是跑起来，八万八千，对不起，如你所见，我们有我们的文档，比如代码页就在这里，代码和呃，我们文件里的文字，所以如果我们打开，Docs，Docs。然后索引文件，我加上
    mk，医生真的很酷，如果我想加上字幕，或者我们会说，呃，我不知道，欢迎来到 pycon 二十，我运行使，再跑一次，它会活下去，先生，它将再次为我的网站服务，正如你所看到的。它现在更新了，这是你可以运行的东西，然后进行实时更新，所以你可以说，我可以经营一个布，像代码一样激活我的虚拟环境，然后我在这里打了两个，然后我打开文件，然后我们就写，它很酷，我们只是把它保存得很快。它将为我们实时更新，所以我们可以很容易地做到这一点，这就是你现在在本地运行这个的方式，呃，当你准备好，你完蛋了，你想继续这样下去，你就会回到吉瑟布，你只需要创建一个新的存储库。
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我想运行我的 make doc 网站，我所要做的就是跑起来，八万八千，对不起，如你所见，我们有我们的文档，比如代码页就在这里，代码和呃，我们文件里的文字，所以如果我们打开，Docs，Docs。然后索引文件，我加上
    mk，医生真的很酷，如果我想加上字幕，或者我们会说，呃，我不知道，欢迎来到 pycon 二十，我运行使，再跑一次，它会活下去，先生，它将再次为我的网站服务，正如你所看到的。它现在更新了，这是你可以运行的东西，然后进行实时更新，所以你可以说，我可以经营一个布，像代码一样激活我的虚拟环境，然后我在这里打了两个，然后我打开文件，然后我们就写，它很酷，我们只是把它保存得很快。它将为我们实时更新，所以我们可以很容易地做到这一点，这就是你现在在本地运行这个的方式，呃，当你准备好，你完蛋了，你想继续这样下去，你就会回到吉瑟布，你只需要创建一个新的存储库。
- en: 现在我们的网站将在这里更新，所以现在我们有了我们的代码，它有一个建造标签，上面写着建造未知，特拉维斯通常需要一点时间才能发现，这个存储库有一个构建，所以我们就，快进，直到它真正开始工作，哦。它真的很快就起作用了，所以我甚至不用快进，所以它检测到，现在它将建造，呃，我们的医生喜欢代码，我很快就会说，我要去取消第一次建造，第一次构建会失败，因为我们还没有安排好，在我们的旅途中，YAML。我们需要设置一个
    Github令牌，这将允许我们发布备份到 github，所以我们要做的是，我们很快就会来到吉瑟布，我们要生成一个快速标记，转到开发人员设置，个人访问令牌，我们只是要产生一个新的。我们会说，我们就把这些文件叫做代码，我们会点击所有的回收权限，我们将生成令牌，然后我们复制这个标记
    然后来到特拉维斯，我们去设置，我们把github标记作为名字，我们把值贴上去 把它加进去。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的网站将在这里更新，所以现在我们有了我们的代码，它有一个建造标签，上面写着建造未知，特拉维斯通常需要一点时间才能发现，这个存储库有一个构建，所以我们就，快进，直到它真正开始工作，哦。它真的很快就起作用了，所以我甚至不用快进，所以它检测到，现在它将建造，呃，我们的医生喜欢代码，我很快就会说，我要去取消第一次建造，第一次构建会失败，因为我们还没有安排好，在我们的旅途中，YAML。我们需要设置一个
    GitHub 令牌，这将允许我们发布备份到 GitHub，所以我们要做的是，我们很快就会来到吉瑟布，我们要生成一个快速标记，转到开发人员设置，个人访问令牌，我们只是要产生一个新的。我们会说，我们就把这些文件叫做代码，我们会点击所有的回收权限，我们将生成令牌，然后我们复制这个标记然后来到了特拉维斯，我们去设置，我们把
    GitHub 标记作为名字，我们把值贴上去把它加进去。
- en: 所以现在我们在这里有一个吉瑟博代币，我可以回到特拉维斯，我可以重新开始这个构建，现在这个建造将会成功，它将把所有这些直接发布到我们网站上的 github页面上，所以我要继续让它建立起来，然后我要快进。很快的，我们的建造成功了，所以我们回到
    Github仓库，我们在 Github仓库里找到了一个链接，把你直接带到你的医生那里，现在他们正在接待，正如你在我们的，呃，Github页面，最后一次。演示表明
    这是完全自动化的，我可以很快进去更新我的文档 然后说，呃，自动化很酷，然后我更新了一下。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在我们在这里有一个吉瑟博代币，我可以回到特拉维斯，我可以重新开始这个构建，现在这个建造将会成功，它将把所有这些直接发布到我们网站上的 GitHub
    页面上，所以我要继续让它建立起来，然后我要快进。很快的，我们的建造成功了，所以我们回到 GitHub 仓库，我们在 GitHub 仓库里找到了一个链接，把你直接带到你的医生那里，现在他们正在接待，正如你在我们的，呃，GitHub
    页面，最后一次。演示表明这是完全自动化的，我可以很快进去更新我的文档，然后说，呃，自动化很酷，然后我更新了一下。
- en: '![](img/c584fbc67eb8cbb5b989b792a9fe420f_5.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c584fbc67eb8cbb5b989b792a9fe420f_5.png)'
- en: 然后我做了一个冲刺，现在开始了第二次承诺，这将使整个事情再次建立起来，把它发布给 Github，然后就好了，页面会自动更新，现在这个建筑完成了，所以我们到这里来更新它，它就会自动出现，演示到此结束。所以你可能会问，我可以自己试试吗？是的，你可以的，嗯，解锁，Edu是一个开源项目，致力于创建免费和开源的教育资源，例如教科书，课程，工作表，etc，供学校内部使用。目前所有的书都是用
    markdown写的，制作文件，我发现了一个很酷的工具，前几天我在做教科书的评估，也被减记了，但只是一个不同的工具，一个曲奇切割器已经被创造出来 允许你，用一个命令设置整个文档管道。就像你在演示中看到的，你可以在这里访问网站，这是
    github链接，你可以看到如何使用它，我确实喜欢引用我的消息来源，当我使用它们的时候，这次演讲的很多灵感，这项工作的真正灵感来自医生。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我做了一个冲刺，现在开始了第二次承诺，这将使整个事情再次建立起来，把它发布给 GitHub，然后就好了，页面会自动更新，现在这个建筑完成了，所以我们到这里来更新它，它就会自动出现，演示到此结束。所以你可能会问，我可以自己试试吗？是的，你可以的，嗯，解锁，Edu
    是一个开源项目，致力于创建免费和开源的教育资源，例如教科书，课程，工作表，etc，供学校内部使用。目前所有的书都是用 markdown 写的，制作文件，我发现了一个很酷的工具，前几天我在做教科书的评估，也被减记了，但只是一个不同的工具，一个曲奇切割器已经被创造出来允许你，用一个命令设置整个文档管道。就像你在演示中看到的，你可以在这里访问网站，这是
    GitHub 链接，你可以看到如何使用它，我确实喜欢引用我的消息来源，当我使用它们的时候，这次演讲的很多灵感，这项工作的真正灵感来自医生。
- en: 就像密码本和温柔，我希望我说的是你的名字，对，我非常喜欢这本书，这是一本很棒的书，你可以在亚马逊上买到，Kindle，或者平装本，我强烈推荐，如果你想更深入地了解我今天所说的事情，所以最后的一些想法。我执行的每一个工作流程，就像你在奖状上看到的，从我的朋友那里，贾里德对他们来说更容易上船，但他们的顾客也更快乐，他们得到的支持票更少，因为文档更好，因为他们在文档中有更多的信息。他们不必花那么多时间支持他们，像往常一样
    松弛通道，嗯，别再做医生了，你知道吗，我感觉就像，博士冲刺会是什么，是，你知道这是对它的一种惩罚，你知道在最后，你知道如果你只是在做一个医生冲刺，因为你想说。把你的码头清理干净，让它们变得更好，和东西嘿，去争取吧，太好了，我喜欢，但就像总是把它推迟，最后，就像代码代码代码，代码代码代码文档冲刺，就好像没事，你已经有了你的，你知道你吃了所有的好东西，现在。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 就像密码本和温柔，我希望我说的是你的名字，对，我非常喜欢这本书，这是一本很棒的书，你可以在亚马逊上买到，Kindle，或者平装本，我强烈推荐，如果你想更深入地了解我今天所说的事情，所以最后的一些想法。我执行的每一个工作流程，就像你在奖状上看到的，从我的朋友那里，贾里德对他们来说更容易上船，但他们的顾客也更快乐，他们得到的支持票更少，因为文档更好，因为他们在文档中有更多的信息。他们不必花那么多时间支持他们，像往常一样松弛通道，嗯，别再做医生了，你知道吗，我感觉就像，博士冲刺会是什么，是，你知道这是对它的一种惩罚，你知道在最后，你知道如果你只是在做一个医生冲刺，因为你想说。把你的码头清理干净，让它们变得更好，和东西嘿，去争取吧，太好了，我喜欢，但就像总是把它推迟，最后，就像代码代码代码，代码代码代码文档冲刺，就好像没事，你已经有了你的，你知道你吃了所有的好东西，现在。
- en: 该吃蔬菜了，这只会让人觉得不好玩，让医生变得有趣，把它作为过程的一部分，不要再让他们成为惩罚，嗯，如果你的医生很烂，人们会放弃你的计划，简单明了，呃，毫无疑问，如今，我们生活在一个工程的世界里。我们只是基本上我会测试一些东西，如果它不能立即起作用，我不干了，然后我继续前进，我继续下一件事，所以如果他们不是好医生，人们会继续下一件事，如果你想让人们用你的项目，并不总是，技术更好的项目。在软件工程的历史上
    我们已经看到，嗯，版本化文档很棒，我们应该做更多的事情，所有文档都应该是版本化的，所以你可以访问它们，所以这样你，可以知道我可以访问旧版本，我知道我对 api的期望是什么。它就会起作用，它们非常重要，请，请，请将您的文档，这些幻灯片可以在我的网站上找到，马森内格点
    com 斜杠谈话，CI文档，呃，所以你尽管去吧，如果你想，但是等等，还有更多，在我演讲开始的时候。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 该吃蔬菜了，这只会让人觉得不好玩，让医生变得有趣，把它作为过程的一部分，不要再让他们成为惩罚，嗯，如果你的医生很烂，人们会放弃你的计划，简单明了，呃，毫无疑问，如今，我们生活在一个工程的世界里。我们只是基本上我会测试一些东西，如果它不能立即起作用，我不干了，然后我继续前进，我继续下一件事，所以如果他们不是好医生，人们会继续下一件事，如果你想让人们用你的项目，并不总是，技术更好的项目。在软件工程的历史上我们已经看到，嗯，版本化文档很棒，我们应该做更多的事情，所有文档都应该是版本化的，所以你可以访问它们，所以这样你，可以知道我可以访问旧版本，我知道我对
    API 的期望是什么。它就会起作用，它们非常重要，请，请，请将您的文档，这些幻灯片可以在我的网站上找到，马森内格点 com 斜杠谈话，CI 文档，呃，所以你尽管去吧，如果你想，但是等等，还有更多，在我演讲开始的时候。
- en: 你可能见过这个可爱的小蟒蛇 萨米贴纸，嗯，当我们计划今年来派森的时候，我打印了很多这样的贴纸，准备好了，蟒蛇二十二十 在底部，所以我不可能在其他会议上使用它们，现在我的公寓里有两千个这样的人。所以如果你想要一条蟒蛇
    20山姆贴纸，请在 DOCO Pycon 20楼填写此表格，是谷歌的表格，如果你告诉我你的名字和通讯地址，我们会给你寄一张蟒蛇山姆20英镑的贴纸，这是限量版贴纸。你可能再也见不到这个贴纸了，我喜欢收集萨米贴纸，嗯，所以我很高兴我能得到一些，但肯定，如果你想要一个，就放吧，呃，填写你的信息，让我们知道，我想感谢大家，看了这次谈话，希望你喜欢，呃。这是我的一个非常有趣的谈话，我做过这个演讲，很多时候，我想谢谢你，所有和蟒蛇有关的人，因为他们在这个前所未有的时代所做的惊人的工作，为了确保我们能。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能见过这个可爱的小蟒蛇萨米贴纸，嗯，当我们计划今年来派森的时候，我打印了很多这样的贴纸，准备好了，蟒蛇二十二十在底部，所以我不可能在其他会议上使用它们，现在我的公寓里有两千个这样的人。所以如果你想要一条蟒蛇20山姆贴纸，请在
    DOCO Pycon 20 楼填写此表格，是谷歌的表格，如果你告诉我你的名字和通讯地址，我们会给你寄一张蟒蛇山姆20英镑的贴纸，这是限量版贴纸。你可能再也见不到这个贴纸了，我喜欢收集萨米贴纸，嗯，所以我很高兴我能得到一些，但肯定，如果你想要一个，就放吧，呃，填写你的信息，让我们知道，我想感谢大家，看了这次谈话，希望你喜欢，呃。这是我的一个非常有趣的谈话，我做过这个演讲，很多时候，我想谢谢你，所有和蟒蛇有关的人，因为他们在这个前所未有的时代所做的惊人的工作，为了确保我们能。
- en: 我们这些花时间制作这些演示文稿的人 仍然可以把它们带给你，我们这些想看这些演示的人 仍然可以看到它们，因为，就像一个被卡在摊位上的赞助商一样，我看到了谈话，我就像，哦，我得去看那个演讲。所以现在我可以看到他们，我真的很享受。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们这些花时间制作这些演示文稿的人仍然可以把它们带给你，我们这些想看这些演示的人仍然可以看到它们，因为，就像一个被卡在摊位上的赞助商一样，我看到了谈话，我就像，哦，我得去看那个演讲。所以现在我可以看到他们，我真的很享受。
- en: '![](img/c584fbc67eb8cbb5b989b792a9fe420f_7.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c584fbc67eb8cbb5b989b792a9fe420f_7.png)'
