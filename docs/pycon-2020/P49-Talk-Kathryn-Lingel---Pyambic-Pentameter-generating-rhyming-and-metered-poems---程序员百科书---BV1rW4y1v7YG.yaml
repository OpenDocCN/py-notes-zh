- en: P49：Talk Kathryn Lingel - Pyambic Pentameter generating rhyming and metered
    poems - 程序员百科书 - BV1rW4y1v7YG
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/2ea409aad3246abc5e8fb58ec0a95ee8_0.png)'
  prefs: []
  type: TYPE_IMG
- en: 你好，从西雅图来的，Pycon，我好想你，但我也很兴奋能来这里，我在和你谈钢琴五步舞，或者如何用马可夫链和 NLTK生成押韵和韵律诗，我保证我们会解开那个标题，但实际上它的意思是我们要做诗歌。电脑1个零1，所以我们要教计算机，如何写诗，什么样的诗，也许你可以问，或者什么是诗，让我们先来谈谈人类一对一的诗歌，所以诗歌概括了很多东西，但主要是用文字来创造艺术，不仅仅是用文字的意义来唤起美和情感。它是关于使用这些词的属性，它是关于使用这些词的声音和感觉，或者甚至看看页面，我们将通过一些很简单的例子诗，试图弄清楚计算机可能能够处理哪些属性，这里有一个，有一个孩子戴着兜帽，他很喜欢，很好，上面贴着。这是我写的第一首诗，对我父母大喊大叫，因为他们保留了这个，嗯，是什么让这首诗，好吧，有节奏，有一个孩子戴着兜帽，它押韵胡德，好，开了个好头，我们再看点别的，我们都喜欢游戏中的鹅，他最近摇摇晃晃地成名了。
  prefs: []
  type: TYPE_NORMAL
- en: 一种没有悔恨的虚无主义力量，一只没有怜悯和羞耻的鸟，向无名鹅游戏大喊，所以这是一种常见的诗歌形式，是一首打油诗，打油诗的特点是开头有两行押韵的诗，更长的，两条短线互相押韵，然后一行把它包起来。和第一行押韵，它有节奏，我们都喜欢游戏中的鹅，有点滑稽，这种形式的诗歌通常用于幽默诗歌，有点像这个，这是你可能认识到的另一种传统形式的诗歌，我能把你比作夏日吗，你更可爱，更温和，狂风确实会摇晃。五月可爱的嫩芽，夏天的租期太短，这是莎士比亚的154首十四行诗中的一首，作为合集出版，每首十四行诗的非凡之处在于它们都有相同的格式，都是十四行，在四行的诗节中，每一行都互相押韵，直到你进入最后两个。做了一对押韵的对联，每行每首诗都有相同的音节，不仅如此，每首诗的每一行都有相同的音节，它们都有十个音节长，它们都是由我组成的，这意味着音节模式不重读，无压力，我能把你比作夏日吗，所以所有这些。
  prefs: []
  type: TYPE_NORMAL
- en: 所有这些都有一个共同点 就是押韵，所有这些诗都有多行，以相同的声音和一个节拍结尾，有重音和非重音的音节模式，在这首诗中 这是一致的，或者至少在诗中的某些诗句中，这是个好兆头
    因为计算机真的很擅长模式。我们将能够用它来教授计算机，创作诗歌，在我们到达那里之前，我们需要教电脑造词，所以有很多方法可以用计算机生成随机文本，你可以做任何事情，从字典里随机挑出单词，把它们串在一起。并希望你能得到一些明智的东西，使用人工智能或神经网络或机器学习技术来阅读数千页由人类编写的文本，并根据人工智能识别的特征生成看起来像它的文本，我们要平分差额。我们将采用金发小熊的方法
    使用一种非常容易理解的技术，但同时也提供了一些真正好的输出，这种技术被称为马尔可夫链生成，所以马尔可夫链的基础是词序很重要，至少不是英语，猫坐在墙上是一个有意义的句子。
  prefs: []
  type: TYPE_NORMAL
- en: 但是猫身上的坐壁可能并不意味着同样的事情，它甚至可能没有任何意义，尽管歌词都一样，只是他们的顺序不同，因此，markov链文本生成背后的思想是使用源文本来确定有效的词序。然后你利用这一点来选择单词的特定顺序，这可能是有意义的，所以我选择了一个源文本，以纪念新引入的海象操作员，这是合唱，我是海象，谢谢，约翰列侬，我是送鸡蛋的，他们是卖鸡蛋的，我是海象，咕咕，好工作。我们要用这个来生成文本，我们要做的第一件事就是随机选择一个单词，我选了
    i 然后我们看看文本中出现的每个词，在本例中，它在源文本中出现两次。每次后面都跟着"am"这个词所以当我们选择"i"之后会出现什么词，这将是一个之后，我们再次回顾源文件，每次我们看到"我"这个词，后面是这样的
    词，或者下一个词是，现在我们来看一下它在源文件中的位置。
  prefs: []
  type: TYPE_NORMAL
- en: 我们看到它发生了三次两次，后面是鸡蛋这个词，一旦后面跟着"海象"这个词，我们要在鸡蛋和海象之间做出选择，下一个词有三分之二的概率是鸡蛋，三分之一的概率
    下一个词是海象，从统计上看，我们得到的是鸡蛋。当我们看鸡蛋的时候，我们有50%的机会选择一个或多个人，在这种情况下，我们选择了男人，所以这是我们的新判决，我是我们根据原始文本随机生成的鸡蛋人，注意任何相邻的一对词，还有卖鸡蛋的，我是。它们都在原文里，但是输出句子在那里找不到，我是鸡蛋
    没有发生全新的文字，所以我们做的是抽象的，我们用蟒蛇做吧，我们将从建立一个模型开始，如果你是个初学者，不要被这件事拖后腿，这是一个非常抽象的概念。但这意味着我们要浏览我们的文本，并以这样一种方式组织我们在那里找到的信息，我们以后可以利用这些信息，以一种让它变得容易的方式，所以我们要做的是，我们要检查原始文本中的每个单词
    并记录下它后面的单词。
  prefs: []
  type: TYPE_NORMAL
- en: 所以当我们随机挑选单词的时候，我们将能够很容易地获得接下来会发生什么，我们要做的第一件事就是把源文本，只是一长串的单词，我们用空格把它分割成文字，谢谢你蟒蛇让这个超级简单。我们将把模型初始化为一个空字典，然后对于源文本中的每个单词，除了最后一句话，如果这个词还没有出现在我们的模型中
    我们要编辑，我们要初始化一个空数组的值，然后我们来看一下列表中这个单词后面的单词。所以我们不能用最后一个词，因为我们不知道接下来会发生什么，我们不想在名单的最后，我们将把这个词添加到列表中的模型中，那我们就把它还回去，所以当我们在我们的合唱中播放时，这是什么样子的，我是海象。这里的信息应该很熟悉，当你看到单词
    i，后面跟着一个词，当你看到这个词的时候，后面是鸡蛋这个词，鸡蛋这个词，"海象"这个词，我们不统一这些的原因是，如果我们只是把我们看到的每个词都加起来。
  prefs: []
  type: TYPE_NORMAL
- en: 当我们随机选择一个词出现在，我们将免费得到，卵的出现频率是海象的两倍，在这个词之后，这很方便，所以下一步是使用它来生成文本，我们将从一个源文本开始，以及我们需要生成的单词数量和剧透，我们将使用随机模块。我们要做的第一件事就是建立上一张幻灯片中的模型，然后我们在模型中随机选择一个词，或是字典里的某个键，使用它来初始化我们要生成的字数的输出列表，我们要看看我们生成的最后一个单词。这就是为什么我们在输出中从种子词开始，我们将从与模型中最后一个单词相关的单词列表中随机选择，下一个词，把它加到我们的产出里，然后继续检查
    直到我们发现模型中没有的东西，这意味着我们已经说了最后一句话。我们不知道之后会发生什么，所以在这种情况下 我们会提前休息，或者直到我们退出循环，我们已经生成了我们想要生成的单词数量，然后我们返回我们的输出
    作为一个字符串连接。
  prefs: []
  type: TYPE_NORMAL
- en: 所以当我们在我们的合唱文本上运行这个时，有一件事我们可能会得到鸡蛋工，我是送鸡蛋的，他们是海象，咕咕咕咕，这看起来应该很熟悉，因为它真的很接近原始文本，它的概念和鸡蛋一样，鸡蛋海象。但它有一些独特的措辞，他们是，海象不是，是新的，太棒了，所以这不是你唯一能得到的，因为我们用的是随机，因为我们用的是随机选择，所以你可能会让男人，我是海象，或者我个人最喜欢的咕咕咕咕咕咕，所以这太棒了。对我可以写一些全新的东西，使用我最喜欢的歌曲或播放或文档或推特上的文字，如果我用一本书，我可以从中得到一些同人小说，如果你能把两个不同的来源结合起来，然后你就可以得到一些真正有趣的结果。我很想看看你能想出什么，这就是我拿这个的地方，我求助于我最喜欢的自然语言工具，Python的自然语言工具包或
    NLTK，所以这个包含了，这个库包含了一大堆非常强大的工具，它可能有相关单词的尸体。
  prefs: []
  type: TYPE_NORMAL
- en: 比如地名，它有一些工具可以帮助你画出句子的图表，并确定说话的哪一部分，句子中的每个字都是，它有工具来记录一个句子，并帮助你分析，充满了幸福的话语，或是愤怒的话语，或悲伤的话语，所谓的情绪分析。但我在这里寻找的是卡内基梅隆发音词典
    或在 cmu dic的 NLTK语料库，这是一本字典，就像这个词的字面意思一样，它是一个由英语中的许多单词组成的列表，包括一些地名，品牌名称。在正规词典中可能找不到的人名，这是一本蟒蛇意义上的字典，所以这看起来像什么，一旦我们导入并加载字典，然后我们要查一个词，我选择了英语中最精彩的词之一，Python，这就是它将给我们的。它会给出这个词的发音列表，其中发音是单词中发音的列表，所以当我们进入蟒蛇时，它会给我们声音，声音p的表示，后面跟着i
    the on，这是对蟒蛇这个词发音的标准化分解，所以它是一个列表的原因是因为可能有。
  prefs: []
  type: TYPE_NORMAL
- en: 有多种发音的单词，就像这个，如果你用这个作为动词，因为我要把你们俩分开，你要用不同的发音，如果你用它作为形容词，这两件事是分开的，所以我们的发音词典处理这个问题的方法是，它给了我们所有不同的发音。所以在这种情况下，这个词的有效发音是分开的，所以这些发音中的大部分信息是声音，A，P，etc，但你也会注意到有些声音旁边有数字，字典就是这样指定音节的，"一"的意思是重读音节，零表示不重读的音节。"二"的意思是一个音节的第二重音，这意味着你可以强调它，或者不强调它，看你喜不喜欢，他们两个听起来都不错，所以这里的第一个条目，你可以说是分开的，或者你可以说是分开的，两者都没问题，但如果你想说分开。听起来会不一样，这是，有趣的是，并不是每一种语言都有强调音节和每个单词强调音节的概念，就像在法语里，一句话就是一句话，强调什么取决于句子中的位置，但在英语中，音节重音是发音的一部分。
  prefs: []
  type: TYPE_NORMAL
- en: 所以现在我们有了所有我们需要的工具 因为我们知道如何生成单词，我们知道如何用电脑发这些单词的音，所以回到诗歌，所以之前我们想用电脑复制的部分是押韵和节拍，我们将分别解决它们，让我们从押韵开始。所以我不会撒谎，这感觉就像一个完全的黑客，其中一个面试问题真的很可怕，要么你马上看到诀窍，否则你永远不会到达那里，所以当你用马尔科夫生成单词时，很难控制你会在哪里结束，所以如果你想结束。如果你想产生两条独立的路径，并以相互押韵的单词结束，总有一天你会走运的，然而，很容易控制你从哪里开始，还记得我们随机选第一个词的时候吗，如果我们不是随机挑选的呢，如果我们选两个押韵的词，然后倒退。所以我们要列出源文中所有押韵的单词，从其中一个开始，向后生成，这涉及到修改我们早期的文本生成算法，与其建立一个模型，通过文本向前看，我们要倒着读课文，无论哪种方式，计算机都可以很容易地做到这一点。
  prefs: []
  type: TYPE_NORMAL
- en: 即使我们很难解释，所以，为了方便我们自己，我们要创建一个新的数据结构，我们要仔细检查源文件中的每个字，所有独特的都会查看它们的发音，最后把那个发音剪掉，强调音节。因为这就是我们说英语的人如何决定某事是否押韵，然后我们会选择两个我们知道有相同声音的单词，然后从那里反向生成，下面是这个数据结构的样子，所以我把歌里所有不同的词都写了出来，我是海象。我在字典里查了一下它们的发音，最后我把发音切掉了，重音音节，由读音字典中的一个指定的，找到韵律的声音，然后我把它们都收集在那个押韵的声音里，我扔掉了所有没有至少两个押韵词的，这是，我最终得到了什么。例如，这第一行是由声音
    o分组的，在这里我们有种植排，所以当我想创造一个押韵的对联时，我随机选择一个声音，在这种情况下，我选择了声音，我把它的价值，我随便选了两个词，天空和天空 我用它们作为种子。
  prefs: []
  type: TYPE_NORMAL
- en: 利用我的反向马尔可夫模型，再反转输出，所以我们得到的，例如玉米片，等待天空和鸡蛋，你已经是一个圣，所以这很好，绝对押韵，但听起来不像诗，但它并没有真正从舌头上滚下来，即使这些词的数量相同。它们有不同数量的音节，这就是计价器进来的地方，所以用电表发电有点复杂，但我们要做的是，我们要从我们想要的计价器开始，当我们生成文本时，我们将根据仪表检查每个单词，看看我们目前生成的信息是否符合。我们要找的东西，如果我们选的词不合适，我们会把它扔掉，尝试不同的选择，如果没有选择，如果我们走到死胡同，如果没有一个选项符合计价器，那我们就得往回走，我们必须放弃导致我们到达那里的词。看看我们是否能在其他地方找到不同的分支，所以这个技术叫做回溯，它是这样工作的，我们要从我们想要的计价器开始，我在这里选了抑扬格五音步，这是一组十个音节，其他音节都被强调，从一个不重读的音节开始。
  prefs: []
  type: TYPE_NORMAL
- en: 我选择用一串1和0来表示，其中一个零是一个没有大小的音节，一个是重音音节，就像在发音字典里一样，所以我们会在生成文本的同时跟踪我们发现的东西，就像香草马可夫一代，我们先选一个词，任何一个字。在这种情况下，我选择了小，那么，当我们在发音词典中查找很少时会发生什么呢？是这样吗？给了我们这样一组声音，呃，哦，但重要的是，现在它给了我们重点，那是很小的，不是小嗯
    第一个音节是重音。所以我们可以把不大音节中的重音作为发音，对照我们要找的发音，我们要找的音节重音，但我们注意到它与，这意味着在一套抑扬格五步音中，"小"不能成为我们的第一个词，所以我们要试试别的，当然可以没有压力。让我们看看接下来会发生什么，我哭到现在，所以好的哭泣是一个强调的音节，后面跟着一个不重读的音节，因为我们的句子是从一个没有重读的音节开始的，我们在做，我们找到了目前的模式，我们继续走，我哭了。
  prefs: []
  type: TYPE_NORMAL
- en: 黄质奶油冻，我们快到了，看，不幸的是，我们只剩下一个音节了，如果你知道这首歌，我是海象，你可能知道黄质蛋奶冻，这句话在整首歌中只出现一次，尤其是奶油冻在整首歌中只出现一次，这意味着只有一个词。下一个可以来，这个词滴水，所以我们找到了11个音节，但这不符合我们的目标，我们要10分钟，所以我们不能用
    dri这个词，但这意味着在奶油冻之后没有其他选择，我们也不能用奶油冻，对物质和黄色都是如此。所以现在我们几乎回到了起点，但我们还是要开始，让我们看看在哭泣这个词之后
    我们还有什么选择，这里有一个坐着，我坐着哭，我哭了，坐在天空中，到目前为止一切都好，我们十有八九，到目前为止，我们都匹配。接下来是 c，发音词典对某人音节词的发音也很慷慨，普通的，比如"或者"或者"我"，但如果它是一个有意义的词，那么发音字典会告诉我们不，这个音节需要强调，这意味着我们不能同时使用天空和海洋。
  prefs: []
  type: TYPE_NORMAL
- en: 当我们寻找抑扬格五音步，所以我们得备份，结果发现天空之后什么都没有，c除外，所以我们也要删掉那个词，但现在我们还有选择，我哭了，坐在海象黏液里，现在我们讨论了如何生成押韵的线条。我们已经讨论过如何生成有电表的线，所以我们要把它们放在一起
    我们要把它们和蟒蛇放在一起，所以为了创作一首简单的诗，我们需要的输入是源文本，只是一根长长的绳子，我们要找的表，在这种情况下，抑扬格五音步。零一，单位乘以五，我们要生成的韵脚的行数，在这种情况下，我只是挑了两个或一对，两行押韵的诗，所以我们首先要做的是，我们将使用源文本构建向后马尔可夫模型，这是一个在其他单词之前的单词列表。然后我们要建立一个相互押韵的列表，我们在这里用
    k输入，这样我们就可以把每一个至少没有 k韵的词都扔掉，所以如果我们要找三行相互押韵的诗，就像我们可能，如果我们要创作一首打油诗，我们需要知道。
  prefs: []
  type: TYPE_NORMAL
- en: 我们找到的任何押韵词都至少有两种选择，在我们所有的押韵选项中，我们将选择其中一种声音，我们发现至少有这么多的押韵，在所有的文字中，彼此押韵，我们将选择其中的
    k种作为我们的种子，每一粒种子。我们将在仪表后面生成一条线，并将其附加到我们的输出中，把我们所有的输出串在一起，所以我不会向你们展示这个程序的输出，因为我保证没那么有趣，当你把它放在歌词上，我是海象。没有足够的词来创造抑扬格
    五步押韵，这首歌里没有的东西，所以让我们来看看当你给它披头士的力量时 会发生什么，歌词，我的现场演示，好吧，做直播。所以我把这个代码包装在一个烧瓶应用程序中
    并部署到我的个人网站上，我要告诉它 我想要一首披头士风格的十四行诗，意味着在引擎盖后面，它使用了每一句歌词，披头士乐队曾经写过，全部放在一起，走吧。
  prefs: []
  type: TYPE_NORMAL
- en: 它给了我们什么，相信我会让她戴上一个木杯，洛基说这得到了，惹恼了它，蜂蜜尝了很多，滚了一个银行家，从未享受过，是幻觉，从没听过这本书，有眼睛的家，公园的作者能做的，虽然我错了，地点把它还给了我。能感觉到百灵鸟，Samoline，沙丁鱼爬上他的手，多年来，每个人都可以学会坚持自己的观点，它远远落后于乐队，第一个，我什么都不是，把飞机变成银行家，从来没有显示每个人，大家都知道，谢谢，感谢收看。感谢您的远程观看，我好想你，蟒蛇，请在推特上和我谈谈，这是我对短信的处理，世代或语言学，或者诗歌
    或者任何你想要的东西，此代码全部部署在本网站，我所有的源代码和幻灯片都在这个 github repo上。我希望你们都能保持安全和创造性。
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2ea409aad3246abc5e8fb58ec0a95ee8_2.png)'
  prefs: []
  type: TYPE_IMG
