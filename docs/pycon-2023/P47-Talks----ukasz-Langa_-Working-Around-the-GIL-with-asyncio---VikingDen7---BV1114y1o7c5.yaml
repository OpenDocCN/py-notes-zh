- en: P47：Talks - Łukasz Langa_ Working Around the GIL with asyncio - VikingDen7 -
    BV1114y1o7c5
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P47：演讲 - Łukasz Langa_ 使用 asyncio 绕过 GIL - VikingDen7 - BV1114y1o7c5
- en: All right。
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_1.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_1.png)'
- en: Thanks for coming。 Here we are here for the strike-on-clock。 This is not a，
    I'm sorry。 to present a lesson of training and a schedule， but you're also not
    allowed to leave now to be there in the fair talk-on-the-fall。 And just a little
    bit of the， in the recent， uh， coming-on。
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你的到来。我们在这里是为了打击时间。这不是一个，我很抱歉。去介绍培训和时间表的课程，但你现在也不允许离开，以便在公平的秋季讨论中在那里。而且最近有一点，呃，临近。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_3.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_3.png)'
- en: Before we begin， I've seen a lot of， uh， and again， to the team。 And in legislation。
    I've learned that people from the union are too sad。
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，我看到很多，呃，还有，再次，对团队的。并且在立法方面。我了解到工会的人太伤心了。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_5.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_5.png)'
- en: And then we can plan on this in person， the vote on those events。 I'm， uh， recently。
    I've been in the fight-fall and the new rule。 And now I've been talking about
    those today。 And we've got about three or 11 in the recent future。 Uh， I've been
    to all， I've been on， uh。 really， to be able to work on tight-fronts for time。
    Very great thinking about us， because it's。
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以亲自计划这些，投票这些事件。我，呃，最近。我一直在战斗秋季和新规则。现在我今天在谈论这些。我们最近有大约三或11个。呃，我去过所有地方，我在，呃。真的，能够在紧迫前线工作。非常好地思考我们，因为这是。
- en: you know， the available， for me to do is for another year， so thanks to them。
    Uh。 but now I'm not going to be talking about how these things were going to be
    talking about problems。 So what is the problem？ Everybody says， "I've got this
    problem。"， And by then it's， uh。 in different ways， we're only new here in the
    fight-fall。 And it's going to be really， really。
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道，能让我做的事情是为了另一年，所以感谢他们。呃。但现在我不打算谈论这些事情，而是要讨论问题。那么，问题是什么？每个人都说，“我有这个问题。”，到那时，呃。以不同的方式，我们在战斗秋季只是新来的。而且这将会是非常，非常。
- en: really， really， really， really， um， you know， how you observe。 but it's not
    as efficient as you would like。 We're not going to be talking today about this
    fight-time。 we're not going to be talking about the fear of punishing， and number-function
    power， like， uh。 instead of what we're going to be talking about， it's just， "Can't
    data engage your skin？"。
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 真的，真的，真的，真的，嗯，你知道，你如何观察。但这并没有你想要的那么高效。我们今天不会谈论这个战斗时间。我们不会谈论惩罚的恐惧，以及数字功能的力量，比如，呃。我们要谈论的不是，而是，“数据不能与你的肌肤互动吗？”。
- en: But end up with a terrible data perspective。 So， you know， I think I use many
    words。 And currently。 when I use words parallel， these stories seem to stain，
    but they're not， uh， you know。 I think I use the ability for us to do us in many
    things， at the same time。 even if we were only able to do one thing at a time。
    And currently， then。
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 但最后却以糟糕的数据视角结束。所以，你知道，我认为我用很多词。而目前。当我使用并行的词时，这些故事似乎污点，但它们不是，呃，你知道。我认为我利用我们在许多事情上同时做的能力。即使我们只能一次做一件事。并且目前，然后。
- en: it's actually doing anything for one。 The good analogy for this is that， in
    a one-bar tender。 and think they're one-bar tender at a time， but they can still
    look after several questions， right？
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上这并没有做任何事情。一个好的类比是，在一个单吧台的情况下。并认为他们一次只是一位吧台，但他们仍然可以处理多个问题，对吧？
- en: I think we want them to be able to prepare multiple versions at a time， now，
    in many of them， right？
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为我们希望他们能够同时准备多个版本，现在，在其中许多，对吧？
- en: So， from currency， you may be able to build multiple controls， and， uh， and
    then， uh， and then， uh。 and then， uh， and then， uh， and then， uh， and then， uh，
    and then， uh。 you may be able to prepare them at the present particular time。
    But today。 we're talking about both those rules， so， uh， in particular。
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，从货币来看，你可能能够建立多个控制，然后，呃，然后，呃，然后，呃，然后，呃，然后，呃，然后，呃，然后，呃。你可能能够在当前的特定时间准备它们。但今天，我们讨论的是这两条规则，所以，呃，特别是。
- en: some of the archetypes of data perspective， and that you're going to see that，
    uh。 are efficient to get， as you think， with the problem that we're going to be
    talking about today。 or data-sink， or data-sink， or either， you know， or， you
    know。 data that you're accepting from somebody， or the key， or， you know， just
    a request based。
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一些数据视角的原型，你会看到，呃。它们高效地获取，正如你所想的，与我们今天要讨论的问题。或数据接收，或数据接收，或者，或者你知道。你从某人那里接收的数据，或者关键，或者，你知道，仅仅是基于请求。
- en: where you're mostly just injecting them through a database。 or further analysis
    later on that is not part of your system， on its own， all right？ So。 if you're
    pulling something on their own， or you're doing good data， then you have the red，
    right？
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在那里，你主要是通过数据库将它们注入。或者后续分析，后面并不属于你的系统，好的？所以。如果你单独提取某些东西，或者你处理良好的数据，那么你就有红色，对吧？
- en: And so， the request responds。 Obviously， there's more than， in particular。 just
    by everybody's sense of its existence。 Well， the request， the response。 is shared
    with the total payment， the ability for， to serve in multiple times at the same
    time。 and give them responses in a sensible time to each of them。 And then， you
    have lots of use。
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，请求响应。显然，还有更多，特别是。仅仅通过每个人对其存在的感知。好吧，请求，响应。与总付款共享，能够同时服务多次，并在合理的时间内为每个请求提供响应。然后，你有很多用处。
- en: you know， back in my day， to， you know， like， all the way， uh， but now， it's
    still super useful。 Like， it lets us deal with data that are too big， uh， to be
    handled by a single thread。 single problem， or even a single machine。 So， what
    you do is， uh。 you essentially place the process data， and then combine them with
    all， right？ So。
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道，回到我那个年代，嗯，像是，全程，呃，但现在，它仍然超级有用。就像，它让我们处理过于庞大的数据，呃，无法由单个线程处理。单个问题，甚至单个机器。所以，你要做的就是，呃。你基本上是放置处理数据，然后将它们全部组合在一起，对吧？所以。
- en: that is essentially the most， um， the interest form of both three， because it
    doesn't have any， um。 well， this fact is worth， you can focus on， essentially。
    making sure that we can utilize our hardware to its full potential。 So， you know，
    uh。 let's talk about this kind of process， and it's all typed on， kind of the
    new ways that are not low。
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上是最有趣的形式，基本上是三者的结合，因为它没有任何。嗯，这个事实是值得的，你可以专注于，基本上。确保我们能够充分利用我们的硬件。所以，你知道，呃。让我们谈谈这种过程，所有的东西都是以一种新的方式输入的，这些方式并不是低效的。
- en: and that's the threading。
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是线程处理。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_7.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_7.png)'
- en: It's not going to give you any one of them。 Now， this is， uh。 slides from an
    internal presentation I did at Facebook， um， seven years， but a year ago now，
    uh。 we have， uh， we had seven， you know， three days， where there were two threads，
    that we were， uh。 working with， and one of them， now， would we expect to be a
    cooking release， or an illness。
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 它不会给你任何一个。现在，这是我在 Facebook 内部做的演示文稿中的幻灯片，嗯，七年前，但现在是一年前，呃。我们有，呃，三天的时间，其中有两个线程，我们正在，呃。处理其中一个，现在，我们期待它是一个烹饪版本，或者一个疾病。
- en: or a family， but， it's how we draw things， uh， there was a periodic， um， thing
    that， uh。 a green thread was supposed to go， but for whatever reason。 it was doing
    it in a season really rarely， and we were really confused by it because it wasn't
    that。 the task was taking longer。 Now， it was called the same thing， only。
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 或者一个家庭，但，这就是我们绘制事物的方式，呃。有一个周期性的，嗯，事情，呃。一个绿色线程应该去的地方，但不管出于什么原因。它在一个季节里真的很少这样做，我们对此感到非常困惑，因为并不是任务花费的时间更长。现在，它叫的名字是一样的，只是。
- en: but it took an even amount of time for us to wait until it actually happened。
    as we really first saw it。 Uh， and it was a little confusing， also， to find out
    what is happening。 and believe you know， because if you didn't believe it， nothing
    was really showing up real。 as you saw， nothing was really， um， obvious where，
    since people found that in real。
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们等到它真正发生花费的时间是相等的。因为我们真的第一次看到它。呃，这也有点让人困惑，去弄清楚发生了什么。相信你知道，因为如果你不相信，那些东西就真的不再真实。正如你所看到的，什么都不明显，因为人们在现实中发现了这一点。
- en: because if you didn't believe it， or you could only avoid our fields， then you
    know。 in this long story story， you already found out that， yeah， there was a
    third one。 or the third library， a priority used for， uh， performance metrics，
    where somebody made a statement。 where they were， like， now in some sense， so
    much data with an effort。
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 因为如果你不相信，或者你只能避免我们的领域，那么你知道。在这个漫长的故事中，你已经发现，嗯，还有第三个。或者第三个库，优先用于，呃，性能指标，某人做了一个声明。他们就像，现在在某种意义上，数据太多，努力不够。
- en: or any more just for performance metrics， so we're just gonna avoid things in
    the process。 And because of a flight， we're gonna spend in the house。 I think
    it was just a swimming data。 and we never throw in it already， which meant that
    the third thread was in fact。 facing a long way and a long way to complete。 And
    why would that even matter for us？
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 或者只是为了性能指标，我们将避免在过程中的事情。因为一次飞行，我们将花费在房子里。我认为这只是游泳数据。我们从未将其扔掉，这意味着第三个线程实际上在面对很长的路和完成的长路。那对我们而言有什么重要呢？
- en: Why would that matter for the blue and the green thread？ Well。 because the blue
    wouldn't take a long way。 So I think we have advice on， uh。 that we had from the
    day that， I cannot explain it， and we think about it。 there are obvious themes
    in the story we can improve on it， but it's what we have today， right？
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么这对蓝色和绿色线程很重要？因为蓝色不会走远路。所以我认为我们有建议，呃。我们从那一天获得的，我无法解释，我们在考虑这个故事时。我们可以在其中改进的显而易见的主题，但这就是我们今天拥有的，对吧？
- en: Even if your computer has multiple processors， or has multiple cores on a single
    processor。 outside of a few clicks that we can do， only one thread of five-tonal，
    as it means。 are within more than any time。 And obviously that seems like a program
    that could be solved。 so there are multiple attempts to address this。 The first，
    the previous one that was successful。
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你的计算机有多个处理器，或者单个处理器上有多个核心。在我们能够做的几次点击之外，只有一个五音调的线程，这意味着……在任何时间内都超过了。这显然看起来像是一个可以解决的问题，因此有多次尝试来解决这个问题。第一个，就是之前成功的那个。
- en: I developed them， and then it's the team， where a lot of these things were removed
    together。 and I think they're continuing to work。 However， it wasn't really that
    fast anymore。 because ironically， having won a rock， or the entire interpretive
    to protect its data structures。 where it would be efficient， but if the removal
    of one rock， and then it could be with the new rock。
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我开发了它们，然后这是团队，很多这些事情是一起去掉的。我认为他们在继续工作。然而，它真的不再那么快了。因为讽刺的是，赢得一块石头，或者整个解释性保护它的数据结构。在高效的情况下，如果移除一块石头，然后它可能会与新石头一起工作。
- en: it's no longer that fast。 Moreover， the latter was at the time， I mean。 both
    the naked works in a way where， if we are the core， your program scales up kind
    of like nearly。 If you would expect this， right？ If you have a program that is，
    you know， times with one thread。 it takes more time than one that， you know， you
    use four threads for it。
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 它不再那么快了。此外，后者在当时，我是说。两者裸露以一种方式工作，如果我们是核心，你的程序扩展几乎像预期的那样。如果你期待这个，对吧？如果你有一个程序，你知道，使用一个线程的时间。它比你知道的那一个使用四个线程的程序需要更多时间。
- en: But this is not one of your threads。 So it's pretty tricky， it's paper at all。
    and adding more cores and more threads to your program， that didn't do anything
    actually anymore。 So this is why the program， you know， is a little bit of a state，
    and it was kind of not a virtue。 Until some rows from that up came around， and
    we need to go again， and we need nine。
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 但这不是你的一个线程。所以这相当棘手，这一切都很麻烦。增加更多的核心和线程到你的程序，其实并没有做任何事情。因此，这就是为什么程序，你知道，有点状态，而且这并不是美德。直到从那个方向上有一些行出现，我们需要再次去，并且我们需要九个。
- en: And this thing relates to more extent to community。 So it's got， I think， four
    threads。 It was just lower， and I think we'll thread， because the truth of the
    matter。 that's a single rock is faster than any rock， this thing really is hard
    to， you know。 if it's done through， but it did still。 So if you put four threads
    on a program。
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 而这件事与社区有更大的关系。所以我认为它有四个线程。它只是更低，我认为我们会线程，因为事实的真相是。那块单石头的速度快于任何石头，这件事情真的很难，你知道。如果它通过，但它仍然存在。因此，如果你在一个程序上放四个线程。
- en: it would be 12 to four times faster than just within one， on the same program。
    So that's cool。 and there's a type of open， why is it in a tech thread？ Well，
    because it stands out。 although I think we'll do a nice work for you。 Depending
    on， and it's easy to do。 that having a global and local rock grid， there is a
    lot of， I can't afford， but it's much better。
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 它的速度会比在同一程序中仅仅一个线程快12到四倍。所以这很酷，还有一个开放的类型，为什么它在技术线程中？嗯，因为它很突出。虽然我觉得我们会为你做得很好。根据情况，这很简单。拥有全局和本地的Rock
    Grid，有很多，我无法承担，但这要好得多。
- en: because I was never in an issue， even if we're in a tech thread， there are a
    thick， very wide， so。 you know， it is not an easy decision， for the steering comfort
    to make。 whether we should break a thing， or in the name of the ability。 Well，
    so。 I will read that problem today， and we're gonna talk about the deal。
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我从未参与过任何问题，即使我们在技术线程中，也有很多复杂的内容。所以，你知道，这不是一个简单的决定，关于驾驶的舒适度。我们是否应该打破某件事，或者以能力的名义来做。嗯，所以，我今天会阅读这个问题，我们要讨论一下这个交易。
- en: and what we can do with having the deal。 So， like， even if we remove it。 and
    the best place to know it， most of the revenue of Python today is 3。8。 That's
    right。 while we are on the drink of 3。8 online， and it's just in the end of the
    album， the score。 you're gonna need to remove the deal， from 3。13， and it's over
    24， that's five years to that。 Well。
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用这个交易做什么。所以，即使我们移除了它。了解它的最佳地方是，今天Python的大部分收入是3.8。没错。当我们在3.8在线时，它只是在专辑的最后，分数。你需要从3.13中移除交易，它超过24，这五年就是这样。好吧。
- en: I'm not able to enjoy the deal at Python in 2030， so maybe you'll still stay
    on the clock。 because it's relevant to what I'm about to say。 Well， so， what are
    you gonna do today？
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我无法享受2030年的Python交易，所以也许你仍然会保持在时钟上。因为这与我接下来要说的相关。好吧，那么，你今天要做什么？
- en: We want to send a particularly， a long time ago， that someone in the heart of，
    you know。 is our way for Python to wait on an excellent resource， if you need
    more difficult resources。 to be available to you。 And why is it hard instead of
    waiting for one。 and then when it's complete waiting another time for another
    one， for a new thing around。
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要特别地发送，早在很久以前，有人内心深处，知道。是我们让Python在一个优秀资源上等待的方式，如果你需要更困难的资源，可以提供给你。为什么要等待一个而不是等待另一个，等完成后再等待另一个新事物。
- en: and you say， "I'm interested in all of those， "telling as soon as I'm in this
    other way。"。 So this is essentially the basis of this thing there。 We have our
    students who， and in that group。 you're asking， "Do you have anything for me？"，
    And you can subscribe to more difficult things that we want。 to do right now，
    right？ So， I connect things and so on and so on。
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你会说：“我对所有这些感兴趣，”尽快告诉我我在另一种方式中。“所以这本质上是这件事的基础。我们有我们的学生，他们在那个小组里。你问：“你有什么给我的吗？”而你可以订阅我们想要做的更困难的事情，对吧？所以，我连接事物，等等。
- en: So this is a view of a single request from this point。 but the real matter of
    the new server that you have， will look more like this， so you have a single。
    you know。
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这是从这一点看单个请求的视图。但你拥有的新服务器的真实情况，会更像这样，所以你有一个单独的，你知道。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_9.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_9.png)'
- en: kind of request in the server， but there's going to be， mainly request for it，
    you know。 a response to send back at the same time。 And this is the basis of no
    QIS。 This is the basis of a Nginx， like， you know， asynchronous programming is
    very popular in across the board。 It is kind of a great upon that。 It is the most
    efficient way to do this。
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在服务器中的某种请求，但主要是对此的请求，你知道。一个响应同时发送回去。这就是没有QIS的基础。这是Nginx的基础，你知道，异步编程在各个领域非常流行。这是做这件事的最高效方式。
- en: It's grateful to wait on an app thread， and it's only for， you know， just waiting
    for it。 So this is what SAPO does。 It essentially allows us to maximize the usage
    of a single thread。 If you want to use any threads， just want to multiple processes。
    You want to make it before。 This is how we solve it。 And then， in terms of I/O，
    thank you for making it。
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 等待应用线程是令人感激的，这只是为了等待而已。所以这就是SAPO所做的。它本质上允许我们最大化单个线程的使用。如果你想使用任何线程，只是想要多个进程。你想要提前完成。这就是我们解决的方法。然后，在I/O方面，感谢你的付出。
- en: I also need to subscribe to changes， as they happen when you are notified。 And
    finally。 you can write a function of Nginx。 You can't， you know， it's working。
    I'm not going to be able to leave you to give you a partner on this。 Today， I'd
    like to say。 "Acee-Dale" is nice for I/O， but it's also nice for orchestrating。
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我还需要订阅更改，当发生时会通知你。最后，你可以编写一个 Nginx 的函数。你不能，知道，它正在工作。我无法让你有一个伙伴来帮助你。今天，我想说。“Acee-Dale”在
    I/O 中很好，但在协调方面也很不错。
- en: or consulting of actual computation。 For example， do I actually order for another？
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 或者咨询实际的计算。例如，我是否真的要再订购一个？
- en: So you have only a network in both ways， but it is using a same tool to make
    it possible for you。 to order form of multiple files in a directory， at the same
    time。 As long as you have an app for it。 it will use a same dialog to participate。
    So we're going to be talking about how to use it， for。 you know， data science
    and things。 And on the time to do a partner on this account， so just。
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你只能在两种方式中拥有网络，但它使用相同的工具来使你能够同时在一个目录中对多个文件进行排序。只要你有一个应用程序，它就会使用相同的对话框来参与。因此，我们将讨论如何使用它，知道，数据科学和其他事情。在进行这个帐户的合作时，就这样。
- en: you know， and there is something that there are， issues in function or those
    issues in this。 And then， in our own thing， an array or the things that， you know，
    can be known as I/O。 So things can happen at the same time， and we're waiting
    for them。 The nice thing about this is that it leads from top to bottom。 And in
    example。
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道，还有一些功能中的问题或这些问题在这里。然后，在我们自己的东西中，一个数组或那些你知道的东西可以被称为 I/O。因此，事情可以同时发生，我们在等待它们。这件事的好处在于它是从上到下引导的。在例子中。
- en: here we're awaiting on a download of file 1， and only after that complete。 we're
    awaiting the file 2。 You can download and on after that complete。 we're awaiting
    for file 3 to download。 So those things are still like we are。 we can read it
    from top to bottom， you know， and hold back nonsense， no， hold back confusion。
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们正在等待文件 1 的下载，只有在它完成后，我们才会等待文件 2。你可以下载，完成后，我们将等待文件 3 下载。所以这些事情仍然像我们一样，我们可以从上到下阅读，你知道，并排除无意义的内容，不，排除困惑。
- en: But we can't do some logic there， and make the house of the isn't very gathered。
    We can make those things happen at the same time。 Good luck， thank you。 Well。
    if you would want to know more about this， I actually made like a piece of big。
    a little while back that are， like， an in-depth introduction to the isn't there。
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们不能在这里做一些逻辑，使得事情并不那么紧凑。我们可以让这些事情同时发生。祝你好运，谢谢。那么，如果你想了解更多关于此的内容，我实际上在不久前做了一个较大的项目，像是一个深入的介绍。
- en: So I encourage you to do so。 I think I know as the framework that allows Python。
    to be high-performance enough for production application。 And in fact， as we did
    yesterday。 it is written in Python， and it is written using asynchronous and it
    is high-performance。 So。 back to my thinking。 I was thinking about it in these
    days。
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我鼓励你这样做。我认为我知道这个框架可以让 Python 具备足够高的性能以用于生产应用。实际上，正如我们昨天所做的，它是用 Python 编写的，并且是异步编写的，性能很高。所以，回到我的思考。我这些天一直在考虑这个。
- en: We'll just hear with some time series data， so we're going to use some fun data
    frames。 that are built-in objects in one column， and some numbers in a second
    column。 Because despite things out， sometimes the number will be， none， so no
    fun numbers。 It was something wrong in the middle， in a bad individual。 And so
    on。 So， because， in fact。
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将仅使用一些时间序列数据，因此我们将使用一些有趣的数据框。这些数据框是内置对象，第一列是对象，第二列是一些数字。因为有时候数值会是零，所以没有有趣的数字。在中间发生了某些错误，在某个坏个体上。等等。因此，实际上。
- en: if you say， "I don't really have a great real-world example for you there，"。
    but it will enable us to see all the new data。 So， in this example。 my mind works
    best with examples， so we are able to focus on the processing products。 Later
    on。 you can add on a server on top of those。 You can add more data on top of that。
    So。
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你说，“我真的没有一个很好的现实例子给你，”但这将使我们能够看到所有的新数据。所以，在这个例子中，我的思维在实例中运作得最好，因此我们能够集中于处理产品。稍后，你可以在这些上面添加一个服务器。你可以在其上添加更多数据。所以。
- en: there is a focus on the processing data。 The processing data is simple。 So。
    you can load some data from somewhere， and we process it， and then you can turn
    it。 But， obviously。 the data is bigger than what you can handle， and that's what
    we've referred。 or maybe even on a single machine。 What you have to do is， you
    have to switch to the data。 Somehow。
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这里重点在于处理数据。处理数据很简单。所以，你可以从某处加载一些数据，我们处理它，然后你可以转换它。但是，显然，这些数据比你能处理的要大，这就是我们所提到的。或者可能在一台单机上。你需要做的是，你必须切换到数据上。不知何故。
- en: that is where it works， and only later you turn it。 So， this is what we're going
    to do。 And at first， we're going to have this example with， you know， going to
    serialize processing。 Later on， we're going to split and apply some magic。 and
    we're going to see that the cooking one is 25 times faster。 So， you know， we'll
    put it all in。
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是它工作的地方，只有后来你才转换它。所以，这就是我们要做的。起初，我们将有这个示例，你知道，要进行序列化处理。稍后，我们将拆分并应用一些魔法。我们会看到烹饪的速度快了25倍。所以，你知道，我们会把所有的放进去。
- en: Anyway， I will be showing the code， but that's the image all of the pattern，
    and if you are like me。 you get somebody disrupted by saying， that this unit but
    you don't like understanding because。 we are using cultural functions that don't
    mean， you can set your source。 I like to use one slide。 and you can see that you
    can see that you have。 The print is not a print。
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，我会展示代码，但这就是所有模式的图像，如果你像我一样。有人通过说，这个单位，但你不喜欢理解，因为。我们使用的文化函数并不意味着你可以设置你的源。我喜欢使用一张幻灯片。你可以看到你有的。打印不是打印。
- en: because I wanted the print to be nice。
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我想让打印看起来不错。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_11.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_11.png)'
- en: and I wanted it to be colorful， and I wanted it to show us which profit we're
    in。 So。 we're using the print to essentially just show us， you know。 in colors
    that are existed from a sign that's been approved， and this is a profit we're
    in。 And then， there's our many users in the bottom。 The only thing that does is
    it uses this model。
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我想让它色彩丰富，我想让它向我们展示我们处于哪个利润之中。所以。我们使用打印基本上只是向我们展示，你知道。以已经被批准的标志的颜色显示，这就是我们所处的利润。然后，底部还有我们的许多用户。唯一做的就是使用这个模型。
- en: which you can use as well， to tell you all the print and the movie data。 and
    the print and the movie data。 So， without the delay， our main。 the instant font
    on our model is making a data。 So， of course， like in the real world。 what you
    would have is you would get the data from。
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以用它来告诉你所有的打印和电影数据。以及打印和电影数据。所以，毫无延迟，我们的主要。我们模型上的即时字体正在生成数据。所以，当然，像在现实世界中。你所得到的就是你将从中获取数据。
- en: somewhere you would need to know if you were going to generate some。 So。 did
    you just wait for us to delay？ That would just be the case。 and they were playing
    with an optical file。 So， this is what we're doing。 We need to do this on a nice
    way to do this， or with one part or on the outside。
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 某个地方你需要知道如果你要生成一些。所以。你只是等我们延迟吗？那就只是这种情况。他们正在玩一个光学文件。所以，这就是我们在做的。我们需要以一种良好的方式来做这个，或者用一个部分或者在外面。
- en: We can tell in the outside， but that still didn't work。 With this case， and
    also， among the time。 but we only had to do this once， with our big bear model，
    so far。 It is 45-year-old big。 which is barely enough to fix in my last-class
    moment， where you can run。 because you have a lot of 60-year-old。 It's like， cool。
    So。
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在外面说，但这仍然不起作用。就这个案例而言，还有在时间上。但我们只需要做一次，用我们的“大熊”模型，到目前为止。它是45岁的大。几乎足够修复在我最后一节课的时刻，你可以运行。因为你有很多60岁的。这就像，酷。所以。
- en: I cannot even tell you if you can get the data。 Like， no， it means you can run
    after the moment。 But it's still a lot， right？ And it still takes a lot of time
    to process this amount of data。 even with more input。 So， yeah， okay， let's go
    with that。 So， a little more than 45-year-old big。 or a bigger file。 And ultimately，
    you know， can reveal the new game of this big data file。
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我甚至不能告诉你你是否可以获取数据。就像，不，这意味着你可以在那一刻运行。但是仍然很多，对吧？而且处理这些数据量仍然需要很多时间。即使有更多的输入。所以，是的，好吧，让我们这样做。所以，稍微超过45岁的大的。或者一个更大的文件。最终，你知道，可以揭示这个大数据文件的新游戏。
- en: It's a little bit like this one。 How are you going to process it？ There's a
    lot of functions。 I would be going to call a noun song on this。 It is an example。
    Usually。 what you want to see here is the system processing that is really not。
    being really kind of decomposable by you。 It is not something you need to call
    to process the data on。
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这有点像这样。你将如何处理它？有很多函数。我会在这个上调用一个名词歌。这是一个例子。通常。你想在这里看到的是系统处理的东西，实际上并没有。被你真正地拆解。它不是你需要调用来处理数据的东西。
- en: Nantam， great example。 This is before to not apply， maybe from the non-buyer。
    considering we were here。 I want to say that in the non-buyer， in the main pieces。
    we are doing this thing on the， inside with a large set of data， real， core， linear
    data。 So。 other threads in the program will be able to do something else while。
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Nantam，好的例子。这是在不应用之前，也许来自非买方。考虑到我们在这里。我想说在非买方中，在主要部分。我们在这里做这个事情，内部使用一个大型的数据集，真实、核心、线性数据。因此，程序中的其他线程能够做其他事情。
- en: known by this country in London。
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在伦敦被这个国家所知。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_13.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_13.png)'
- en: Well， always， I'm not sure if it is just there。 But often enough。 the non-buyer
    is super efficient to follow its own array。
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，我不确定是否就在这里。但通常情况下，非买方非常高效地跟随自己的数组。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_15.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_15.png)'
- en: But don't mind this is just an example， but it shows up processing the dot-hole。
    The dot holds off this thread on instant all from doing anything else。 You think
    they always want to have a very short moment of processing so that you can go
    back。 to the even-driven app。 Do you have anything else for them？ Otherwise， you
    can't have an release。
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 但是不要在意，这只是一个例子，但它显示了点孔的处理。点孔暂时中断了这个线程，阻止做其他任何事情。你认为他们总是想要有一个非常短暂的处理时刻，以便你可以返回到事件驱动的应用程序。你还有其他任何东西给他们吗？否则，你无法发布。
- en: Of course， all the other requests， responses， or health tips。 or two-million-ish
    functions that you have in your application， and so on and so on。 So。 this is
    like an example， because you are in the non-buyer， and you think that is that。
    So。 you will be kind of breaking this down on through multiple processes。
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，所有其他请求、响应或健康提示，或者你在应用程序中有的两百万个左右的函数等等。因此。这就像一个例子，因为你在非买方，你认为就是这样。所以，你会通过多个过程将其拆解。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_17.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_17.png)'
- en: Yeah。 Okay。
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，可以。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_19.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_19.png)'
- en: Okay。 Main， interesting， but there's not much interesting things that happen
    here。 even though there's a few lines。 The most important thing here is that we
    are using our process for every single form as an array。 And we can say one more
    thing， we can say a hundred or a hundred or a hundred。 One more thing here is
    we have all these data， right， that is given to us as we include arguments。
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧。主要是有趣，但这里发生的事情不多。即使有几行。这里最重要的是我们在每一个表单上都使用我们的过程作为一个数组。我们还可以说另一件事，我们可以说一百或者一百或者一百。这里还有一件事是我们拥有所有这些数据，对吧，这是我们在包含参数时给我们的。
- en: only or something like into batches， and into those batches， you are running
    in unexecuted， right？
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅是将其放入批次中，而在这些批次中，你是在未执行的状态下运行，对吧？
- en: So， you've got run and a digital run or talk a function with this slice of data。
    This slice of data is going to be a specific amount by far， and then we're waiting
    for results。 which is single or wait for。 We have very， so， instance， I have a
    wait。 Only to onward with summing up the result， which is the final phase of master's
    use。
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，你有一个运行和一个数字运行，或者用这段数据谈谈一个函数。这个数据片段会是一个特定的数量，然后我们在等待结果。是单个还是等待。我们有很多，因此，举个例子，我有一个等待。只是继续总结结果，这是大师使用的最后阶段。
- en: where the using of bachelor's vaults can be a total sum。 Well， so。 you can actually
    have many work so that you can have one， and you can have multiple。 So。 how do
    we run the entire thing？ Well， you can see that we can go to a system of slide
    where we can get the process model。 or to be able to actually implement that data
    later on， and just slide it。
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，使用学士的保险库可以是一个总和。好吧，你实际上可以有很多工作，这样你可以有一个，也可以有多个。那么，我们怎么运行整个东西呢？好吧，你可以看到我们可以进入一个幻灯片系统，在那里我们可以获得过程模型。或者能够在后续实际实现这些数据，并且只是滑动它。
- en: We wrote a data from our pickle file， and then we're going to use the data to
    run our main system function。 So， how does this look like for a single worker？
    A single worker will take a little under one whole 60 seconds to complete。 for
    two billion records， the maybe that's not for bad， but， well。 my last I had more
    than a single score。 So， how about we add more workers to this？ So， we add four。
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从我们的pickle文件中写入了数据，然后我们将使用这些数据来运行我们的主系统功能。那么，对于单个工人来说，这看起来怎么样？一个单独的工人将花费不到整整60秒来完成。对于20亿条记录，这可能还不错，但是，我的最后一次有超过一个分数。那么，我们如何添加更多工人呢？所以，我们添加了四个。
- en: and it's only a 59， now。 The fourth goal is that I have 10 scores next to it。
    So。 let's introduce more workers， and see if it's faster with 10。
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在只有59。第四个目标是我旁边有10个分数。那么。让我们引入更多工人，看看用10个工人是否更快。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_21.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_21.png)'
- en: It's not。 And， maybe we add it。 Maybe we can pull on a slide already in the
    white exhibit。 but it is quite a bit of a function。 We don't know how to include
    it。 The function one is that it takes our own problem， or any worker's process，
    even on your team。 or a billion。 The third worker's process wastes almost 10 seconds
    to get a new thing that we can work with。
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 不是的。也许我们添加它。也许我们可以在白色展览中拉动一个幻灯片。但这确实是一个相当复杂的功能。我们不知道如何将其包括进去。功能之一是，它需要我们自己的问题，或者任何工人的进程，即使在你的团队中。或者十亿。第三个工人的过程几乎浪费了10秒来获取我们可以使用的新东西。
- en: and the last one waits over a minute to do anything。 So， the fact that these
    two are more capable。 whether it will help us at all， build this algorithm until
    they get to zero。 And， what do we want？
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 而最后一个则需要等待超过一分钟才能做任何事情。因此，事实上，这两个更有能力。它是否能对我们有所帮助，构建这个算法直到他们达到零。我们想要什么？
- en: Well， our new thing is new of the world。 At this point， we have this one main
    process that's。 a very applicable worker than the previous one。 But， in truth。
    there is a little more subtle issue there。 We have to serialize the data first
    to pass it to a top player。 which in turn just gives zero， liability。 We are using
    people for this。
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，我们的新事物是世界的新事物。在这一点上，我们有一个主要进程，这是一个比之前更适用的工人。但实际上，这里还有一个更微妙的问题。我们必须首先序列化数据，以便传递给一个顶级参与者。后者则只给出零，责任。我们在为此使用人力。
- en: so there's a good thing on the bounce side and I'm pushing on the view side。
    And the problem there is that there is only one deposit。 So， there can only be
    one deposit。 but that's all the fitting of this entire 45-year data。 And this
    is obviously an issue。 We need to have to do something about it。 Better， if you
    actually see what is happening。
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 所以在反弹方面有一个好东西，而我则在视图方面施压。而那里的问题是，只有一个存款。所以，只能有一个存款。但这就是整个45年数据的适应情况。这显然是个问题。我们需要对此采取措施。如果你实际看到发生了什么，会更好。
- en: the example is extremely philosophical because it takes 10 seconds to get the
    data and then zero point。 only one second could compute for a lot。 So， obviously。
    adding more workers to this only make matters worse。 I think it makes no sense
    to operate like this。 But， in fact， I would go rocky。 And， uh， serialize itself
    by mistake because if it was bidding。
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子极其哲学，因为获取数据需要10秒，然后是零点。只有一秒钟可以计算很多。所以，显然，添加更多工人只会让事情变得更糟。我觉得这样操作毫无意义。但是，实际上，我会变得摇摇欲坠。呃，因为如果是竞标的话，会错误地序列化自己。
- en: you would run out of memory。 The main problem already takes 50 gigs of memory
    and it seems that the worker processes would remain in case 4。5 gigs at the same
    time， but one would be in trouble in my luck work。 I would use the start-slap
    in any memory。 That would be very mechanical。 So， what can we do？ Well。 we can
    use this for an online account。 Well， in fact， or else， one would be next， that
    would be the。
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 你将会耗尽内存。主要问题已经占用了50GB内存，而工人进程似乎会同时保持在4.5GB，但在我运气不佳的情况下就会遇到麻烦。我会在任何内存中使用start-slap。这将非常机械。那么，我们能做些什么呢？嗯，我们可以为一个在线账户使用这个。事实上，否则，接下来就会是这个。
- en: 。is the。 。is the course of 4。 So， in a hard process， we have a program， uh，
    point-barre。 and two-rate， we make this much more than an exit field and it has
    to be a segment in memory。 It can stay 4， you'll see it in a house possible。 From
    the process that you're already on。 So。 my only way to do it is you would decrease
    an instant memory for the program and an instant memory for the data。
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 是的。是的，4的课程。所以，在一个困难的过程中，我们有一个程序，呃，point-barre。和两个速率，我们让这个比一个退出字段多得多，并且它必须在内存中有一个片段。它可以保持4，你会在一个可行的房子里看到它。来自你已经在的过程。因此，我唯一能做到的是，你需要为程序减少一个瞬时内存，并为数据减少一个瞬时内存。
- en: And you'd switch the form to somewhere and it's our process and it's our running。
    The problem with that is that it's going to be slow because it's the process of
    leaving out of memory。 copying this all， like， the visual type space， it's pretty，
    you know， 10 consumers。 So， for a 4。2-in-5， let me see if it's a case where it
    just avoids how the program uses the memory。
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你会把表单切换到某个地方，这是我们的过程和运行。问题在于这会很慢，因为它是离开内存的过程。复制所有这些，就像，视觉类型空间，差不多，知道，10个消费者。因此，对于4.2-in-5，让我看看是否有这种情况，它只是不避开程序如何使用内存。
- en: and as long as it's only in memory， we don't really need to copy the files on
    the menu space。 Only if the time for child needed any of the data。 now you actually
    have to keep your own perspective properly。 So， including W。B。 unimprovement for
    it。 Or in fact， if it's not because Python's memory management is such a way to
    boost up even objects for me。
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 只要它仅仅在内存中，我们实际上不需要复制菜单空间上的文件。只有当孩子需要任何数据时，才需要这样做。现在你确实需要保持自己的视角。所以，包括W.B.对它的未改进。实际上，如果不是因为Python的内存管理方式，即使对象也会为我加速。
- en: create memory rights。 Because of our garbage products， we're just here。 Having
    a buffer flow。 I created an instant， I'd say， let's add this new 3 functionality
    that at a time would really involve Instagram。 and then， you know， for me， please
    start the server。 Please。 for an object so that they will never be mutated by
    Python's garbage products。
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 创建内存权利。由于我们的垃圾产品，我们就在这里。拥有一个缓冲流。我创建了一个瞬间，我会说，让我们添加这个新的3功能，实际上会涉及Instagram。然后，你知道，请启动服务器。请。为了一个对象，以便它们永远不会被Python的垃圾产品改变。
- en: so that's what you're unerided actually being useful。 But in our case。 if you
    want to ever have more than one data set to be in a role to our program。 that
    is what we're just going to help with。 Because， you know。 if any of you need one
    to be able to process the data out of the car。
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 所以你实际上在使用时是有用的。但在我们的情况下。如果你想让多个数据集在我们的程序中有角色。那就是我们要帮助的地方。因为，你知道。如果你们中的任何人需要一个能够处理数据的。
- en: and so just leave in terms of not sensible， but now about the purpose of the
    ordeal or。 as we've called， pop into a tool。 Honestly， very clever about this，
    this is often very promising。 obviously， to Python。 What it does is it allows
    us to have an in-go process。 how multiple isolated and， difficult， so we are in
    attendance。
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 所以只是在不合理的情况下留下，但现在关于这一切的目的，或者说我们称之为，跳入一个工具。老实说，关于这一点非常聪明，这通常非常有前景。显然，对Python而言。它的作用是让我们拥有一个内置的过程。如何多个隔离且困难，因此我们在出席。
- en: and in attendance is the key word for it。 We don't have any data for it。 Objects
    of the one individual are invisible to the other individual。 So， suddenly。 there
    is no kind way to say data there。 All of the time implemented it。 because then
    the main fifty-two makes sure that one individual does not step on another's toes。
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 参与是关键字。我们没有任何数据。一个个体的对象对另一个个体是不可见的。所以，突然之间。没有一种好方式来表达那里的数据。所有时间都在实施它。因为主要的五十二确保一个个体不会踩到另一个的脚。
- en: in the same process。 We can also achieve it， but these four have some work there
    in the future to actually make the Australian better matters or you can use from
    this thing。 And again， that's the opportunity for all of the people to be well，
    so by the time you get to it。
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一过程中。我们也可以实现它，但这四个在未来确实需要一些工作，以使澳大利亚的事务更好，或者你可以使用这个东西。再一次，这是所有人都有机会的，所以等到你到达时。
- en: you're going to be able to help。 So， what we want is， here is the mainly。 The
    main topic of this talk is that， I'm moving on to the instance of a future operating
    system all around。 It's supported by Windows。 It's supported by my Mac OS。 Obviously，
    it works in Linux。 So。 I'm currently surprised it's not in a more popular way。
    So。
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你将能够提供帮助。所以，我们想要的是，主要就是这里。本次演讲的主要主题是，我正在转向未来操作系统的实例。这是由Windows支持的。我的Mac OS也支持。显然，它在Linux上也能工作。因此。我目前感到惊讶的是，它没有以更受欢迎的方式出现。
- en: we're going to be using it in a Linux program。 And it just seems like you have
    to make the online system that you have to add。 And fundamentally， it's not entirely
    that complicated。 We're going to be doing it。 We're going to be using a third-manly
    manager。
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在Linux程序中使用它。似乎你必须制作你需要添加的在线系统。从根本上说，这并不是特别复杂。我们会这样做。我们将使用一个第三方管理器。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_23.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_23.png)'
- en: And with a third-manly manager， we're calling a third-manly segment。 So， in
    today's topic。 we'll be seeing how let's say it's as a bit as a data set up in
    a minute。 If you have a production application， we probably want it to be bigger。
    I would say that it's a bit of a request later on， which I'm still excited。
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 而且与第三方管理者一起，我们称之为第三方片段。所以，在今天的主题中。我们将看到，假设在一分钟内数据集的情况。如果你有一个生产应用，我们可能希望它更大。我会说，这稍后会提出一个请求，我对此仍然感到兴奋。
- en: I would say that we can really just say the same size of bytes as the data that
    we're enjoying。 And then we can use the number of magic powers， which is to create
    an array not to existing in a new buffer。 If you do here， then we just copy our
    people to the third-manly。 It is a little annoying。 I have to copy here。 And it's
    not a funnel。 I mean。
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我会说我们可以真的说与我们正在享用的数据的字节大小相同。然后我们可以使用一些魔法力量，这就是在新的缓冲区中创建一个不依赖现有内容的数组。如果你在这里这样做，那么我们只需将我们的内容复制到第三方。这有点麻烦。我不得不在这里复制。这并不是一个简单的流程。我是说。
- en: I do need to call for the brain to write to a third-manly directory or some
    form。 Or we could use everything。 This is the relation method that we write to
    this third-manly array for the main directory。 But it is one of these points，
    which is， for example， just haven't learned that。 Not only do you have to copy
    it， I can see it。 But this one is happening on the main service once。
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我确实需要调用大脑以写入第三方目录或某种形式。或者我们可以使用所有内容。这是我们为主目录写入这个第三方数组的关系方法。但这只是其中一点，例如，根本没有学到这一点。不仅仅是你需要复制它，我可以看到它。但这一点是在主服务上发生的。
- en: and then we don't have to do anything ever again。 So， this one was the old situation。
    We use not our main function except the data。 So， we're going to need that as
    we were talking arguments through the process function in the editor。 We're going
    to continue in this slide now， because we don't want to actually copy data to
    the process function。 And so， what we want to do is we want to use the old community
    to third-manly run the work with the floor。
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们就再也不用做任何事情了。所以，这是旧的情况。我们除了数据之外不使用我们的主要功能。因此，在编辑器的处理函数中，我们需要将参数传递下去。现在我们将在这张幻灯片中继续，因为我们实际上不想将数据复制到处理函数中。所以，我们想要做的是利用旧社区来第三方运行与底层的工作。
- en: So， now we will be owning copy of tiny metadata， right？ So。 the process function
    will accept the short-moment segments in。 The short-moment segments in the data
    are so that you can use it directly with non-buy on the work side。 But you can't
    throw a number of those how big some elements in the work side and some windowing。
    So。
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，现在我们将拥有一份小元数据的副本，对吧？所以，处理函数将接受短时段的片段。数据中的短时段片段是为了让你能直接在工作侧与非买方一起使用。但你不能随意抛出一个数字来表示工作侧上某些元素的大小以及一些窗口设置。所以。
- en: you know， it's going to be an offset on a batch size that is working to know
    about it。 Because now you have to since many of the segment that we've shared。
    and you have to tell it's work like that you view it's good for it。 whereas the
    other worker would view it's good for it and so on and so on。
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道，这将是一个关于批量大小的偏移，正在起作用。因为现在你必须处理我们共享的许多片段。你必须告诉它的工作方式，这样你才能认为它是有效的。而其他工作者也会认为这样是有效的，以此类推。
- en: and then all the other ones are not very good for it。 So。 now we already post-the
    metadata to the purpose function。 and we need to modify the process function。
    So， before it was nice and clean。 now it's going to be only nice and clean， but
    to build a close-beat as possible。
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 然后所有其他的都不太适合。因此，现在我们已经将元数据发布到目的函数。我们需要修改处理函数。所以，之前它是整洁的。现在它只会尽可能保持整洁，但构建得紧凑一些。
- en: it might have grown out， you know， to be sure， right？ You can give it a little
    more argument。 All I like is transportation。 So， yeah， other than not。 we just
    clean the language that we've been to， said。 went back with the name that we need
    to have provided。 And again。
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 它可能已经发展出来了，你知道，得确保，对吧？你可以给它更多的参数。我喜欢的就是运输。因此，除了不这样做。我们只是清理我们所说的语言。回到我们需要提供的名称上。再次。
- en: we create the array from an existing buffer。 We don't need to cook it through
    it anymore。 We can use whatever is already there。 Or we can actually use the non-submarine。
    But now we have to use our window for our offset on the batch size to cross over
    some or the settings that we want。
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从现有的缓冲区创建数组。我们不再需要通过它来处理。我们可以使用已有的内容。或者我们实际上可以使用非潜艇方式。但现在我们必须使用我们的窗口来针对批量大小的偏移，以覆盖我们想要的一些设置。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_25.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_25.png)'
- en: And it does mean that's it。 So now， when we have all this。 there is no data
    coming through the process anymore， only calling the creator。
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这确实意味着结束了。所以现在，当我们有了这一切时，数据再也不会通过这个过程，只有在调用创建者。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_27.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_27.png)'
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_28.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_28.png)'
- en: This is awesome because the situation before we got the serial vision and the
    serial vision picked our own time。 This is no going away。 We're still still alive
    and into alive and only now we're doing this on only the issue of information。
    right？ We talk to the worker software。 We have a good question。 And， you know。
    it was then a very quick response to how to serialize this。 So many people don't
    need information。
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这是很棒的，因为在我们获得串行视觉之前，串行视觉选择了我们自己的时间。这并没有消失。我们仍然活着，并且现在我们只是在信息的问题上做这个。对吧？我们和工人软件交流。我们有个好问题。而且，你知道。然后对如何序列化这个问题的回应非常快速。所以很多人并不需要信息。
- en: But now， with those necessary data， we are able to access the statement about
    directly from the worker。 So， how fast it will move the second。 So， yeah， that's
    mainly the 25-S improvement that I told it。 So， let me show you the slide again。
    Cool， we won。 This is the excited。 There are some problems。 So。 you know， I'm
    on the spectrum。 I'm going to try to get it in my board and write it in my eyes。
    But。
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 但是现在，有了这些必要的数据，我们能够直接从工人那里获取声明。所以，这个过程的速度将会如何变化。所以，是的，这就是我所提到的25-S改进。所以，让我再给你展示一下幻灯片。太好了，我们赢了。这是令人兴奋的。但是也有一些问题。所以，你知道，我有些特殊。我会尽量把它记录在我的板子上，并写在我的眼前。但是。
- en: 25-S， you can。 Anyway， now we actually see that the time to receive the response
    is essentially。 we can just ignore it。 The first process， the first worker software
    in the last worker software。 which is the request essentially after same time，
    which is what we wanted。 We think that there is a time only because time is planned
    for actually between the end of the year and the end of the year。
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 25-S，你可以。无论如何，现在我们实际上看到接收响应的时间基本上。我们可以忽略它。第一个过程，最后一个工人软件中的第一个工人软件。请求本质上是在相同时间之后，这正是我们想要的。我们认为只有时间存在，因为时间实际上是在年末和年末之间规划的。
- en: And the time only is planned for the worker。 But， sure， as well， for any other
    second storage。 it's also time to protect what we want before。 So， that's it。
    And then the process is actually not because now， like， then there's periodically
    in power。 Like。 the software is one-plus is five， it's five， so then one-plus
    is nine。
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 时间只为工人规划。但是，当然，对于任何其他的二次存储也是如此。现在也是保护我们之前所想要的东西的时间。所以，就是这样。然后这个过程实际上并不是因为现在，比如说，电力是周期性的。就像。软件是一个加一就是五，五，所以一个加一就是九。
- en: And then it's called one-plus is four， and then you can see that in all of the
    storage。 but they all converge。 And actually， it's called back-by-roll， which
    is awesome。 And the nicer thing is that the product， how it works right now。 we
    can mainly use it with five times slower， but an actual memory， which。
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 然后称之为一个加一就是四，你可以在所有存储中看到这一点。但它们都收敛了。实际上，它被称为回滚，这是很棒的。更好的地方在于，产品目前是如何工作的。我们可以主要以五倍的速度使用它，但实际的内存是。
- en: as the time was going back， it just has to be zero。 And we're not really needing
    many， anymore。 I would switch this one-point number。 So， it's often。 I would note
    that the topic is why you need to take a second time on actually doing the total
    to restore memory settings。 And this is， again， something that will be cool， but
    it could do it。 Or。
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，它必须归零。而且我们实际上不再需要很多。我会切换这个一点的数字。所以，这通常是。我会注意到这个话题是为什么你需要在实际进行总恢复内存设置时花费第二次时间。这再次是一些很酷的东西，但它可以做到。或者。
- en: if you have a little bit of a "no，" that's just a road to show memory， you actually
    take a second。 But I'll just leave this up for more to you。 Since we've been considering
    to keep five times， like。 we're moving into those awesome times， where， like，
    what do they work on， like， they're even good。 So， anyway， even if you like it，
    this is not so horrible， you will always be stuck with this。
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一点点的“不”，那只是展示记忆的一条道路，你实际上需要花一秒钟。但是我就先留给你更多的思考。因为我们一直在考虑保持五次，比如。我们正进入那些令人惊叹的时代，他们在做什么，像，他们甚至做得很好。所以，无论如何，即使你喜欢，这也并不是那么糟糕，你总会被困在这里。
- en: If you still combine those two numbers， it's still five times faster than your
    serialized memory。 so it's still worth it。 And here we have， here we have， here
    you're awesome。 because there's no serialization。 Overhead， 2-power， up to 2-power
    data， and， yes。 overall memory consumption。 On this right side， I used to， I could
    see that it was more code。
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仍然结合这两个数字，它仍然比你的序列化内存快五倍。所以这仍然是值得的。在这里我们有，这里我们有，你真棒。因为没有序列化开销，2的幂，达到2的幂的数据，还有，是的。整体内存消耗。在右侧，我过去可以看到那是更多的代码。
- en: and you actually have to assign it all。 This is called memory， memory。 memory
    and the programming name。 You have to pop well， then you know。 from a site with
    four off-the-back and every time you have to save， there's different， more code。
    And more important， it probably gives you advantage to that with 2-power， up-to-3-4
    data。
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 而且你实际上必须分配所有这些。这被称为内存，内存。内存和编程名称。你必须处理好，然后你就知道了。来自一个有四个后端的站点，每次你必须保存时，都有不同的更多代码。更重要的是，它可能给你带来2的优势，达到3-4的数据。
- en: I realize that I also listed it as an advantage， but if you actually mutate
    the code data from one of the processes。 you might end up in a situation where
    the data structure is flat， complete， not mutated。 It's not serious， don't do
    anything， and another process actually can currently， actually。 in parallel， is
    actually limited as flat-rate processes。 So， if you're a fully-made sub-cell。
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我意识到我也把它列为一个优势，但如果你实际上从某个过程变更代码数据，你可能会遇到一个数据结构扁平、完整且未变更的情况。这并不严重，不用做任何事情，另一个过程实际上目前可以并行地进行，实际上被限制为固定费用的过程。所以，如果你是一个完全制作好的子单元。
- en: but if you really want to put a rating， it works again。 So。 if you need to use
    this in my phone to make sure that you're not putting on a set of thousand。 when
    you're mutating your data， you need to do this explicitly。 And you're in a nice
    helper。 and the two of my main supports， and if you go through that， that can
    help you。
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 但如果你真的想给出一个评分，它再次有效。所以，如果你需要在我的手机上使用这个，以确保你没有设置成千上万。当你变更数据时，你需要明确地这样做。你在一个不错的助手中。而我主要的两个支持，如果你经历了这一点，可以帮助你。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_30.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_30.png)'
- en: And if you still do， let's go and try out Windows， because I promised you that
    for a memory。 it was there too。 And in fact， starting yesterday， when I actually
    reminded me about how to do it。 the Windows version of Python is actually 11 as
    well。 So， if you download Windows。 and Python from Windows， you're going to get
    3。11 at the moment。 So。
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仍然这样做，那就去试试Windows，因为我向你承诺内存在那里。实际上，从昨天开始，当我提醒我如何做时，Windows版Python实际上也是11。所以，如果你下载Windows和Windows上的Python，你会得到3.11。
- en: if you do and start it on PowerShell， we can now see that for many seconds，
    but not on the all-on。 but one called a terrible risk。 And inside the server，
    you can see things you can see bytes。 you can see numbers， non-enboliants， and
    that's the beginning。 You can do all of it， but do it。 I mean， it's a way for
    it to be connected， so it could be cool。
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在PowerShell上启动它，我们现在可以看到很多秒，但并不是在所有情况下。还有一种称为可怕风险的情况。在服务器内部，你可以看到你能看到的字节。你可以看到数字，非包络的，这就是开始。你可以做到所有这些，但要去做。我是说，这是一种连接的方式，所以可能会很酷。
- en: And another process that actually using the same name was on the next set length。
    which is the middle-to-side level。 So， for the cool， we can do things。 We can
    write some time-thumbs on it。 We can't write some time-thumbs。 because time-thumbs
    are this very， very simple object， and those are not supported。 With many types。
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个实际上使用相同名称的过程在下一个集合的长度上。这是中间到侧面的级别。所以，对于酷炫的事情，我们可以做一些事情。我们可以在上面写一些时间缩略图。我们不能写一些时间缩略图，因为时间缩略图是这种非常非常简单的对象，而这些是不被支持的，涉及许多类型。
- en: what you can do is you can find some way， if you're right， when you're too primitive，
    like。 in which case you're too certain again。 Like， if you ever use this one，
    you'll notice both。 So。 here we can， for example， use the time-thumbs method，
    or the data object， to put it in work。 and we can make the data object in the
    other end， boom， it's the same one。 All in the into it。
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以做的是找到某种方法，如果你是对的，当你过于原始时，比如，在这种情况下你又太确定了。如果你使用这个，你会注意到两者。因此，在这里我们可以，例如，使用时间缩略图方法，或者数据对象，将其投入工作。我们可以在另一端创建数据对象，轰，这就是同一个。所有内容都在其中。
- en: but now we're about to end this new and into our new conditions， so。 if you're
    going to be doing this a lot， you're going to slow you down， right？ So。 let's
    do now what you're doing。 And most of the time， it's just an extension of the
    test。 if you're moving back。 But when you are， the nice thing is that the new
    patients of their server are the current。
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 但现在我们即将结束这个新的并进入我们的新条件，所以。 如果你要做很多这个，你会减慢速度，对吧？ 所以。 现在做你正在做的事。 大部分时间，这只是测试的扩展。
    如果你回去。 但当你这样做时，好的是他们服务器的新病人是当前的。
- en: And they're never going to end up in a situation where， I'm not big enough to
    be there。 and not know。 That's not going to happen to you， which is great， in
    terms of consistency。 And they're known by example， they were used before， which
    is a map on non-type array， or the。 how to say， the， you know， the 7-level memory。
    But if there are any changes of the speech or the other side。
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 而且他们永远不会陷入一种情况， 我不是大到足以在那里。 也不知道。 这不会发生在你身上，这很棒，就一致性而言。 他们以实例而闻名，他们以前被使用过， 这是关于非类型数组的映射，或者。
    怎么说， 你知道的，7级记忆。 但如果演讲或另一方有任何变化。
- en: that we know about it， there's going to be a test。 Here， yes， my turn。 Okay，
    so， another example。 looks to say that it's not denied in this book。 It's important，
    so we call it a language。 we know that I know。 It's not able to put one thing
    in one unit， I mean。
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道会有一个测试。 在这里，是的，我的回合。 好吧，所以，另一个例子。 看起来说在这本书中没有被否认。 这很重要，所以我们称之为语言。 我们知道我知道。
    这不能把一件事放在一个单元中，我是说。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_32.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_32.png)'
- en: So， I know， I know， one of you would actually write food。 All of you would，
    what you're telling。 can be just used as a social process， and you don't need
    to use a computer。 so why do you always put time on a patient in your slide？ No，
    I mean。 it's in parallel in this slide。 So， no， like， I think there was often。
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我知道，我知道，你们中的一个实际上会写食物。 你们所有人都可以， 你们所说的。 可以仅仅作为一个社会过程来使用，你不需要使用计算机。 那么为什么你总是在你的幻灯片上给病人分配时间？
    不，我是说。 这在这张幻灯片中是并行的。 所以，不，像，我觉得常常。
- en: because this is not your process in there， you can add so many more things and
    put the first， right。 a whole thing。 You can add progress monitoring， you can
    embed whatever you put here in the folder。 as you already have， or how to put
    this。 So， I think there are conclusions that you're in nicely in this sort of
    way。 that you know， I think there are which parts of the idea， and whatnot， like。
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这不是你在那里的过程，你可以添加更多的东西并放在第一位， 对吧。 一个整体。 你可以添加进度监控， 你可以嵌入你在文件夹中放置的任何内容。 正如你已经拥有的，
    或者如何放置这个。 所以，我认为有结论你在这种方式中很好。 你知道，我认为这是哪个想法的部分，等等，像。
- en: all the people who use it， so like， there's no excuse， because it is the way
    to write type on。 in ways that the task has to go。 Like， you know， if you really
    want task servers。 that's how you step through。 So， I would really suggest you
    look at it。 So， we'll also because。 since you are really doing things that are，
    you know， dealing with multiple things in this slide。
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 所有使用它的人，所以像， 没有借口，因为这是书写类型的方式。 以任务必须进行的方式。 就像，你知道的，如果你真的想要任务服务器。 这就是你逐步进行的方式。
    所以，我真的建议你看一下。 所以，我们也会因为。 既然你真的在做一些事情， 你知道的， 处理幻灯片中的多个事情。
- en: so concurrent things。 And， however you do， you know， the experience， or you
    think I know。 or do you think I know， don't you do that。 But， you know， there
    are multiple ways to do that。 You're going to have to send it away。 And now， you
    can send it away。 and then you can send it away in an already elegant way。 So，
    what I think is， this before。
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 所以并发的事情。 而且，无论你怎么做，你知道的，经历，或者你认为我知道。 或者你认为我知道，你不要这样做。 但是，你知道，有多种方法可以做到这一点。 你将不得不发送它。
    现在，你可以发送它。 然后你可以以一种优雅的方式发送它。 所以，我认为的是，这之前。
- en: I showed you this copy page， where everything is common。
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我给你展示了这个复制页面， 所有内容都是常见的。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_34.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_34.png)'
- en: and there are no type of things， because nothing ever fails。 And this is my
    story。 and I took almost five minutes to talk right now。 And this is so awesome。
    And then。 you can talk about it。 So， let's synthesize a theory in our process
    function by saying， you know。 it was a little short， whenever it's， it's 4th or
    6th or 11th， whatever， or。
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 而且没有任何类型的事情，因为从来没有失败。 这是我的故事。 我现在花了将近五分钟来讲。 这太棒了。 然后。 你可以谈论它。 所以，让我们通过说，你知道，
    在我们的过程功能中合成一个理论。 它有点短，无论何时， 是第4或第6或第11，等等，或者。
- en: 2th or 4th or EDD and it's up in the degree。 So， okay， that's the theory， you
    know。
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 第二或第四或EDD，并且它上升到了这个程度。所以，好吧，那就是理论，你知道。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_36.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_36.png)'
- en: And as you learn this in our technical code， in order to get rid of the whole
    thing。 it's what we've got。
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你在我们的技术代码中学习这一点，为了摆脱整个事情。这就是我们所得到的。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_38.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_38.png)'
- en: I don't expect you to be able to read this。 It just goes on exactly right， like
    where the value is。 but what you can also notice， is that， oh， it's been meaningful
    to book fully touched。 because this is one word for something。 Okay， let's talk。
    I wish you'd be something about it。 So。 what you can do is， you can drop this
    form here around the side， so it says， well。
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我不指望你能读懂这些。这正如它所描述的那样，正如价值所在。但你也可以注意到，哦，它已经对书籍的完整接触有意义。因为这是某事的一个词。好的，让我们聊聊。我希望你对此有所作为。所以。你可以做的是，把这个表格放在旁边，这样它就会说，好吧。
- en: if you try to get my result and then go to an exception and say， we're going
    to catch it。 and we're timing。 But， you know， you're going to get one exception
    from the back。 and then you're in the except for all in your bottom。 This is the
    most thing that you can do in your own format。 So。
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你试图得到我的结果，然后去一个例外并说，我们将捕捉它。我们正在计时。但，你知道的，你会从后面得到一个例外。然后你在你的底部中都是例外。这是你在自己格式中可以做的最重要的事情。所以。
- en: many of you have observed all the exceptions by signs in the story。 and then
    you have to gather them somewhere， and then you have to do something mainly with
    them。 So。 I'm not only， but most importantly， and if I'm on it this way， before
    the region。 where there are no prior texts here， I think I should be forgotten。
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 你们中的许多人已经通过故事中的符号观察到了所有的例外。然后你必须把它们聚集到某个地方，接着主要处理它们。所以。我不仅是，但最重要的是，如果我这样做，在这个区域。这里没有之前的文本，我想我应该被遗忘。
- en: It's really easy to just forget when you're excited about getting something
    wrong， and it's just。 you know， it's just making wrong。 And then， you know， you're
    going to go ahead and， you know。 now it's the， you know， phone calls problem with
    the country's SVAN。 So， now， let's go through that。 Like， instead， now， in C-11，
    you can use touch-through。 It means touch-through to the ancient risk。
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 当你兴奋于搞错某些事情时，真的很容易就忘记了，而这只是。你知道的，就是在犯错。然后，你知道的，你将继续前进，你知道的。现在这是，您知道的，国家SVAN的电话问题。所以，现在，让我们过一遍。就像，现在，在C-11中，你可以使用触摸。这意味着触摸古老的风险。
- en: the， Bosec-Bosec-Bosec-Bte-Gin。 You have a rock in which the other eye， what
    can happen？ Oh。 because what is happening now is you're commuting to the inside-the-top-through。
    and the past will guarantee that by the time you're in the touch-through， right。
    so you leave the ancient rock， all the past are done。 So， there are not going
    to be any longer。
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这，Bosec-Bosec-Bosec-Bte-Gin。你有一块岩石在另一个眼中，会发生什么？哦。因为现在发生的是你正在通往内部顶部的通勤。而过去将保证当你到达触摸时，没错。所以你离开了古老的岩石，所有的过去都已完成。因此，不会再有任何延续。
- en: It's time you know that everything is coming。 And what is going on in C-11？
    What is going on？
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 你该知道一切都在到来。那么C-11发生了什么？发生了什么？
- en: Because those are multiple processes that are really running in power。 and they
    can be mainly accepted。 In this place， we're going to take everything out by default。
    You don't have to do anything， whether there are no run or a task。 All these things
    are concrete。 rain， and the other things that you think are great。 So。
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 因为这些是多个实际上在运行的过程。它们可以被主要接受。在这个地方，我们将默认清除所有内容。你不需要做任何事情，无论是没有运行还是一个任务。所有这些都是具体的。雨，还有你认为很棒的其他事物。所以。
- en: if you don't actually add any other type of stuff， you can see that you can
    see all of these things。 You now have an exception to the roots， so if there are
    many exceptions to it。 you have all of them roots for it， so you can actually
    see all of them at once。 But。 whether it's essentially used， a high-century 11-act-act-down，
    which is already there。
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你实际上不添加任何其他类型的东西，你可以看到你能看到所有这些东西。你现在有一个根的例外，因此如果有许多例外。你为此有所有的根，因此你实际上可以同时看到它们。但。无论它是否本质上被使用，一个高世纪的11行为行为向下，已经存在。
- en: you can already react to those exceptions。 Because they're not the root。 you
    also ignore the kinds of unacceptable times， as I said before。 this will actually
    be important overall。 And with those changes， you get colors now， essentially。
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经可以对那些例外做出反应。因为它们不是根本原因。你也忽略了那些不可接受的时刻，正如我之前所说的。这实际上会在整体上变得重要。随着这些变化，你现在得到了颜色，基本上。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_40.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_40.png)'
- en: So， this is actually called in the sense that even if you forgot about the prior
    step。
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，这实际上是在某种意义上被称为，即使你忘记了之前的步骤。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_42.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_42.png)'
- en: even if you forgot about the kind of thought and exception part。
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你忘记了这种思考和例外的部分。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_44.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_44.png)'
- en: if you just defaulted to using fast foods， it would always tell you， right away。
    that something went wrong， there's an exception in the root。 And you would not
    have any tasks that are only in making it harder for you to stop。 by in your application
    with a central key or however else。 You defaulted to the actual。
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只是默认使用快餐，它会立即告诉你，出了什么问题，根本存在例外。你不会有任何任务，只会让你更难停止。通过在你的应用程序中使用中央密钥或其他方式。你默认使用的是实际的。
- en: when you change it， so I think about the central world。 because it makes it
    much easier to start your approach correctly。 Everything that is within the essential
    will be dealt with by the human root。 done with the essential。 You can obviously，
    if you're going to put a link there。
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 当你改变它时，我会想到中心世界。因为这使得正确开始你的方法变得更容易。所有在本质之内的东西都将由人类根本来处理。完成本质。如果你要在那放一个链接，你显然可以。
- en: an amazingly essential makes it worse， that's it will only cancel the part that
    is inside the block。 Which is a close-in-time time。 So， it's only a 60-hour-degree
    time， but it's amazing。 So。 I'm really happy about just what's on this phone，
    or even if it's in the middle。 or if it's even with thread。 It's really normal
    for us in our country。
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 一个令人惊讶的本质使事情变得更糟，这只会取消块内的部分。这是一个接近时间的时间。所以，这只有60小时的度数，但这是惊人的。所以。我真的很高兴这部手机上的一切，或者即使在中间。或者即使是与线程一起。这对我们国家来说真的很正常。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_46.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_46.png)'
- en: So， anyway， if I fail， and we can move on to。
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，无论如何，如果我失败了，我们可以继续。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_48.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_48.png)'
- en: I actually made them into our 45-minute talk， only about exit store in the 50-day
    store。 If you're like， "That's cool， but here you do， and explain this well。"。
    And you can give me another 10， and if I still fail， then my answer is no。 You
    can just read this question， and I'll send it back in。 So， again。
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我实际上将它们做成了我们45分钟的演讲，仅讨论50天商店中的退出商店。如果你想，“这很好，但你得做这个，并且解释得很好。”你可以再给我10个问题，如果我仍然失败，那么我的答案就是不。你可以只读这个问题，我会再把它发回去。所以，再次。
- en: what about the 50-day store in your exit and you can move them in， right？ No。
    And then， you know。 I'm not， there is no exit shooter in your country。 but it
    allows us to use public works of this emergency。 as we have shared and also to
    exit the issue。 But， again， homework， like， there's a few people here。
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 关于你的退出中的50天商店，你可以把它们移进去，对吧？不。而且，你知道。我不，在你的国家没有退出射手。但这允许我们在这个紧急情况下使用公共工程。正如我们分享的，也要退出这个问题。但，再次，作业，像是，这里有几个人。
- en: like， might be your contribution。 I invite you to， actually， play with Paitano。
    If you are reading some times， you may be able to read it。
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 可能是你的贡献。我邀请你实际上去尝试Paitano。如果你有时在阅读，你可能能够读到它。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_50.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_50.png)'
- en: My name is Luca Panda。 I'm really happy to be here。 Thanks for your presentation。
    I'm with you some questions， but I'm here to read our events。 so you can ask me
    if there are some questions。 [ Pause ]。
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我叫Luca Panda。我很高兴在这里。感谢你的演讲。我有一些问题，但我在这里是为了阅读我们的活动。所以如果你有任何问题，可以问我。[暂停]。
- en: '![](img/b6f49a000732cb2fb7f1f9181935252d_52.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6f49a000732cb2fb7f1f9181935252d_52.png)'
